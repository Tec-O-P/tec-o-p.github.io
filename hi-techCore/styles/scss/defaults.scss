
/* 
──────────────────────────────────────────────────────
gmes-defaults.css
────────────────────────────────────────────────────── */

/* 
──────────────────────────────────────────────────────
TODO: Variables
────────────────────────────────────────────────────── */


$font_default: 'Times New Roman', Times, Georgia, serif;
$font_size: 19rem; 
$font_monospace: 'Courier New', Courier, monospace;
$font_monospace_size: 17px;
$font_small: 16rem;
$font_smaller: 13rem;
$central_maxWidth: 800px; /* Padrão: 600-700px. */
$margin_horizontal: 20px; /* Apple: 16px em 320w, e 22px em 736w. */
$margin_vertical: 16rem;
$button_height: 48px;
$button_height_small: 40px;
$button_height_smaller: 32px;
$border_radius_default: 20px;
$border_radius_big: 40px;
 
// ─────────── Breakpoints ───────────

$screen_small_widthLimit: 501px; // Largura máxima de um celular.
// $screen_medium_widthLimit: 1000px; // Largura mínima de um PC.

// $tablet_height_limit: 1366px; // Altura máxima de um tablet.

$nav_expand: 565px; // VÍNCULO: Váriável JS // Altura mínima de um celular.
$hr_stop: calc(#{$central_maxWidth} + 60px);

// ─────────── z-index's ───────────

$zIndex_nav: 1000;
$zIndex_choice_d_open: 1100;
$zIndex_lightbox: 1200;

// ─────────── Colors And BG's Geral ───────────

// $color_theme: hsl(193, 100%, 50%);
//$color_theme: hsl(201, 100%, 48%);
//$color_theme: DodgerBlue;
$color_theme: DeepSkyBlue; // VÍNCULO: Váriável JS
$color_theme_clear: hsla(193, 100%, 98%, 1); 

$color_text: black;
$color_text_clear: hsl(0, 0%, 68%); 
$color_text_menu: white; 

$color_shadow_text: hsla(0, 0%, 0%, 0.15);
$color_shadow_text_strong: hsla(0, 0%, 0%, 0.3);
$color_shadow_box_inset_clear: hsla(0, 0%, 100%, 0.4);
$color_shadow_box_inset_dark: hsla(0, 0%, 0%, 0.15); 

$bg_html: white;
//$bg_html: hsl(0, 0%, 36%);
//$bg_html: url(../../images/bgs/lightbox.png)  center /100% 100%, white;
 
/*  
────────────────────────────
TODO:    > Specific Elements & Components
──────────────────────────── */

// ─────────── Header-Nav ───────────

$color_shadow_headerNav: hsla(0, 0%, 0%, 0.6);
$color_shadow_headerNav_rounded: hsla(0, 0%, 0%, 0.28);
$color_shadow_headerNav_button: hsla(0, 0%, 0%, 0.28);
$color_shadow_nav_options: hsla(0, 0%, 0%, 0.5);
$color_shadow_nav_subOptions: hsla(0, 0%, 0%, 0.26);

$bg_header: url(../../images/bgs/header.png) center /100% 100%;
// $bg_nav: url(../../images/bgs/nav.png)  center /100% 100%;
$bg_nav: linear-gradient(to right, hsl(201, 100%, 50%), hsl(193, 100%, 78%), hsl(201, 100%, 50%)); 
// $bg_nav_2: url(../../images/bgs/nav_2.png)  center /100% 100%;
// $bg_nav_selector: url(../../images/bgs/nav_selector.png)  center /100% 100%; // VÍNCULO: Váriável JS
$bg_nav_selector: hsla(0, 0%, 0%, 0.12); // VÍNCULO: Váriável JS

/*
$bg_header: linear-gradient(to bottom, hsl(197,100%,78%) 0%,hsl(200,100%,76%) 10%,hsl(203,100%,71%) 25%,hsl(204,100%,72%) 37%,hsl(204,100%,73%) 50%,hsl(203,100%,67%) 51%,hsl(202,100%,76%) 83%,hsl(198, 100%, 84%) 100%); 
$bg_nav: linear-gradient(to bottom right, hsl(204,100%,73%) 0%,hsl(203,100%,67%) 10%,hsl(193,100%,82%) 33%, hsl(193,100%,76%) 55%, hsl(170, 100%, 88%) 90%,hsl(170, 100%, 88%) 100%);
*/

// ─────────── Footer ───────────

$color_shadow_footer: $color_shadow_headerNav_rounded; 
$color_shadow_footer_icons: hsla(0, 0%, 0%, 0.12);   

$bg_footer_icons: url(../../images/bgs/footer_icons.png)  center /100% 100%;

// $bg_footer_icons: linear-gradient(to bottom right, hsl(204,100%,73%) 0%,hsl(203,100%,67%) 10%, hsl(193,100%,76%) 55%, hsl(170, 100%, 88%) 90%,hsl(170, 100%, 88%) 100%);

// ─────────── Texts ───────────

// $color_text_hx: url(../../images/colors/text_hx.png)  center /100% 100%; 199
$color_text_hx: linear-gradient(to bottom, hsl(195, 100%, 50%), hsl(201, 100%, 50%), hsl(193, 100%, 82%), hsl(230, 100%, 40%)); // hsl(246, 100%, 50%)
$color_text_hx: linear-gradient(to bottom, hsl(195, 100%, 64%), hsl(201, 100%, 64%), hsl(193, 100%, 88%), hsl(200, 100%, 50%));
$color_text_hx: linear-gradient(to bottom, hsl(195, 100%, 90%), hsl(201, 100%, 50%), hsl(193, 100%, 90%), hsl(210, 100%, 50%));
$color_text_hx: linear-gradient(to bottom, hsl(199, 100%, 90%), hsl(199, 100%, 50%), hsl(187, 100%, 87%), hsl(201, 100%, 50%)); 
$color_border_kbd: hsl(0, 0%, 95%);
$color_text_highlight: url(../../images/colors/text_highlight.png)  center /100% 100%; 
// $color_text_highlight_menu: url(../../images/colors/text_highlight_menu.png)  center /100% 100%;
$color_text_click: url(../../images/colors/text_click.png)  center /100% 100%;

$bg_kbd: hsl(0, 0%, 86%);

// Tokens:

$color_border_token_blue: hsl(195, 100%, 58%);
$bg_token_blue: hsl(195, 100%, 99%);
$color_text_token_blue: hsl(195, 100%, 46%);

$color_border_token_red: hsl(0, 100%, 74%);
$bg_token_red: hsl(0, 100%, 98%);
$color_text_token_red: hsl(0, 100%, 46%); 

$color_border_token_yellow: hsl(55, 100%, 43%);
$bg_token_yellow: hsl(60, 90%, 95%);
$color_text_token_yellow: hsl(54, 100%, 42%);

$color_border_token_green: hsl(120, 100%, 46%);
$bg_token_green: hsl(120, 100%, 98%);
$color_text_token_green: hsl(120, 100%, 42%);

$color_border_token_pink: hsl(300, 100%, 50%);
$bg_token_pink: hsl(300, 100%, 98%);
$color_text_token_pink: hsl(300, 100%, 50%);

$color_border_token_purple: hsl(300, 100%, 30%);
$bg_token_purple: hsl(280, 100%, 97%);
$color_text_token_purple: hsl(300, 100%, 30%);

$color_border_token_orange: hsl(39, 100%, 50%);
$bg_token_orange: hsl(39, 100%, 96%);
$color_text_token_orange: hsl(39, 100%, 48%);

$color_border_token_brown: hsl(25, 76%, 44%);
$bg_token_brown: hsl(25, 76%, 96%);
$color_text_token_brown: hsl(25, 76%, 44%);

$color_border_token_cyan: hsl(180, 100%, 44%);
$bg_token_cyan: hsl(180, 100%, 97%);
$color_text_token_cyan: hsl(180, 100%, 40%);

$color_border_token_purple2: hsl(249, 80%, 77%);
$bg_token_purple2: hsl(249, 100%, 98%);
$color_text_token_purple2: hsl(249, 80%, 72%);

$color_border_token_black: hsl(0, 0%, 52%);
$bg_token_black: hsl(0, 0%, 97%); 
$color_text_token_black: hsl(0, 0%, 52%);

// ─────────── Signs ───────────

$color_text_success: hsl(120, 100%, 35%);
$color_text_warning: hsl(45, 74%, 45%);
$color_text_fail: hsl(0, 100%, 50%);
$color_text_danger: white;

$color_border_success: hsl(120, 100%, 44%);
$color_border_warning: hsl(43, 74%, 72%);
$color_border_fail: hsl(0, 100%, 70%);
$color_border_danger_clear: hsl(0, 100%, 76%);
$color_border_danger_dark: hsl(0, 100%, 31%);

$bg_success: hsl(120, 100%, 91%);
$bg_warning: hsl(54, 100%, 93%);
$bg_fail: hsl(0, 100%, 94%);
$bg_danger: red;

// ─────────── Tables ───────────

$table_border1_width: 1px;
$table_border2_width: 1px;

$color_border_table: hsl(0, 0%, 85%);

$bg_table_tr_hover: $color_theme_clear; 
$bg_table_tr_hover_2: linear-gradient(to right, hsla(193, 100%, 96%, 0), $color_theme_clear 5% 95%, hsla(193, 100%, 96%, 0)); // Não use a palavra-chave 'transparent' nesta instrução, pois caso contrário vai bugar no Safari

// ─────────── Forms ───────────

$color_text_form: $color_text; 
$color_text_form_placeholder: $color_text_clear;
$color_text_form_select: $color_text_clear;

$color_border_form: hsl(0, 0%, 80%); 

// $bg_button: url(../../images/bgs/button.png)  center /100% 100%;
// $bg_select: url(../../images/bgs/select.png)  center /100% 100%; // <- Precisa ser do tipo PNG! 
$bg_select: linear-gradient(to bottom, hsl(0, 0%, 91%), white);  

// $bg_button: linear-gradient(to bottom right,hsl(197,100%,88%) 0%,hsl(200,100%,81%) 20%,hsl(203,100%,77%) 50%,hsl(204,100%,70%) 74%,hsl(204,100%,73%) 100%);

// ─────────── Switches ───────────

// --- Type Button ---

$color_text_switch_type_button_off: hsl(0, 0%, 50%);
$color_text_switch_type_button_on: white;

$color_icon_outline_switch_type_button_off: hsla(0, 0%, 0%, 0.45);

$color_shadow_box_inset_switch_type_button_dark: hsla(0, 0%, 0%, 0.33); // VÍNCULO: Váriável JS
$color_shadow_box_inset_element_type_button_clear: white; // VÍNCULO: Váriável JS

$bg_switch_type_button_off: 
// url(../../images/bgs/switch_button_shine_under.webp) center center / 200% 100% no-repeat, // <- Isso buga no Safari desktop.
linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.64), white),
hsl(193, 0%,94%); // hsl(193, 0%,88%); 
//$bg_switch_type_button_off: hsl(193, 0%,96%); 



$bg_element_type_button_blue: linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.7), white), linear-gradient(to bottom, hsl(195, 100%, 64%), hsl(195, 100%, 48%), hsl(195, 100%, 50%));
$box_shadow_element_type_button_blue: 0px 0px 0px 1px hsl(195, 100%, 66%), inset 0px 0px 9px 7px white;
$filter_element_type_button_piece_text_blue: drop-shadow(0px 0px 2px hsl(193, 100%, 40%));

$filter_element_type_button_piece_text_red: drop-shadow(0px 0px 2px hsl(0, 100%, 44%));

$filter_element_type_button_piece_text_yellow: drop-shadow(0px 0px 2px hsl(54, 100%, 33%)); // hsl(60, 100%, 29%)

$filter_element_type_button_piece_text_green: drop-shadow(0px 0px 2px hsl(120, 100%, 34%));
 
$filter_element_type_button_piece_text_black: drop-shadow(0px 0px 2px hsl(0, 0%, 30%));



$bg_element_type_button_clear_blue:  // VÍNCULO: Váriável JS
// url(../../images/bgs/switch_button_shine_under.webp) center center / 200% 100% no-repeat, // <- Isso buga no Safari desktop.
linear-gradient(to bottom, hsla(0, 0%, 100%, 0.15) 46%, hsla(0, 0%, 100%, 0.64), white), hsl(193, 100%, 80%);
$box_shadow_element_type_button_clear_blue: inset 0px 0px 9px 5px $color_shadow_box_inset_element_type_button_clear, 0px 0px 12px 0px hsl(195, 100%, 50%); // box-shadow: inset 0px 0px 9px 4px white, 0px 0px 12px 0px $color_theme !important;
$filter_element_type_button_piece_icon_clear_blue: drop-shadow(0px 0px 1px hsl(195, 100%, 60%));
$filter_switch_type_button_piece_text_clear_disabled_blue: drop-shadow(0px 0px 2px hsl(193, 100%, 34%)); 

$bg_element_type_button_clear_red: linear-gradient(to bottom, hsla(0, 0%, 100%, 0.15) 46%, hsla(0, 0%, 100%, 0.64), white),hsl(0, 100%, 87%);
$box_shadow_element_type_button_clear_red: inset 0px 0px 9px 5px $color_shadow_box_inset_element_type_button_clear, 0px 0px 12px 0px hsl(0, 100%, 62%);
$filter_element_type_button_piece_icon_clear_red: drop-shadow(0px 0px 1px hsl(0, 100%, 78%));
$filter_switch_type_button_piece_text_clear_disabled_red: drop-shadow(0px 0px 2px hsl(0, 100%, 38%)); 

$bg_element_type_button_clear_yellow:linear-gradient(to bottom, hsla(0, 0%, 100%, 0.15) 46%, hsla(0, 0%, 100%, 0.64), white),hsl(60, 100%, 52%);
$bg_element_type_button_icon_clear_yellow: linear-gradient(to bottom, hsla(0, 0%, 100%, 0.15) 46%, hsla(0, 0%, 100%, 0.64), white),hsl(60, 100%, 48%);
$box_shadow_element_type_button_clear_yellow: inset 0px 0px 9px 5px $color_shadow_box_inset_element_type_button_clear, 0px 0px 0px 1px hsl(60, 100%, 48%), 0px 0px 4px 1px hsl(60, 100%, 48%), 0px 0px 11px 1px hsl(60, 100%, 50%);
$filter_element_type_button_piece_icon_clear_yellow: drop-shadow(0px 0px 1px hsl(60, 100%, 40%));
$filter_switch_type_button_piece_text_clear_disabled_yellow: drop-shadow(0px 0px 2px hsl(54, 100%, 28%)); 

$bg_element_type_button_clear_green: linear-gradient(to bottom, hsla(0, 0%, 100%, 0.15) 46%, hsla(0, 0%, 100%, 0.64), white),hsl(120, 100%, 77%); 
$box_shadow_element_type_button_clear_green: inset 0px 0px 9px 5px $color_shadow_box_inset_element_type_button_clear, 0px 0px 0px 1px hsl(120, 100%, 72%), 0px 0px 12px 0px hsl(120, 100%, 50%);
$filter_element_type_button_piece_icon_clear_green: drop-shadow(0px 0px 1px hsl(120, 100%, 48%));
$filter_switch_type_button_piece_text_clear_disabled_green: drop-shadow(0px 0px 2px hsl(120, 100%, 28%)); 

$bg_element_type_button_clear_black: linear-gradient(to bottom, hsla(0, 0%, 100%, 0.15) 46%, hsla(0, 0%, 100%, 0.64), white),hsl(0, 0%, 76%);
$box_shadow_element_type_button_clear_black: inset 0px 0px 9px 5px $color_shadow_box_inset_element_type_button_clear, 0px 0px 12px 0px hsl(0, 0%, 40%);
$filter_element_type_button_piece_icon_clear_black: drop-shadow(0px 0px 1px hsl(0, 0%, 64%));
$filter_switch_type_button_piece_text_clear_disabled_black: drop-shadow(0px 0px 2px hsl(0, 0%, 30%)); 



/*      
//$bg_switch_type_button_pill_and_rounded_off: hsl(193, 0%,94%);
$bg_switch_type_button_pill_and_rounded_off: 
url(../../images/bgs/switch_button_icon_pill_shine_under.webp) center center / 200% 100% no-repeat,
hsl(193, 0%, 88%);
$bg_switch_type_button_pill_and_rounded_on: 
url(../../images/bgs/switch_button_icon_pill_shine_under.webp) center center / 200% 100% no-repeat,
hsl(193, 100%, 83%);
*/

$bg_button_type_normal_and_switch_type_button_shine_top: linear-gradient(to bottom, white, hsla(0, 0%, 100%, 0.4)); // Última alteração: +15% de opacidade.
 
$bg_button_type_normal_and_switch_type_button_rounded_shine: url(../../images/bgs/switch_button_rounded_shine_above.svg) center center / 100% 100% no-repeat;  //Fazendo dessa forma (usando a função de gradiente radial) não funciona em todos os navegadores: radial-gradient(circle at 50% 10%, white -10%, rgba(255, 255, 255, 0.43) 52%, transparent 52%) center center / 100% 100% no-repeat; 

// (Text floating):

/*  
$bg_switch_type_button_icon_piece_text_floating_off: linear-gradient(to bottom, white, hsl(193, 0%, 91%)); // hsl(0, 0%, 98%);
$color_border_switch_type_button_icon_piece_text_floating_off: hsl(0, 0%, 74%); 
$color_text_switch_type_button_icon_piece_text_floating_off: hsl(0, 0%, 67%); 
$bg_button_and_switch_both_type_button_icon_piece_text_floating_on: linear-gradient(to bottom, white, hsl(193, 100%, 92%));  // hsl(193, 100%, 98%);
$color_border_button_and_switch_both_type_button_icon_piece_text_floating_on: hsl(193, 100%, 68%);  
$color_text_button_and_switch_both_type_button_icon_piece_text_floating_on: hsl(193, 100%, 60%); 
*/

$color_border_switch_type_button_icon_piece_text_floating_off: hsl(0, 0%, 74%); 
$bg_switch_type_button_icon_piece_text_floating_off: hsl(0, 0%, 96%); //linear-gradient(to bottom, white, hsl(193, 0%, 91%));
$color_text_switch_type_button_icon_piece_text_floating_off: hsl(0, 0%, 67%); 

$color_border_button_and_switch_both_type_button_icon_piece_text_floating_on: $color_border_token_blue;
$bg_button_and_switch_both_type_button_icon_piece_text_floating_on: $bg_token_blue;
$color_text_button_and_switch_both_type_button_icon_piece_text_floating_on: $color_text_token_blue; 

$color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_red: $color_border_token_red;
$bg_button_and_switch_both_type_button_icon_piece_text_floating_on_red: $bg_token_red;
$color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_red: $color_text_token_red; 

$color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_yellow: $color_border_token_yellow;
$bg_button_and_switch_both_type_button_icon_piece_text_floating_on_yellow: $bg_token_yellow;
$color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_yellow: $color_text_token_yellow; 

$color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_green: $color_border_token_green;
$bg_button_and_switch_both_type_button_icon_piece_text_floating_on_green: $bg_token_green;
$color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_green: $color_text_token_green; 

$color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_black: $color_border_token_black;
$bg_button_and_switch_both_type_button_icon_piece_text_floating_on_black: $bg_token_black;
$color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_black: $color_text_token_black; 

// --- Type Image ---

$button_and_switch_both_type_image_icon_size: $button_height; 
$color_outline_button_and_switch_both_type_image: hsla(0, 0%, 0%, 0.2); 

// (Text floating):

$color_border_switch_type_image_piece_text_floating_off: $color_border_switch_type_button_icon_piece_text_floating_off; 
$bg_switch_type_image_piece_text_floating_off:  $bg_switch_type_button_icon_piece_text_floating_off;
$color_text_switch_type_image_piece_text_floating_off: $color_text_switch_type_button_icon_piece_text_floating_off; 
$color_box_shadow_switch_type_image_piece_text_floating_off: transparent; // hsla(0, 0%, 0%, 0.09);

/*  
$color_text_switch_type_image_piece_text_floating_on: hsl(193, 100%, 60%); 
$color_border_switch_type_image_piece_text_floating_on: hsl(193, 100%, 68%);  
$bg_switch_type_image_piece_text_floating_on: linear-gradient(to bottom, white, hsl(193, 100%, 92%));  // hsl(193, 100%, 98%);
$color_box_shadow_switch_type_image_piece_text_floating_on: hsla(193, 100%, 60%, 0.24);
*/

$color_border_switch_type_image_piece_text_floating_on: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on;  
$bg_switch_type_image_piece_text_floating_on: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on;
$color_text_switch_type_image_piece_text_floating_on: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on; 
$color_box_shadow_switch_type_image_piece_text_floating_on: transparent;

$color_border_switch_type_image_piece_text_floating_on_red: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_red;  
$bg_switch_type_image_piece_text_floating_on_red: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on_red;
$color_text_switch_type_image_piece_text_floating_on_red: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_red; 
$color_box_shadow_switch_type_image_piece_text_floating_on_red: transparent;

$color_border_switch_type_image_piece_text_floating_on_yellow: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_yellow;  
$bg_switch_type_image_piece_text_floating_on_yellow: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on_yellow;
$color_text_switch_type_image_piece_text_floating_on_yellow: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_yellow; 
$color_box_shadow_switch_type_image_piece_text_floating_on_yellow: transparent;

$color_border_switch_type_image_piece_text_floating_on_green: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_green;  
$bg_switch_type_image_piece_text_floating_on_green: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on_green;
$color_text_switch_type_image_piece_text_floating_on_green: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_green; 
$color_box_shadow_switch_type_image_piece_text_floating_on_green: transparent;

$color_border_switch_type_image_piece_text_floating_on_black: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_black;  
$bg_switch_type_image_piece_text_floating_on_black: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on_black;
$color_text_switch_type_image_piece_text_floating_on_black: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_black; 
$color_box_shadow_switch_type_image_piece_text_floating_on_black: transparent;

// --- Type Key ---

$switch_type_key_ball_size: 24px;
$switch_type_key_ball_size_SS: 28px;

$bg_switch_type_key_ball: 
linear-gradient(to bottom, hsla(0, 0%, 0%, 0.2), hsla(0, 0%, 100%, 0.5)),
radial-gradient(circle at 50% 50%, hsla(0, 0%, 100%, 0.15), hsla(0, 0%, 100%, 0.6) 50%, hsla(0, 0%, 0%, 0.45) 75%),
hsl(0, 0%, 80%);
$bg_switch_type_key_on_ball: 
linear-gradient(to bottom, hsl(0, 0%, 100%), hsla(0, 0%, 100%, 0.5)),
radial-gradient(circle at 50% 50%, hsla(0, 0%, 100%, 0.15), hsla(0, 0%, 100%, 0.6) 50%, hsl(0, 0%, 100%) 75%),
cyan;
$bg_switch_type_key_ball_shine: linear-gradient(to bottom, rgba(255, 255, 255, 1), hsla(0, 0%, 100%, 0));
$bg_switch_type_key_path_off: linear-gradient(to bottom, hsl(0, 0%, 70%), hsl(0, 0%, 73%), hsl(0, 0%, 100%)); // hsl(0, 0%, 76%)
$bg_switch_type_key_path_on: white; // linear-gradient(to bottom, white, hsl(197, 100%, 75%)); // linear-gradient(to bottom, white, white, hsl(197, 100%, 65%));
$bg_switch_type_key_path_off_SS: linear-gradient(to bottom, hsl(0, 0%, 70%), hsl(0, 0%, 79%), hsl(0, 0%, 100%)); // hsl(0, 0%, 76%)

// ─────────── Buttons ───────────

// Obs.: Algumas variáveis dos botões estão em Switches.

/*  
$color_text_button_type_image_piece_text_floating: hsl(190, 100%, 51%); 
$color_border_button_type_image_piece_text_floating: hsl(195, 100%, 50%);
$color_box_shadow_in_button_type_image_piece_text_floating: hsla(195, 100%, 50%, 0.3);
$color_box_shadow_out_button_type_image_piece_text_floating: hsla(193, 100%, 66%, 0.24);
$bg_button_type_image_piece_text_floating: hsla(192, 100%, 98%, 0.95); 
*/

$color_border_button_type_image_piece_text_floating: $color_border_switch_type_image_piece_text_floating_on;
$bg_button_type_image_piece_text_floating: $bg_switch_type_image_piece_text_floating_on; 
$color_text_button_type_image_piece_text_floating: $color_text_switch_type_image_piece_text_floating_on; 
$color_box_shadow_in_button_type_image_piece_text_floating: transparent;
$color_box_shadow_out_button_type_image_piece_text_floating: transparent; // $color_box_shadow_switch_type_image_piece_text_floating_on;

$color_border_button_type_image_piece_text_floating_red: $color_border_switch_type_image_piece_text_floating_on_red;
$bg_button_type_image_piece_text_floating_red: $bg_switch_type_image_piece_text_floating_on_red; 
$color_text_button_type_image_piece_text_floating_red: $color_text_switch_type_image_piece_text_floating_on_red; 
$color_box_shadow_in_button_type_image_piece_text_floating_red: transparent;
$color_box_shadow_out_button_type_image_piece_text_floating_red: transparent;

$color_border_button_type_image_piece_text_floating_yellow: $color_border_switch_type_image_piece_text_floating_on_yellow;
$bg_button_type_image_piece_text_floating_yellow: $bg_switch_type_image_piece_text_floating_on_yellow; 
$color_text_button_type_image_piece_text_floating_yellow: $color_text_switch_type_image_piece_text_floating_on_yellow; 
$color_box_shadow_in_button_type_image_piece_text_floating_yellow: transparent;
$color_box_shadow_out_button_type_image_piece_text_floating_yellow: transparent;

$color_border_button_type_image_piece_text_floating_green: $color_border_switch_type_image_piece_text_floating_on_green;
$bg_button_type_image_piece_text_floating_green: $bg_switch_type_image_piece_text_floating_on_green; 
$color_text_button_type_image_piece_text_floating_green: $color_text_switch_type_image_piece_text_floating_on_green; 
$color_box_shadow_in_button_type_image_piece_text_floating_green: transparent;
$color_box_shadow_out_button_type_image_piece_text_floating_green: transparent;

$color_border_button_type_image_piece_text_floating_black: $color_border_switch_type_image_piece_text_floating_on_black;
$bg_button_type_image_piece_text_floating_black: $bg_switch_type_image_piece_text_floating_on_black; 
$color_text_button_type_image_piece_text_floating_black: $color_text_switch_type_image_piece_text_floating_on_black; 
$color_box_shadow_in_button_type_image_piece_text_floating_black: transparent;
$color_box_shadow_out_button_type_image_piece_text_floating_black: transparent;

// ─────────── Choices ───────────

// $bg_choice_label: url(../../images/bgs/choice_label.png)  center /100% 100%; // <- Parte do estilo de choice anterior!
// $bg_choice: url(../../images/bgs/choice.png)  center /100% 100%; // <- Parte do estilo de choice anterior!
// $bg_choice_d_open: url(../../images/bgs/choice_d_open.png)  center /100% 100%; // <- Parte do estilo de choice anterior!
// $bg_choice_selector: url(../../images/bgs/choice_selector.png)  center /100% 100%; // <- Parte do estilo de choice anterior!

// ─────────── Lightboxs ───────────

$color_shadow_lightbox: black; 
$color_shadow_lightbox_button: black; 

// $bg_lightbox: url(../../images/bgs/lightbox.png)  center /100% 100%;
// $bg_lightbox_button: url(../../images/icons/lightbox_close.svg)  center /100% 100%, hsl(0, 0%, 33%);
$bg_lightbox_overlay: 0; // hsla(0, 0%, 100%, 0.7);

// ─────────── Scrollbars ───────────

// Header-nav, choice dropdown, lightbox, <textarea>

// $color_1_scrollbar: hsla(0, 0%, 0%, 0.14);
$color_1_scrollbar: linear-gradient(to bottom, hsl(180, 100%, 85%), hsl(195, 100%, 55%)); // hsl(188, 100%, 85%);
$color_2_scrollbar: hsla(0, 0%, 100%, 0.4);

$color_scrollbar_thumb: $color_1_scrollbar;
$color_scrollbar_thumb_firefox: $color_1_scrollbar;
$color_scrollbar_track: $color_2_scrollbar;
$color_scrollbar_track_firefox: transparent;

$color_menu_scrollbar_thumb: $color_1_scrollbar;  
$color_menu_scrollbar_thumb_firefox: $color_1_scrollbar; 
$color_menu_scrollbar_track: transparent;
$color_menu_scrollbar_track_firefox: transparent;

$color_menuRounded_scrollbar_thumb: $color_1_scrollbar;  
$color_menuRounded_scrollbar_thumb_firefox: $color_1_scrollbar; 
$color_menuRounded_scrollbar_track: transparent;
$color_menuRounded_scrollbar_track_firefox: $color_2_scrollbar;

// ─────────── Others ───────────

$bg_button_hide: url(../../images/icons/button_hide.png)  center /100% 100%;

/*  
──────────────────────────────────────────────────────
TODO: Geral
────────────────────────────────────────────────────── */

/* Global New Box Model */

html {
    
    box-sizing: border-box;
} 

*, *::before, *::after {
    
    box-sizing: inherit;
}

/* Cores */

.color_theme {
    color: $color_theme;
}

.bgc_color_theme {
    background-color: $color_theme;
}

/*  
──────────────────────────────────────────────────────
TODO: Scrollbars
────────────────────────────────────────────────────── */

*::-webkit-scrollbar { // Entire bar

    width: 14px;
    height: 14px;
}

*::-webkit-scrollbar-thumb { // Bar pointer  

    border-radius: 1000px;
    box-shadow: 0px 3px 5px 0px rgba(0, 0, 0, 0.25);



    // $delta_deg: 116deg; 
    // $delta_deg: 140deg; 
    // $delta_deg: 231deg; 
    // $delta_deg: 295deg; 

    // background:
    // linear-gradient(calc(217deg + #{$delta_deg}), hsla(190, 100%, 80%, 0.8), hsla(190, 100%, 80%, 0) 71%),
    // linear-gradient(calc(127deg + #{$delta_deg}), hsla(0, 0%, 100%, 0.8), hsla(0, 0%, 100%, 0) 71%),
    // linear-gradient(calc(336deg + #{$delta_deg}), hsla(195, 100%, 50%, 0.8), hsla(195, 100%, 50%, 0) 71%),
    // hsla(0, 0%, 100%, 0);



    // $delta_deg: 320deg;
    $delta_deg: 51deg;

    background:
    linear-gradient(calc(217deg + #{$delta_deg}), hsla(195, 100%, 50%, 0.8), hsla(195, 100%, 50%, 0) 71%),
    linear-gradient(calc(127deg + #{$delta_deg}), hsla(0, 0%, 100%, 0.8), hsla(0, 0%, 100%, 0) 71%),
    linear-gradient(calc(336deg + #{$delta_deg}), hsla(190, 100%, 83%, 0.8), hsla(190, 100%, 80%, 0) 71%),
    hsla(0, 0%, 100%, 0);
}

*::-webkit-scrollbar-thumb:hover { // Bar pointer hover

    $delta_deg: 51deg;

    background:
    linear-gradient(calc(217deg + #{$delta_deg}), hsla(195, 100%, 78%, 0.8), hsla(195, 100%, 50%, 0) 71%),
    linear-gradient(calc(127deg + #{$delta_deg}), hsla(0, 0%, 100%, 0.85), hsla(0, 0%, 100%, 0) 71%),
    linear-gradient(calc(336deg + #{$delta_deg}), hsla(190, 100%, 92%, 0.8), hsla(190, 100%, 80%, 0) 71%);

    box-shadow: 
    inset 0px 0px 0px 1px hsla(195, 100%, 50%, 0.15),
    0px 3px 5px 0px rgba(0, 0, 0, 0.25);
}

*::-webkit-scrollbar-track {   // Bar background

    border-top: 1px solid $color_theme;
    border-left: 1px solid $color_theme;
    // background: radial-gradient(white, hsl(195, 100%, 95%));
}

// html::-webkit-scrollbar-track:hover {   // Bar background hover

//     background: hsla(195, 100%, 50%, 0.1);
// }

* { // Regra para o Firefox
        
    scrollbar-width: auto;
    scrollbar-color: hsl(195, 100%, 50%) hsla(195, 100%, 50%, 0.06);
}

/*  
──────────────────────────────────────────────────────
TODO: <html> & <body> 
────────────────────────────────────────────────────── */

html {

    background: $bg_html;
}

html::-webkit-scrollbar { // Entire bar

    width: 14px;
    height: 14px;
}

/*  
html::-webkit-scrollbar-thumb { // Bar pointer  

}

html::-webkit-scrollbar-thumb:hover { // Bar pointer hover

}

html::-webkit-scrollbar-track {   // Bar background

}
 
html { // Regra para o Firefox

    scrollbar-width: ;
    scrollbar-color: ;
}
*/

body {

    min-width: 300px;
    margin-left: auto;
    margin-right: auto;
}
       
/*  
──────────────────────────────────────────────────────
TODO: Margins
────────────────────────────────────────────────────── */

.offset { /* Lateral margins */    
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal;
}

.offset.choice.horizontal { 
    display: inline-flex;
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal;
}

.offset.choice.vertical, .offset.choice.dropdown { 
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal;
}

%margins {
    margin-top: $margin_vertical;
    margin-bottom: $margin_vertical;
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal; 
    // @extend .offset; 
}

/*  
──────────────────────────────────────────────────────
TODO: Texts
────────────────────────────────────────────────────── */

.TNR {
    font-family: 'Times New Roman'; 
    font-size: 19px;
}

.Cyber-BoldBook {
    font-family: 'Cyber-BoldBook';
    font-size: 14rem;
    text-shadow: 0.2px 0px 0px; 
    line-height: 1.8; 
} 

.Myfont-Regular {
    font-family: 'Myfont-Regular';
    font-size: 19px;
    // text-transform: lowercase;
}

.courier {
    font-family: 'Courier';
    font-size: $font_monospace_size;
}



html {
    font-family: $font_default;
    font-size: 1px;
    color: $color_text; 
}

span, h1, h2, h3, h4, h5, h6, p, a, em, i, strong, b, u, ul, ol, li, dt, dd, 
abbr, dfn, sub, sup, pre, var, kbd, samp, code, time, address, blockquote, 
q, cite, figcaption, form, label, input, textarea, select, button, fieldset, 
legend, table, tr, td, th, caption {
    font-size: $font_size; 
}

div, header, nav, main, article, section, aside, footer {
    font-size: 0;
}

a { 
    color: blue; 
    text-decoration: none;
} 

@for $i from 2 through 6 {

	h#{$i} {

        font-size: calc(58rem - (6 * #{$i}rem)); // Geralmente o h1 é 40rem e o h6 é 20rem
        margin-top: calc(7rem - #{$i}rem + #{$margin_vertical});
        margin-bottom: calc(7rem - #{$i}rem + #{$margin_vertical});
        margin-left: $margin_horizontal;
        margin-right: $margin_horizontal;
        text-align: center;
        background: $color_text_hx;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        text-fill-color: transparent; 
	}
}

@for $i from 7 through 20 { 
	h#{$i} {

        display: block;
        font-size: 20rem;
        margin-top: $margin_vertical;
        margin-bottom: $margin_vertical;
        margin-left: $margin_horizontal;
        margin-right: $margin_horizontal;
        text-align: center; 
        font-weight: bold;
        // color: $color_theme;
        background: $color_text_hx;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        text-fill-color: transparent; 
	}
}

.mini_topic {

    font-size: $font_size;
    background: 0;
    text-align: center;
    font-weight: bold;
    -webkit-text-fill-color: initial;
}

p, li, ul, ol, dl, dt, dd {
    line-height: 1.5;
}

p {
    @extend %margins;
    text-indent: 6rem; /* Sem justificar, usar: 4px */
    text-align: justify;
}

ul, ol {
    margin-top: $margin_vertical;
    margin-bottom: $margin_vertical;
    margin-left: calc(1 * #{$margin_horizontal} + 21px);
    margin-right: $margin_horizontal;
}

// ul { list-style-type: "➭ "; } // <- Não funciona no safari.
// ul ul { list-style-type: "● "; } // <- Não funciona no safari.
// ul ul { list-style-type: "-› "; } // <- Não funciona no safari.
// ul ul ul { list-style-type: "- "; } // <- Não funciona no safari.

ul { margin-left: calc(1 * #{$margin_horizontal} + 24px); } 
ul { list-style-image: url("../../images/icons/list_1.svg"); }
ul ul { list-style-image: url("../../images/icons/list_2.svg"); }
ul ul ul { list-style-image: url("../../images/icons/list_3.svg"); }
ul ul ul ul { list-style-image: url("../../images/icons/list_4.svg"); }
/*  */

ol > li::after {
    display: inline;
    content: '.';
}

dl {
    @extend %margins;
}

dt { 
    font-weight: bold; 
    margin-top: $margin_vertical;
}

dt::after {
    display: inline;
    content: ':';
}
 
dd {
    margin-left: 0;
}

dd::after {
    display: inline;
    content: '.';
}

dt + dd {
    margin-top: $margin_vertical;
}

dt:nth-of-type(1) {
    margin-top: 0;
}

@media (min-width: $screen_small_widthLimit) {

    dd {
        margin-left: 30rem;
    }
}

strong, b, em, i {
    font-weight: normal; 
    font-style: normal;
    text-decoration: underline;
}

address {

    line-height: 1.5;
}

dfn, var, address, cite {
    font-style: normal;
}

var, kbd, samp, code {
    font-family: $font_default;
}

kbd {
    font-size: 15rem;
    background: $bg_kbd;
    padding: 1px 5px;
    border: 4px outset $color_border_kbd;
    border-radius: 5px;
}

code {
    font-family: $font_monospace;
    text-align: left;
}

pre {
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal;
    font-family: $font_monospace;
    font-size: $font_monospace_size;
}

ul > li + li, ol > li + li {
    margin-top: $margin_vertical;
}

/*  
────────────────────────────
TODO:    > Classes
──────────────────────────── */

.font_size {
    font-size: $font_size; 
}

.font_monospace {
    font-family: $font_monospace;
    font-size: $font_monospace_size;
}

.font_small {
    font-size: $font_small;
}

.font_smaller {
    font-size: $font_smaller;
}


.underline {
  text-decoration: underline;
}

.bold { 
    font-weight: bold; 
}

.italic {
    font-style: italic;
}
/**/

.container_text {
    font-size: $font_size; 
    padding: 8px 13px 9px;
    border: 1px solid $color_border_form;  
    border-radius: $border_radius_default;
    min-height: $button_height_small;
    text-align: justify;
}

p.container_text { // Regra necessária, pois o tamanho do conteúdo do <p> é diferente dos outros elementos (como do <div>).
    padding: 5px 13px 5px;
}

// .highlight {
    /*background: $color_text_highlight;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-fill-color: transparent;*/

//     color: $color_theme;
// }

// .highlight_menu {
    /*background: $color_text_highlight_menu;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-fill-color: transparent;*/ 

//     color: yellow;
// }

.highlight {

    background: $color_text_highlight;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-fill-color: transparent;
}

span.token {

    padding: 6px 8px;
    border-radius: 1000px;
}

span.token, span.token.blue {

    border: 1px solid $color_border_token_blue;
    background: $bg_token_blue;
    color: $color_text_token_blue;
}

span.token.red {

    border: 1px solid $color_border_token_red;
    background: $bg_token_red;
    color: $color_text_token_red;        
} 

span.token.yellow {

    border: 1px solid $color_border_token_yellow;
    background: $bg_token_yellow;
    color: hsl(60, 100%, 50%); // yellow
    color: $color_text_token_yellow; 
}

span.token.green {

    border: 1px solid $color_border_token_green;
    background: $bg_token_green;
    color: $color_text_token_green;
}

span.token.pink {

    border: 1px solid $color_border_token_pink;
    background: $bg_token_pink;
    color: $color_text_token_pink;
}

span.token.purple {

    border: 1px solid $color_border_token_purple;
    background: $bg_token_purple;
    color: $color_text_token_purple;
}

span.token.orange {

    border: 1px solid $color_border_token_orange;
    background: $bg_token_orange;
    color: $color_text_token_orange;
}

span.token.brown {

    border: 1px solid $color_border_token_brown;
    background: $bg_token_brown;
    color: $color_text_token_brown;
}

span.token.cyan {

    border: 1px solid $color_border_token_cyan;
    background: $bg_token_cyan;
    color: $color_text_token_cyan;
}

span.token.purple2 {

    border: 1px solid $color_border_token_purple2;
    background: $bg_token_purple2;
    color: $color_text_token_purple2;
}

span.token.black {

    border: 1px solid $color_border_token_black;
    background: $bg_token_black;
    color: $color_text_token_black;        
}

.noListStyle {

    list-style: none; 
    padding: 0; 
    margin-left: 20px;

    li + li {
        margin-top: 0;
    }
}

/* 
.spaced_items > li + li, .spaced_items > dd + dd {
    margin-top: $margin_vertical;
}
 */

.list_compressed > li + li {
    margin-top: 0;
}

//.arrow_2 { list-style-type: "➢ "; }  // <- Não funciona no safari.
// .star { list-style-type: "✰ "; }  // <- Não funciona no safari.

.list_index {

    display: flex;
    justify-content: center;
    margin-left: auto;
    margin-right: auto;

    ul li + li, ol li + li {
        margin-top: 0;
    }

    > ul, > ol {
    
        width: max-content; -moz-width: fit-content; width: -moz-fit-content; width: fit-content; /* <- Declarações necessárias 
        para garantir que o Firefox funcione como se suportasse 'width: fit-content'. (Ao menos 1 delas deve funcionar.) */

        list-style-image: none;

        > li {
            font-weight: bold;

            > a {
                font-size: 21rem;
            }

            li {
                font-weight: normal;
            }
        }

        > li + li {
            margin-top: 8px;
        }

        > li > ul { 
            margin: 0 0 0 0px; 
        }

        ul {
            margin: 0 0 0 18px; 
            list-style-type: none;
            // list-style-type: "└ "; // <- Não funciona no safari.
            list-style-image: none;
        }

        ol {
            margin: 0 0 0 21px;
        }

        ul li:before {
            content: "└ "
        }

        a {
            color: $color_text;
        }
    }

    > ul { 
        list-style-type: none;
        margin-left: calc(2 * #{$margin_horizontal});
        margin-right: calc(2 * #{$margin_horizontal});
    }

    > ol {
        margin-left: calc(2 * #{$margin_horizontal} + 21px);
        margin-right: calc(2 * #{$margin_horizontal});
    }

    @media (min-width: $hr_stop) {

        > ul { 
            margin-left: $margin_horizontal;
            margin-right: $margin_horizontal;
        }

        > ol {
            margin-left: calc(1 * #{$margin_horizontal} + 21px);
            margin-right: $margin_horizontal;
        }
    }
}

.list_index > ul > li > ul > li > a {

        text-decoration: underline; 
}

.list_featured {

    list-style-type: none;
    list-style-image: none;
    margin-left: $margin_horizontal;

    li {
        padding-left: $margin_horizontal;
        padding-right: $margin_horizontal;

        a {
            color: $color_text;
        }

        div {
            font-size: $font_size;
        }
    }
    
    li + li {
        border-top: 1px solid $color_theme;
        margin-top: calc(0.5 * #{$margin_vertical});
        padding-top: calc(0.5 * #{$margin_vertical});
    }
}

.success, .warning, .fail, .danger  {

    padding: 2px 8px;
    margin: $margin_vertical $margin_horizontal;
    border-radius: 10px;
    text-indent: 0;
}

.success {
    color: $color_text_success;
    background: $bg_success;
    border: 2px solid $color_border_success;
}

.warning {
    color: $color_text_warning;
    background: $bg_warning;
    border: 2px solid $color_border_warning;
}

.fail {
    color: $color_text_fail;
    background: $bg_fail;
    border: 2px solid $color_border_fail;
}

.danger {
    padding: 6px 10px;
    color: $color_text_danger;
    background: $bg_danger;
    border-top: 4px solid $color_border_danger_clear;
    border-left: 4px solid $color_border_danger_clear;
    border-bottom: 4px solid $color_border_danger_dark;
    border-right: 4px solid $color_border_danger_dark;
    font-weight: bold;
    text-align: center;
    text-transform: uppercase;
}
/*
.success.long, .warning.long, .fail.long, .danger.long {
    text-align: center;
    padding-left: calc(1 * #{$margin_horizontal});
    padding-right: calc(1 * #{$margin_horizontal});
    border-left-width: 0;
    border-right-width: 0;
    border-radius: 0;
    margin-left: 0;
    margin-right: 0;
}
*/

.container_organize {
 
    width: max-content; -moz-width: fit-content; width: -moz-fit-content; width: fit-content; /* <- Declarações necessárias 
    para garantir que o Firefox funcione como se suportasse 'width: fit-content'. (Ao menos 1 delas deve funcionar.) */

    max-width: calc(100% - (2 * #{$margin_horizontal}));

    margin-left: auto !important;
    margin-right: auto !important;
}

/*  
────────────────────────────
TODO:    > Text Icons
──────────────────────────── */
 
/*  
────────────────────────────
TODO:        >> Icons With Text Together
──────────────────────────── */

@mixin iconWithTextTogether {

    background-repeat: no-repeat;   
    background-position: 100% 0;
    background-size: 21px 21px; 
    cursor: pointer;
}

a[href^="http"] {
    @include iconWithTextTogether;
    background-image: url('../../images/icons/web.svg');   
    padding-right: 26px;
}

a[href^="#"]:not([href="#"]) {
    @include iconWithTextTogether;
    background-image: url('../../images/icons/chain.svg');
    padding-right: 25px; 
}

abbr[title] {
    @include iconWithTextTogether;
    text-decoration: none;
    background-image: url('../../images/icons/interrogation.svg');
    padding-right: 21px;
}

.click { 

    @include iconWithTextTogether;
    /* 
    background-image: url('../../images/icons/popUp_thin.svg');
    background-size: 23px 18px; 
    */
    background-image: url('../../images/icons/popUp_thick.svg');
    background-size: 22px 19px; 
    
    padding-right: 28px;   

 

    /*padding-left: 4px;
    padding-right: 4px;
    
    border: 1px solid hsl(0, 0%, 76%) !important; 
    border-radius: 5px;
    color: hsl(0, 0%, 53%);
    background: hsl(0, 0%, 95%);*/

    
    /*
    background: $color_text_click;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-fill-color: transparent;
    text-decoration: none !important;
    cursor: pointer;
    */
}

.attention {
    // @include iconWithTextTogether;
    color: red;
    background-image: url('../../images/icons/attention.svg');
    background-position-y: 3px;
    background-repeat: no-repeat;   
    background-size: 21px 21px; 
    // padding-left: 25px; 
    text-indent: 26px;
}


 
/*  
────────────────────────────
TODO:        >> Icon Alone
──────────────────────────── */



.icon_yes, .icon_no, .icon_chain {
    color: transparent;
    cursor: default;
    overflow: hidden;
    display: inline-block;
    width: 17px;
    height: 17px;
    line-height: 1.2;
}

.icon_yes::selection, .icon_no::selection, .icon_chain::selection { 
    
    color: transparent;
} 

.icon_yes {
    width: 22px;
    background-image: url('../../images/icons/icon_yes.svg');   
    background-size: 22px 17px;
}

.icon_no {
    background-image: url('../../images/icons/icon_no.svg');   
    background-size: 17px 17px;
}

.icon_chain {
    background-image: url('../../images/icons/chain.svg');   
    background-size: 17px 17px;
}

/*  
──────────────────────────────────────────────────────
TODO: Layout Sections
────────────────────────────────────────────────────── */
/*  
────────────────────────────
TODO:    > Central
──────────────────────────── */

.central {
    max-width: $central_maxWidth; 
    margin-left: auto;
    margin-right: auto;
}
/*  
────────────────────────────
TODO:    > Header-nav
──────────────────────────── */

.header-content {
    @extend .central;
}

.block-hack { /* Hack necessário pois o Safari não aceita 'position: sticky'. */
    height: $button_height;
}

.header-nav {

    position: fixed; top: 0; left: 0; right: 0;
    z-index: $zIndex_nav;
    color: $color_text_menu; 
    background-color: $color_theme;
    background: $bg_header;
    box-shadow: 0 0px 10px 0px $color_shadow_headerNav;
    font-weight: bold;

    .nav {
        display: flex;
        justify-content: space-between;
        align-items: center;

        h1 {
            margin: 0;
            margin-top: -1px;
            // font-weight: normal;
            color: $color_text_menu;

             // As declarações abaixo desfazem o bg como cor do texto:
             
            background: 0;
            -webkit-background-clip: border-box;
            -webkit-text-fill-color: currentcolor;
            background-clip: border-box;
            text-fill-color: currentcolor; 
        }

        a {
            height: $button_height;
            color: inherit;
            text-decoration: none;
            text-shadow: 1px 1px 1px $color_shadow_text;
            display: flex; 
            justify-content: center;
            align-items: center;
        }

        .logo {
            margin-left: 14px;

            img {
                width: 22px;
                margin-right: 8px;
                filter: drop-shadow(1px 1px 1px $color_shadow_text);
            }
        }

        li + li {
            margin-top: 0;
        }

        .text_img, .text_img_size {
            filter: drop-shadow(1px 1px 1px $color_shadow_text); 
        }
    }

    .button-left {
        margin-right: -13px;
    }

    .nav-menu-button {
        margin-right: 1px;

        :nth-child(2) {
            display: none; 
            justify-content: center;
            align-items: center;
            width: 48px;
            font-size: 32px;
            text-align: center;
            color: $color_text_menu;
        }

        img {
            filter: drop-shadow(1px 1px 1px $color_shadow_text); 
        }
    }

/*  
────────────────────────────
TODO:        >> Menu
──────────────────────────── */

    .nav-menu { 
        display: none;
        position: fixed;
        //top: $button_height; bottom: 0; left: 0; right: 0;
        top: 0px; bottom: 0; left: 0; right: 0;
        //background-color: $color_theme;

        ul {
            /*position: fixed;
            top: calc(2 * #{$button_height}); */
            width: 100%;
            //max-height: 100%;
            max-height: calc(100% - (1 * #{$button_height}));
            margin: 0;
            padding: 0;
            list-style-type: none;
            list-style-image: none;
            background: $bg_nav;
            overflow: auto;

            li {
                border-top: 1px solid $color_text_menu;

                        span { 

                            filter: drop-shadow(0px 0px 2px hsl(195, 100%, 44%));  
                        }

                div { // <- Sub opções
                    display: none;

                    ul {
                        background: $bg_nav_selector; 
                    }
                }
            }

            li:nth-last-child(2) {
                border-bottom: 1px solid $color_text_menu;
                }
            }

            li:nth-last-child(1) {
                border-top: 0;
                border-bottom: 0;

                /*a{
                    span {
                        font-size: 32rem;
                        text-align: center;
                        color: $color_text_menu;
                    }
                }*/
            }

        > ul {
            margin: $button_height 0 0 0;
            //box-shadow: 0 0px 10px 0px $color_shadow_nav_options; // <- Sombra melhor se for deixar o 'header-nav' separado do 'menu aberto'.
            
            box-shadow: 0 5px 10px -4px adjust-color($color_shadow_nav_options, $alpha: -0.1);
        }

        > ul > li:last-of-type {
            display: none;
        }

        > ul > li > a img {
            margin-right: 6px; 
        }

        ul li ul a {
            height: auto;
            min-height: $button_height;

            span {
                display: flex;
                align-items: center; 
                margin-left: 16px;
                margin-right: 16px;

                img {
                    margin-right: 8px;
                }
            }
        }
    }

    // Scrollbars:

    .nav-menu ul::-webkit-scrollbar { // Entire bar

        width: 11px;
        height: 12px;
    }
    
    .nav-menu ul::-webkit-scrollbar-thumb { // Bar pointer
        
        // background: linear-gradient(to bottom, hsl(195, 100%, 93%), white, hsl(195, 100%, 93%));
        background: white;
        box-shadow: inset 0px 0px 0px 1px hsla(195, 100%, 72%, 1);
    }
    
    .nav-menu ul::-webkit-scrollbar-track {   // Bar background

        border: 0;
        background: hsla(195, 100%, 85%, 0.5);
        border-radius: 1000px; 
    }

    .nav-menu ul { // Regra para o Firefox

        scrollbar-width: thin;
        scrollbar-color: white hsla(0, 0%, 100%, 0.22);
    }

    @media (pointer: fine) {

        /*.nav-menu ul {
            overflow: hidden;
        }*/
        
        .nav-menu ul:hover {
            overflow: auto;
        }
    }

    .nav_selector { // Classe aplicada somente via JS
        background: $bg_nav_selector; 
        max-height: 40px; 
        border-radius: 15px; 
        padding-left: 7px; 
        padding-right: 7px; 
        margin-top: 4px
    }

/*  
────────────────────────────
TODO:        >> Expanded
──────────────────────────── */

    @media (min-width: $nav_expand) {

        .nav-menu {
            display: inline-block !important; // Esta declaração deve ser a 1ª para evitar que o 'Header-nav' bug no smartphone. '!important' evita um bug que ocorre ao redimensionar a viewport.
            position: static;
            background: 0;
        }

        .nav .nav-menu-button {
            display: none;
        }

        .nav-menu > ul, .nav-menu > ul > li {
            display: inline-block;
        }

        .nav-menu > ul {
            margin: 0;
            box-shadow: 0px 0px 0px 0px hsla(0, 0%, 0%, 0);
            display: flex;
            justify-content: space-between;
            background: $bg_header;
        }

        .nav-menu > ul > li {
            border-width: 0;
        }

        .nav-menu > ul > li + li {
            margin-left: 20px;
        }

        .nav-menu > ul > li:nth-last-of-type(2) {
            border-width: 0;
        }

        .nav-menu > ul > li:nth-last-of-type(1) {
            border-width: 0;
            display: block;
            margin-left: 11px;

            a {
                font-size: 32rem;

                img {
                    width: $button_height;
                    margin-right: 2px;
                    filter: drop-shadow(1px 1px 1px $color_shadow_text); 
                }
            }
        }

        // Sub opções - Espaço Fora:

        .nav-menu ul li div { 
            display: none;
            position: fixed; top: $button_height; left: 0; bottom: 0; right: 0;
            // background: hsla(0, 0%, 100%, 0.5);
            text-align: center;
        }

        // Sub opções - Menu:

        .nav-menu ul li div ul {

            display: inline-block;
            width: auto; 
            min-width: 240px; 
            max-width: calc(100% - (2 * #{$button_height}));
            max-height: calc(100% - (2 * #{$button_height})); 
            border-radius: 25px;
            margin-top: $button_height;
            background-color: $color_theme;
            background: $bg_nav;
            box-shadow: 6px 6px 13px 0px $color_shadow_nav_subOptions;

            li:nth-child(1) {
                border-top: 0;
            }

            /* li:hover {
                background: $bg_nav_selector;
            }*/

            li:nth-of-type(1):hover {
                border-top-left-radius: 25px;
                border-top-right-radius: 25px;
            }

            li:nth-last-child(1):hover {
                border-bottom-left-radius: 25px;
                border-bottom-right-radius: 25px;
            }
        }
    }
}

// Header-nav em smartphone (arredondado):

@media (min-width: $nav_expand) and (max-height: $screen_small_widthLimit) {

    .header-content {
        max-width: none;
    }

    .header-nav {
        left: 8px; right: 8px;
    }

    .header-nav {
        border-radius: calc(#{$button_height}/2);
    }

    .nav-menu > ul {
        border-top-right-radius: calc(#{$button_height}/2);
        border-bottom-right-radius: calc(#{$button_height}/2);
    }

    .header-nav {
        box-shadow: 3px 3px 6px 0px $color_shadow_headerNav_rounded;
    }

    .header-nav .nav > :nth-child(1) {
        margin-left: 4px;
    }

    .header-nav .nav-menu > ul > li:nth-last-of-type(1) {
        margin-right: 6px; 
    }
}
 
// Header-nav button invisible:

@media (min-width: $nav_expand) and (min-height: $screen_small_widthLimit) {
 
    .header-nav .nav-menu > ul > li:last-of-type {
        display: none;
    } 

    .nav-menu > ul > li:nth-last-of-type(2) {
        margin-right: 20px;
    }
}

// Show header button: 

.headerNav-button{
    display: none; 
    width: $button_height;
    height: $button_height;
    border-radius: 11px;

    position: fixed; top: 9px; right: 9px;
    z-index: $zIndex_nav;
    background: $bg_header;
    font-size: $font_size;
    box-shadow: 3px 3px 6px 0px $color_shadow_headerNav_button;

    img {
        width: inherit;
        height: inherit;
        filter: drop-shadow(1px 1px 1px $color_shadow_text); 
    }

    /*
    border-radius: 0px;
    border-bottom-left-radius: 6px;
    top: 0px; right: 0px;
    box-shadow: 0px 0px 10px 0px hsla(0, 0%, 0%, 0.6);
    */
}

/*  
────────────────────────────
TODO:    > Footer
──────────────────────────── */

.footer-content {

    width: 100%;
    margin-top: calc(2 * #{$margin_vertical});

    address {

        width: 100%;
    }

    .footer-icons {

        /* footer anterior:

        display: flex;
        justify-content: space-evenly;
        align-items: center; 
        
        width: calc(100% - (2 * #{$margin_horizontal}));
        height: 48px;
        border-radius: 50px;
        padding-top: 2px;
        margin-left: auto;
        margin-right: auto; 
        background: $bg_footer_icons;
        box-shadow: 3px 3px 6px 0px $color_shadow_footer;
        list-style-type: none;
 
        li, a {
        
            height: 40px !important;
        }

        li + li {
            margin-top: 0;
        }
        
        img {
        
            padding: 5px;
            border: 2px solid $color_text_menu;
            border-radius: 50%;
            filter: drop-shadow(1px 1px 1px $color_shadow_footer_icons); 
        } 

        // Não apage esta regra comentada:
        // @media (min-width: calc(#{$central_maxWidth} + (2 * #{$margin_horizontal}))) { 

        //     width: 100%;
        // }

        // Footer-icons em smartphone - paisagem:

        @media (max-height: $screen_small_widthLimit) {

            width: calc(100% - 16px);
        }
        */
        
        // footer novo:

        width: calc(100% - (2 * #{$margin_horizontal})); 
        padding: 0;
        margin-left: auto;
        margin-right: auto; 
        margin-bottom: 0; 
        list-style-type: none;
        text-align: center;

        li {
            display: inline-block;
        }

        li + li {
            margin-top: 0;
        }

        a {

            width: 58px;
            height: 58px;
            color: #000000; 
            margin: 0;
            margin-bottom: $margin_vertical; 
        }

        /* Configuração para 4 ícones: */

        @media (min-width: 0px) {

            display: flex;
            justify-content: space-between;

            max-width: 292px; // 4 * 58 + 3 * 20

            li + li { margin-left: 0; } 
            li:nth-last-of-type(1) { margin-right: 0; } 
        }
         
        /* Configuração para 5 ícones:

        @media (min-width: 0px) { 
            
            $li_margin_horizontal: 20px;

            li + li { margin-left: $li_margin_horizontal; } 
            li:nth-last-of-type(1) { margin-right: $li_margin_horizontal; } 
        } 

        @media (min-width: 362px) {

            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;

            max-width: 370px; // 5 * 58 + 4 * 20

            li + li { margin-left: 0; } 
            li:nth-last-of-type(1) { margin-right: 0; } 
        }
        */
    }

    /* footer anterior:

    @media (max-height: $screen_small_widthLimit) {

        max-width: none !important; 
    }
    */

    .copyright {

        margin-top: 0; // Retirar para o footer anterior. 
        font-size: $font_smaller;
        text-indent: 0;
        text-align: center;

        // padding: 6px 0;
        // margin: 14px 0 0;
        // color: $color_text_menu;
        // background-color: black;
    }
}

/*  
────────────────────────────
TODO:    > Classes
──────────────────────────── */
/*
.nav_poster_margins { // <- Desisti desta ideia.
    margin-top: 16px;
    margin-bottom: 16px;
    margin-left: 16px;
} 
*/
.nav_expanded_sub_options_h {
    @media (min-width: $nav_expand) {
        
        overflow-x: auto;
        white-space: nowrap;
        font-size: 0;

        li {
            display: inline-block;
            border-width: 0 !important;

            /*> a {
                display: inline-flex;
                flex-direction: column;
            }*/
        }
    }
}

.nav_sub_options_text_below { // Serve para ambos os modos horizontal e vertical das sub opções.
    li > a {
        display: inline-flex;
        flex-direction: column;
    }
}

.nav_compact_sub_options_text_below { // Serve para ambos os modos horizontal e vertical das sub opções.

    @media (max-width: $nav_expand) {
        li > a {
            display: inline-flex;
            flex-direction: column;
        }
    }
}

.nav_expanded_sub_options_text_below { // Serve para ambos os modos horizontal e vertical das sub opções.

    @media (min-width: $nav_expand) {
        li > a {
            display: inline-flex;
            flex-direction: column;
        }
    }
}

/*  
──────────────────────────────────────────────────────
TODO: Multimedia
────────────────────────────────────────────────────── */

/*.text_img_evenSize {
    max-width: 18px; 
    margin-bottom: -4px;
}*/

.text_img {
    max-width: 19px !important;
    margin-bottom: -3px;
}

.text_img_size { 
    max-width: 19px;
}

figcaption {
    margin-top: calc(#{$margin_vertical}/2); 
    text-align: center;
    font-size: $font_small;  
}

audio {
    height: 45rem;
    display: block;
    max-width: calc(100vw - 2 * #{$margin_horizontal});
    margin-top: $margin_vertical;
    margin-bottom: $margin_vertical;
}

/*  
──────────────────────────────────────────────────────
TODO: Tables
────────────────────────────────────────────────────── */

table {
    max-width: calc(100% - 2 * #{$margin_horizontal});
    margin: $margin_vertical auto;
    border: $table_border1_width solid $color_theme;
    border-collapse: collapse;
    caption-side: bottom;
    font-weight: normal;

    th {
        color: $color_theme;
        // background-color: hsl(193,100%,98%);
        border: $table_border1_width solid $color_theme;
        font-weight: bold;
        text-transform: capitalize;

        /*@media (max-width: $screen_small_widthLimit), (max-height: $screen_small_widthLimit) {
            
            font-weight: bold; 
        }*/
    }

    tr:hover {  

        @media (pointer: fine) {
            
            background: $bg_table_tr_hover;
        }
    }

    tr:nth-of-type(1):hover {
        background: 0;
    }

    tr + tr {
        border-top: $table_border2_width solid $color_border_table;
    }

    td + td {
        border-left: $table_border2_width solid $color_border_table;
    }

    th, td {
        padding: 7px 11px; 
    }

    td {
        text-align: center;
    }

    caption {
        margin-top: calc(#{$margin_vertical}/2); 
        @extend .font_smaller;
    }

    ul, ol { /* <- Regra para caso tenha lista na tabela. */
        padding-left: 27rem;
        margin: 0;
    }
}
/*
table.type_1 {
     Estilo padrão. 
}
*/

table.type_2 {

    width: 100%;
    max-width: none;
    border-width: 0;
    border-bottom: $table_border1_width solid $color_theme;

/*     tr :nth-child(1) {
        font-weight: bold;
    } */

    tr:nth-of-type(1) {
        border-bottom: $table_border1_width solid $color_theme;
    }

    tr:not(:nth-of-type(1)):hover {  

        @media (pointer: fine) {
            
            background: $bg_table_tr_hover_2;
        }
    }

    th {
        border-width: 0;
    }

/*     
    th:nth-child(1) {
        color: $color_text;
    }
 */

    td + td {
        border-width: 0;
    }
}

@media (min-width: $screen_small_widthLimit) {
    table.type_2 {
        width: auto;
        max-width: calc(100% - 2 * #{$margin_horizontal});
    }
}

table.type_3 {

    width: 100%;
    max-width: none;
    border-width: 0;
    border-bottom: $table_border1_width solid $color_theme;

/*     tr :nth-child(1) {
        font-weight: bold;
    } */

    tr:nth-of-type(1) {
        border-top: $table_border1_width solid $color_theme;
    }

    tr:hover {  

        @media (pointer: fine) {
            
            background: $bg_table_tr_hover_2;
        }
    }

    th {
        border-width: 0;
    }

/*     
    th:nth-child(1) {
        color: $color_text;
    }
 */

    td + td {
        border-width: 0;
    }
}

@media (min-width: $screen_small_widthLimit) {
    table.type_3 {
        width: auto;
        max-width: calc(100% - 2 * #{$margin_horizontal});
    }
}

table.type_4 {
    border-width: 0;

    /*tr:hover {
        outline: 1px solid $color_theme;
    }

    tr:nth-of-type(1):hover {
        background: $bg_table_tr_hover;
    }*/

    tr:hover {
        background: 0; 
    }

    tr + tr {
        border-width: 0;
    }

    th {
        border-width: 0;
        text-align: left;
    }
}

/*----- table.type_5 -----*/ 

@media (min-width: 0) and (max-width:  $screen_small_widthLimit) {
    table.type_5 {
        border-width: 0;
        margin-left: calc(2 * #{$margin_horizontal});
        margin-right: calc(2 * #{$margin_horizontal});

        tr {
            border-width: 0;
            margin-bottom: $margin_vertical;
        }

        tr:hover {
            background: 0;
        }

        tr, th, td {
            display: block;
        }

        th {
            border-width: 0;
            border-bottom: $table_border1_width solid $color_theme;
            text-align: center;
        }

        td {
            text-align: left;
        }

        td:nth-of-type(1) {
            margin-top: 16rem;
        }

        li + li {
            margin-top: 20rem;
        }
    }
}

@media (min-width: $screen_small_widthLimit) {
    table.type_5 {
        border-width: 0;

        tr {
            border-width: 0;
        }

        tr:hover {
            background: 0;
        }

        th, td {
            border-width: 0;
        }

        td {
            text-align: left;
        }
    }
} 

/*  
──────────────────────────────────────────────────────
TODO: Forms
────────────────────────────────────────────────────── */

/*  
────────────────────────────
TODO:    > fieldset e label
──────────────────────────── */

/*form {
    margin: $margin_vertical auto;
}*/

fieldset {
    border-width: 0;
    padding: 0;
    margin: 0;
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal;

    strong {
        text-decoration: none;
    }
}

label {
    display: block;
    @extend %margins;

    strong {
        text-decoration: none;
    }
}

fieldset:disabled label {
    color: $color_text_clear;
}

/*  
────────────────────────────
TODO:    > Widgets
──────────────────────────── */
 
/*  
────────────────────────────
TODO:        >> inputs e textarea
──────────────────────────── */

input[type="text"], input[type="email"], textarea {

    color: $color_text_form;
    width: calc(100% - 40px); 
    min-height: $button_height_small;
    border: 1px solid $color_border_form; 
    margin-top: $margin_vertical;
    margin-left: 20px;
    margin-right: 20px;
    border-radius: $border_radius_default;
    /* border: 1px solid hsl(0, 0%, 93%); 
    filter: drop-shadow(0px 6px 9px hsla(0, 0%, 0%, 0.18)); <- Traz inconsistências entre os navegadores. */
}

input::placeholder, textarea::placeholder {
    color: $color_text_form_placeholder;
} 

input[type="text"], input[type="email"] {
    padding: 7rem 13rem 9rem;
}

textarea {
    height: 40rem;
    padding: 4rem 13rem 0rem;
    line-height: 1.5;
    vertical-align: top; /* Alinha os <textarea>'s com seus rótulos */
}

// Scrollbar:

textarea::-webkit-scrollbar { // Entire bar

    width: 10px;
    height: 11px;
}

textarea::-webkit-scrollbar-thumb { // Bar pointer

    background: hsla(0, 0%, 0%, 0.14);    
    box-shadow: none;
}

textarea::-webkit-scrollbar-thumb:hover { // Bar pointer hover

    background: hsla(0, 0%, 35%, 0.14);     
    box-shadow: none;
}

textarea::-webkit-scrollbar-track {   // Bar background

    border: 0;
    background: transparent;
}

textarea { // Regra para o Firefox
        
    scrollbar-width: auto;
    scrollbar-color: hsla(0, 0%, 0%, 0.14) transparent;
} 

input[type="file"] {

    color: transparent;
    border-radius: 0;
    filter: none;
    max-width: 100%; // <- Se tirar isso buga!
    margin-top: $margin_vertical;
}

input[type="radio"], input[type="checkbox"] {

    width: auto;
    margin-top: 0;
    margin-left: 20px;
    margin-right: 8px;
}

/*
input[type="checkbox"] {
    -webkit-appearance: none;
    appearance: none;
    width: 44px;
    height: 24px;
    // width: 51px;
    // height: 31px;
    border-radius: 12px;
    background: hsl(0, 0%, 93%);
    transition: all 0.3s; 
}

input[type="checkbox"]:checked {
    background-color: $color_theme;
    background-color: hsl(115, 100%, 66%);
    transition: all 0.3s; 
}

input[type="checkbox"]::before {
    content: '';
    display: inline-block;
    width: 18px;
    height: 18px;
    border-radius: 9px;
    background-color: hsl(0, 0%, 100%); 
    position: relative;
    top: 3px;
    left: 4px;
    transition: all 0.3s; 
}

input[type="checkbox"]:checked::before {
    left: 23px;
    transition: all 0.3s; 
}

input[type="checkbox"]:disabled {
    background: hsl(0, 0%, 93%);
}

input[type="checkbox"]:disabled::before {
    background-color: transparent; 
    border: 3px dashed white; 
}
*/

/*  
────────────────────────────
TODO:        >> select
──────────────────────────── */

select {
    border-radius: 5px; /* <- Traz inconsistências entre os navegadores. */
    height: $button_height_small;
    color: $color_text_form_select;
    background: hsla(0, 0%, 100%, 0);
    background: $bg_select;
    border: 1px solid $color_border_form;
    padding: 0 6px;
}

/*  
────────────────────────────
TODO:        >> button
──────────────────────────── 

button {
    min-width: 116px; // Tava em 120px
    color: $color_text_menu;
    padding: 10rem 16rem;
    border-width: 0;
    border-radius: 100px;
    margin-top: $margin_vertical;
    margin-bottom: $margin_vertical;
    background: $bg_button;
    text-shadow: 1px 1px 1px $color_shadow_text; 
    box-shadow: 
    inset 0px -4px 5px 3px $color_shadow_box_inset_dark,
    inset 5px 5px 5px 0px $color_shadow_box_inset_clear;
}

button:disabled {
    opacity: 0.5;
}*/

/*  
────────────────────────────
TODO:    > Focus Effect
──────────────────────────── */

input:focus:not(input[type="checkbox"]), textarea:focus {
    outline: 0px dotted;
    border: 1px solid $color_theme;
}

input[type="file"]:focus {
    outline: 1px solid $color_theme;
}

input[type="radio"]:focus/*, input[type="checkbox"]:focus*/ {
    outline: 1px solid $color_theme;
}

select:focus {
    outline: 0px dotted;
    border: 1px solid $color_theme;
    /* border-radius: 100px; <- Traz inconsistências entre os navegadores. */
}

button:focus {
    outline: 2px dotted $color_theme;
}

/*  
────────────────────────────
TODO:    > Class
──────────────────────────── */

@for $i from 1 through 30 { 
    .textarea_#{$i}l {
        height: calc(40rem + ( (#{$i} - 1) * 28rem));
    } 
}

/* 
──────────────────────────────────────────────────────
TODO:    > Switches & Buttons
────────────────────────────────────────────────────── */

.switch, 
button, 
a.button_full, a.button_text, a.button_icon, a.image {

    align-items: center;

    // margin-top: $margin_vertical;
    // margin-bottom: $margin_vertical;
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal; 

    cursor: pointer;

    .piece_text {

        text-align: justify;
    }
}

.switch.disabled, button.disabled, a.disabled {

    opacity: 0.5;
    cursor: default;
}

button {

    border-width: 0;
}

/*  
────────────────────────────
TODO:        >> Button
──────────────────────────── */

.switch.button_full, .switch.button_text, .switch.button_icon, 
button.button_full, button.button_text, button.button_icon, 
a.button_full, a.button_text, a.button_icon {

    display: inline-flex;
    justify-content: center;
    position: relative;

    width: max-content; -moz-width: fit-content; width: -moz-fit-content; width: fit-content; /* <- Declarações necessárias 
    para garantir que o Firefox funcione como se suportasse 'width: fit-content'. (Ao menos 1 delas deve funcionar.) */

    min-width: $button_height_smaller;
    min-height: $button_height_smaller;
    transition: 0s;

    .button_shine_top { // Shine
          
        content: '';
        position: absolute;
        z-index: 1;
        background: $bg_button_type_normal_and_switch_type_button_shine_top;
          
        $offset: 2px;
        $left:  $offset;

        top: 2px;
        left:  $left;
        width: calc(100% - 2 * #{$left});
        height: 49.8%;
    }

    .piece_text {

        font-weight: bold; 
    }

    .piece_icon {

        $width: 32px;

        width: $width;
        border-radius: calc(1/4 * #{$width});

        margin-right: 12px;
    }
}

.switch.button_full, .switch.button_text, .switch.button_icon {

    background: $bg_switch_type_button_off; 

    box-shadow: inset 0px 0px 8px 1px $color_shadow_box_inset_switch_type_button_dark; // Propriedade aplicada aprimorada via JS. 

    .piece_key { 

        display: none;
    }

    .piece_label {
        
        display: inline-flex;
        align-items: center;
    }

    .piece_text {

        color: $color_text_switch_type_button_off;
    }

    .piece_icon {

        filter: drop-shadow(0px 0px 1px $color_icon_outline_switch_type_button_off);
    }
}

button.button_full, button.button_text, button.button_icon, 
a.button_full, a.button_text, a.button_icon {

    /* 
    background: 
    linear-gradient(to top, hsl(195, 100%, 100%), hsla(195, 100%, 100%, 0.64), hsla(195, 100%, 100%, 0) 46%), // linear-gradient(to top, hsl(195, 100%, 100%), hsla(195, 100%, 100%, 0.64), hsla(195, 100%, 100%, 0) 46%),
    linear-gradient(to bottom, hsl(195, 100%, 80%), hsl(195, 100%, 67%), hsl(195, 100%, 60%)); 

    box-shadow: inset 0px 0px 9px 6px $color_shadow_box_inset_element_type_button_clear, 0px 0px 0px 1px hsl(195, 100%, 77%); // Propriedade aplicada aprimorada via JS.
    */

    .piece_text {

        color: $color_text_menu;
        // filter: drop-shadow(0px 0px 2px hsl(193, 100%, 42%));
    }

    .piece_icon {

        // filter: drop-shadow(0px 0px 1px hsla(195, 100%, 67%, 0.7));
    }
}

// --------------------------------------------------- Estilos de buttons alternativos -----------------------------------------------------

button.estilo_2 {
    
    background: linear-gradient(to bottom, 
    hsl(195, 100%, 100%), hsl(195, 100%, 67%) 80%, hsl(195, 100%, 50%), hsl(195, 100%, 40%));   
    box-shadow: 0 0px 0px 1px hsl(195, 100%, 60%), inset 0 0px 9px 4px hsla(0, 0%, 100%, 0.7) !important;

    .button_shine_top {
        opacity: 0.85;
    }
}

button.estilo_3 {

    background: linear-gradient(to bottom, hsl(195, 100%, 60%), hsl(195, 100%, 74%), hsl(195, 100%, 60%)); 
    box-shadow: inset 0px 0px 10px 1px hsla(0, 0%, 0%, 0.5) !important;
}

// -------------------------------------------------------------------------------------------------------------------------------------------------

.switch.button_full, button.button_full, a.button_full {

    padding: 11px; 
    padding-right: 12px;
    border-radius: 14px; // Propriedade aplicada aprimorada via JS.

    .button_shine_top { // Shine 
          
        border-radius: 12px; // Propriedade aplicada aprimorada via JS.
    }
}
 
.switch.button_text, button.button_text, a.button_text {

    padding: 10px; 
    padding-right: 11px;
    border-radius: 11px; // Propriedade aplicada aprimorada via JS.

    .button_shine_top { // Shine 
          
        border-radius: 9px; // Propriedade aplicada aprimorada via JS.
    }

    .piece_icon {
        display: none;
    }
}
      
.switch.button_icon, button.button_icon, a.button_icon {

    // justify-content: center;
    padding: 9px; // Propriedade aplicada aprimorada via JS.
    border-radius: 13px; // Propriedade aplicada aprimorada via JS.

    .button_shine_top { // Shine 
          
        border-radius: 10px; // Propriedade aplicada aprimorada via JS.
    }
    
    .piece_text {

        // display: none; // Propriedade aplicada via JS.

        padding-left: 9px; // Propriedade aplicada via JS.
        padding-right: 9px; // Propriedade aplicada via JS.
        text-align: center;
    }

    .piece_icon {
        margin: 0;
    }
}
      
.switch.button_icon:not(.disabled), button.button_icon:not(.disabled), a.button_icon:not(.disabled) {

    .piece_text {

        top: -50px; // Propriedade aplicada via JS.
    }
}

.switch.button_full.disabled, .switch.button_text.disabled {

    .piece_label {
        color: adjust-color($color_text, $alpha: -0.5);
    }
}

button.button_full.disabled, button.button_text.disabled, 
a.button_full.disabled, a.button_text.disabled {

    color: adjust-color($color_text, $alpha: -0.5);
}

.switch.button_icon.disabled, button.button_icon.disabled, a.button_icon.disabled {
    
    .piece_text {

        z-index: 1;
    }
}

// ─────────── Pill ───────────

.switch.button_full.pill, .switch.button_text.pill, .switch.button_icon.pill, 
button.button_full.pill, button.button_text.pill, button.button_icon.pill, 
a.button_full.pill, a.button_text.pill, a.button_icon.pill {

    border-radius: 1000px; 
    // background: $bg_switch_type_button_pill_and_rounded_off;

    .button_shine_top { // Shine
           
        top: 2px;  
        height: 49.5%;
        border-radius: 1000px; 
    }
}

.switch.button_full.pill, .switch.button_text.pill, .switch.button_icon.pill {

    box-shadow: inset 0px 0px 10px 1px $color_shadow_box_inset_switch_type_button_dark; // Propriedade aplicada aprimorada via JS. 
}

.switch.button_full.pill, button.button_full.pill, a.button_full.pill {

    padding-left: 18px; // Propriedade aplicada aprimorada via JS.
    padding-right: 20px; // Propriedade aplicada aprimorada via JS.

    .button_shine_top { // As propriedades que estão comentadas dentro desta regra foram aplicadas aprimoradas via JS.
          
        $left:  12px;
    
        left:  $left;
        width: calc(100% - 2 * #{$left}); 
    }  
}

.switch.button_text.pill, button.button_text.pill, a.button_text.pill {

    padding-left: 13px; // Propriedade aplicada aprimorada via JS.
    padding-right: 13px; // Propriedade aplicada aprimorada via JS.

    .button_shine_top {  // As propriedades que estão comentadas dentro desta regra foram aplicadas aprimoradas via JS.
    
       $left: 9px;  
    
       left:  $left;
       width: calc(100% - 2 * #{$left});
    }
}

.switch.button_icon.pill, button.button_icon.pill, a.button_icon.pill {

    padding: 12px; // Propriedade aplicada aprimorada via JS.

    .button_shine_top { // As propriedades que estão comentadas dentro desta regra foram aplicadas aprimoradas via JS.
        
        $left: 12px;
        
        left:  $left;
        width: calc(100% - 2 * #{$left});
    }
}


// ─────────── Rounded ─────────── (A menor dimensão de um switch rounded é configurado via JS!)

.switch.button_full.rounded, .switch.button_text.rounded, .switch.button_icon.rounded, 
button.button_full.rounded, button.button_text.rounded, button.button_icon.rounded, 
a.button_full.rounded, a.button_text.rounded, a.button_icon.rounded {

    // justify-content: center;
    border-radius: 1000px; 
    // background: $bg_switch_type_button_pill_and_rounded_off; 

    .button_shine_top { // Shine 
          
        border-radius: 1000px; 
        background: $bg_button_type_normal_and_switch_type_button_rounded_shine;
           
        $left:  3px; 

        left:  $left;
        width: calc(100% - 2 * #{$left});
    }
}

.switch.button_full.rounded, .switch.button_text.rounded, .switch.button_icon.rounded {

    .button_shine_top {
 
        $top: 3px;

        height: calc(100% - 2 * #{$top});
    }
}

// Regra necessária para o brilho se ajustar direito no botão (mais precisamente, o 'x.button_icon.rounded'):
button.button_full.rounded, button.button_text.rounded, button.button_icon.rounded, 
a.button_full.rounded, a.button_text.rounded, a.button_icon.rounded { 

    .button_shine_top {

        top: 1px;
        height: 91.1%; 
    }
}

.switch.button_full.rounded, .switch.button_text.rounded, .switch.button_icon.rounded {

    box-shadow: inset 0px 0px 10px 1px $color_shadow_box_inset_switch_type_button_dark; // Propriedade aplicada aprimorada via JS. 
}

button.button_full.rounded, button.button_text.rounded, button.button_icon.rounded,
a.button_full.rounded, a.button_text.rounded, a.button_icon.rounded {

    .button_shine_top {

        opacity: 0.96;
    }
}

.switch.button_full.rounded, button.button_full.rounded, a.button_full.rounded {

    padding: 18px;  
}

.switch.button_text.rounded, button.button_text.rounded, a.button_text.rounded {

    padding: 14px; 

    .piece_text {

        text-align: center;
    }
}

.switch.button_icon.rounded, button.button_icon.rounded, a.button_icon.rounded {

    padding: 12px; // Propriedade aplicada aprimorada via JS.
}

.switch.button_icon.rounded:not(.on) .button_shine_top { 

    opacity: 0.85;
}
 
/*  
────────────────────────────
TODO:            >>> Text Below
──────────────────────────── */

.switch.button_full.text_below, button.button_full.text_below, a.button_full.text_below { 

    // justify-content: center;
    flex-direction: column; // Necessário caso o switch não tenha 'piece_label'.
    padding-bottom: 10px; // Propriedade aplicada aprimorada via JS.

    .piece_icon {

        margin: 10px; // Propriedade aplicada aprimorada via JS.
    }

    .piece_text {

        text-align: center;
    }
}

.switch.button_full.text_below:not(.pill, .rounded), 
button.button_full.text_below:not(.pill, .rounded), 
a.button_full.text_below:not(.pill, .rounded) {

    border-radius: 24px; // Propriedade aplicada aprimorada via JS.
}

.switch.button_full.text_below:not(.pill, .rounded) .button_shine_top, 
button.button_full.text_below:not(.pill, .rounded) .button_shine_top, 
a.button_full.text_below:not(.pill, .rounded) .button_shine_top {

    border-radius: 22px; // Propriedade aplicada aprimorada via JS. // Obs.: Esta propriedade buga se for colocada na regra com o seletor ".switch.button_full.text_below:not(.pill, .rounded), button.button_full.text_below:not(.pill, .rounded)".
}

.switch.button_full.text_below.pill, button.button_full.text_below.pill, a.button_full.text_below.pill {

    padding-left: 18px; // Propriedade aplicada aprimorada via JS.
    padding-right: 18px; // Propriedade aplicada aprimorada via JS.
    padding-bottom: 11px; // Propriedade aplicada aprimorada via JS.

    .button_shine_top {

        $left: 18px;

        left:  $left;
        width: calc(100% - 2 * #{$left});
    }

    .piece_icon {

        margin: 10px 12px; // Propriedade aplicada aprimorada via JS.
    }

    .piece_text {

        margin-left: 12px; // Propriedade aplicada aprimorada via JS.
        margin-right: 12px; // Propriedade aplicada aprimorada via JS.
    }
}

.switch.button_full.text_below.rounded, button.button_full.text_below.rounded, a.button_full.text_below.rounded {

    padding-bottom: 10px; // Propriedade aplicada aprimorada via JS.

    .piece_icon {

        margin: 20px 10px 10px 10px; // Propriedade aplicada aprimorada via JS.
    }

    .piece_text {

        margin-left: 14px; // Propriedade aplicada aprimorada via JS.
        margin-right: 14px; // Propriedade aplicada aprimorada via JS.
    }
}

button.button_full.text_below,
a.button_full.text_below {  

    flex-direction: column; 
}

.switch.button_full.text_below .piece_label {

    flex-direction: column; 
    justify-content: center; 
}
 
/*  
────────────────────────────
TODO:            >>> Option ON
──────────────────────────── */

.switch.button_full.on, .switch.button_text.on, .switch.button_icon.on {

    .piece_text {

        color: $color_text_switch_type_button_on;
    }
}

/*  
// Regra necessária para o brilho se ajustar direito no botão:
.switch.button_full.rounded.on, .switch.button_text.rounded.on, .switch.button_icon.rounded.on {

    .button_shine_top {

        top: 1px;
        height: 91.1%; 
    }
}
*/

/*  
.switch.button_full.on.disabled, .switch.button_text.on.disabled, .switch.button_icon.on.disabled { 
    
    // box-shadow: inset 0px 0px 9px 4px $color_shadow_box_inset_element_type_button_clear !important;
    // border: 1px solid adjust-color($color_theme, $lightness: 30%);
 
    .piece_text {

        filter: drop-shadow(0px 0px 2px hsl(193, 100%, 34%)); 
    }
}
*/

// ─────────── Pill ───────────

/*
.switch.button_icon.on.pill {

    background: $bg_switch_type_button_pill_and_rounded_on;
}
*/

// ─────────── Rounded ───────────

/*
.switch.button_full.on.rounded, .switch.button_text.on.rounded, .switch.button_icon.on.rounded {
 
    // background: $bg_switch_type_button_pill_and_rounded_on;
}
*/
 
/*  
────────────────────────────
TODO:            >>> Floating Labels
──────────────────────────── */

@media (pointer: fine) {

    .switch.button_icon, button.button_icon, a.button_icon {

        .piece_text {

            position: absolute;  
            // top: -45px; // Propriedade aplicada aprimorada via JS. 
            //left: -15px; // Propriedade aplicada aprimorada via JS. 
            z-index: 1;

            padding: 6px 9px; 
            border: 1px solid;
            border-radius: 1000px;
            font-weight: initial;
            // box-shadow: 0px 7px 4px -2px hsla(0, 0%, 0%, 0.09); 
            filter: initial;
        }
    }

    .switch.button_icon .piece_text {

        border-color: $color_border_switch_type_button_icon_piece_text_floating_off; 
        color: $color_text_switch_type_button_icon_piece_text_floating_off;
        background: $bg_switch_type_button_icon_piece_text_floating_off;
    }

    /*  
    button.button_icon .piece_text,
    a.button_icon .piece_text {

        $color_border_element_button_icon_piece_text_floating_off: hsl(195, 100%, 50%); 
        $color_text_element_button_icon_piece_text_floating_off: white; 
        $bg_element_button_icon_piece_text_floating_off: hsla(195, 100%, 70%, 0.75);

        text-shadow: 1px 1px 1px $color_shadow_text; 
        border-color: $color_border_element_button_icon_piece_text_floating_off; 
        color: $color_text_element_button_icon_piece_text_floating_off;
        background: $bg_element_button_icon_piece_text_floating_off;
    }
    */

    .switch.button_icon .piece_label {

        justify-content: center; 
    }

    .switch.button_icon.on, button.button_icon, a.button_icon { 
    
        .piece_text { 

            color: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on;
            border-color: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on; 
            background: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on;
            filter: initial;
            // box-shadow: 0px 7px 4px -2px hsla(193, 100%, 60%, 0.24); 
        } 
    }

    .switch.button_icon:hover, button.button_icon:hover, a.button_icon:hover {
    
        .piece_text {

            display: block !important;
        }
    }
}
 
/*  
────────────────────────────
TODO:            >>> Colors
──────────────────────────── */

/*------ Default: Blue ------*/

button.button_full, button.button_text, button.button_icon, 
a.button_full, a.button_text, a.button_icon,
button.button_full.blue, button.button_text.blue, button.button_icon.blue, 
a.button_full.blue, a.button_text.blue, a.button_icon.blue { 

    background: $bg_element_type_button_blue;

    box-shadow: $box_shadow_element_type_button_blue;

    .piece_icon {

        filter: drop-shadow(0px 0px 1px hsl(195, 100%, 55%));
    }
}

button.button_full, button.button_text,
a.button_full, a.button_text, 
button.button_full.blue, button.button_text.blue, 
a.button_full.blue, a.button_text.blue { 

    .piece_text {

        filter: $filter_element_type_button_piece_text_blue;
    }
}

@media not all and (pointer: coarse) { // Hover

    button.button_full:not(.disabled):hover, button.button_text:not(.disabled):hover, button.button_icon:not(.disabled):hover,
    a.button_full:not(.disabled):hover, a.button_text:not(.disabled):hover, a.button_icon:not(.disabled):hover,
    button.button_full.blue:not(.disabled):hover, button.button_text.blue:not(.disabled):hover, button.button_icon.blue:not(.disabled):hover,
    a.button_full.blue:not(.disabled):hover, a.button_text.blue:not(.disabled):hover, a.button_icon.blue:not(.disabled):hover {

        background: $bg_element_type_button_clear_blue; // <- Propriedade aplicada aprimorada via JS.
        
        box-shadow:$box_shadow_element_type_button_clear_blue; // <- Propriedade aplicada aprimorada via JS.

        .piece_icon {

            filter: $filter_element_type_button_piece_icon_clear_blue; 
        }
    }
}

.switch.button_full.on, .switch.button_text.on, .switch.button_icon.on,
.switch.button_full.blue.on, .switch.button_text.blue.on, .switch.button_icon.blue.on { // Switch ON

    background: $bg_element_type_button_clear_blue;
    box-shadow: $box_shadow_element_type_button_clear_blue;
 
    .piece_text {

        filter: $filter_element_type_button_piece_text_blue; 
    }

    .piece_icon {

        filter: $filter_element_type_button_piece_icon_clear_blue; 
    }
}

.switch.button_icon.on,
.switch.button_icon.blue.on { // Switch ON
 
    .piece_text {

        filter: initial;  
    }
}

.switch.button_full.on.disabled, .switch.button_text.on.disabled, .switch.button_icon.on.disabled,
.switch.button_full.blue.on.disabled, .switch.button_text.blue.on.disabled, .switch.button_icon.blue.on.disabled { // Switch ON Disabled
 
    .piece_text {

        filter: $filter_switch_type_button_piece_text_clear_disabled_blue; 
    }  
}

@media (pointer: fine) { // Floating Labels

    .switch.button_icon.on, button.button_icon, a.button_icon,
    .switch.button_icon.blue.on, button.button_icon.blue, a.button_icon.blue { 
    
        .piece_text {

            color: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on;
            border-color: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on; 
            background: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on;
        } 
    }
}

/*------ Red ------*/

button.button_full.red, button.button_text.red, button.button_icon.red, 
a.button_full.red, a.button_text.red, a.button_icon.red {

    background: 
    linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.7), white), 
    linear-gradient(to bottom, hsl(0, 100%, 94%), hsl(0, 100%, 67%), hsl(0, 100%, 67%));

    box-shadow: 0px 0px 0px 1px hsl(0, 100%, 84%), inset 0px 0px 9px 6px white;

    .piece_icon {

        filter: drop-shadow(0px 0px 1px hsl(0, 100%, 65%));
    }
}

button.button_full.red, button.button_text.red, 
a.button_full.red, a.button_text.red {

    .piece_text {

        filter: $filter_element_type_button_piece_text_red;
    }
}

@media not all and (pointer: coarse) { // Hover
    
    button.button_full.red:not(.disabled):hover, button.button_text.red:not(.disabled):hover, button.button_icon.red:not(.disabled):hover,
    a.button_full.red:not(.disabled):hover, a.button_text.red:not(.disabled):hover, a.button_icon.red:not(.disabled):hover {

        background: $bg_element_type_button_clear_red;
        
        box-shadow: $box_shadow_element_type_button_clear_red; 

        .piece_icon {

            filter: $filter_element_type_button_piece_icon_clear_red; 
        }
    }
}

.switch.button_full.red.on, .switch.button_text.red.on, .switch.button_icon.red.on { // Switch ON

    background: $bg_element_type_button_clear_red;
    box-shadow: $box_shadow_element_type_button_clear_red;
 
    .piece_text {

        filter: $filter_element_type_button_piece_text_red; 
    }

    .piece_icon {

        filter: $filter_element_type_button_piece_icon_clear_red; 
    }
}

.switch.button_icon.red.on { // Switch ON
 
    .piece_text {

        filter: initial;  
    }
}

.switch.button_full.red.on.disabled, .switch.button_text.red.on.disabled, .switch.button_icon.red.on.disabled { // Switch ON Disabled
 
    .piece_text {

        filter: $filter_switch_type_button_piece_text_clear_disabled_red; 
    }  
}

@media (pointer: fine) { // Floating Labels

    .switch.button_icon.red.on, button.button_icon.red, a.button_icon.red {  
    
        .piece_text {

            border-color: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_red; 
            background: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on_red;
            color: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_red;
        } 
    }
}

/*------ Yellow ------*/

button.button_full.yellow, button.button_text.yellow, button.button_icon.yellow, 
a.button_full.yellow, a.button_text.yellow, a.button_icon.yellow {

    background: 
    linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.7), white), 
    linear-gradient(to bottom, hsl(60, 100%, 54%), hsl(60, 100%, 46%), hsl(60, 100%, 46%)); // linear-gradient(to bottom, hsl(60, 100%, 54%), hsl(60, 100%, 43%), hsl(60, 100%, 46%));

    box-shadow: 0px 0px 0px 1px hsl(60, 100%, 43%), inset 0px 0px 9px 6px white;

    .piece_icon {

        filter: drop-shadow(0px 0px 1px hsl(60, 100%, 36%))
    }
}

button.button_icon.yellow, 
a.button_icon.yellow {

    background: 
    linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.7), white), 
    linear-gradient(to bottom, hsl(60, 100%, 54%), hsl(60, 100%, 43%), hsl(60, 100%, 46%));
} 

button.button_full.yellow, button.button_text.yellow,
a.button_full.yellow, a.button_text.yellow {

    .piece_text {

        filter: $filter_element_type_button_piece_text_yellow;
    }
}

@media not all and (pointer: coarse) { // Hover
    
    button.button_full.yellow:not(.disabled):hover, button.button_text.yellow:not(.disabled):hover, button.button_icon.yellow:not(.disabled):hover,
    a.button_full.yellow:not(.disabled):hover, a.button_text.yellow:not(.disabled):hover, a.button_icon.yellow:not(.disabled):hover {

        background: $bg_element_type_button_clear_yellow;
        
        box-shadow: $box_shadow_element_type_button_clear_yellow;

        .piece_icon {

            filter: $filter_element_type_button_piece_icon_clear_yellow; 
        }
    }
    
    button.button_icon.yellow:not(.disabled):hover,
    a.button_icon.yellow:not(.disabled):hover {

        background: $bg_element_type_button_icon_clear_yellow; 
    }
}

.switch.button_full.yellow.on, .switch.button_text.yellow.on, .switch.button_icon.yellow.on { // Switch ON

    background: $bg_element_type_button_clear_yellow;
    box-shadow: $box_shadow_element_type_button_clear_yellow;
 
    .piece_text {

        filter: $filter_element_type_button_piece_text_yellow; 
    }

    .piece_icon {

        filter: $filter_element_type_button_piece_icon_clear_yellow; 
    }
}

.switch.button_icon.yellow.on { // Switch ON 

    background: $bg_element_type_button_icon_clear_yellow; 
}

.switch.button_icon.yellow.on { // Switch ON
 
    .piece_text {

        filter: initial;  
    }
}

.switch.button_full.yellow.on.disabled, .switch.button_text.yellow.on.disabled, .switch.button_icon.yellow.on.disabled { // Switch ON Disabled
 
    .piece_text {

        filter: $filter_switch_type_button_piece_text_clear_disabled_yellow; 
    }  
}

@media (pointer: fine) { // Floating Labels

    .switch.button_icon.yellow.on, button.button_icon.yellow, a.button_icon.yellow {  
    
        .piece_text {

            border-color: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_yellow; 
            background: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on_yellow;
            color: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_yellow;
        } 
    }
}

/*------ Green ------*/

button.button_full.green, button.button_text.green, button.button_icon.green, 
a.button_full.green, a.button_text.green, a.button_icon.green {

    background: 
    linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.7), white), 
    linear-gradient(to bottom, hsl(120, 100%, 70%), hsl(120, 100%, 44%), hsl(120, 100%, 54%));

    box-shadow: 0px 0px 0px 1px hsl(120, 100%, 46%), inset 0px 0px 9px 6px white;

    .piece_icon {

        filter: drop-shadow(0px 0px 1px hsl(120, 100%, 38%));
    }
}

button.button_full.green, button.button_text.green, 
a.button_full.green, a.button_text.green {

    .piece_text {

        filter: $filter_element_type_button_piece_text_green;
    }
}

@media not all and (pointer: coarse) { // Hover
    
    button.button_full.green:not(.disabled):hover, button.button_text.green:not(.disabled):hover, button.button_icon.green:not(.disabled):hover,
    a.button_full.green:not(.disabled):hover, a.button_text.green:not(.disabled):hover, a.button_icon.green:not(.disabled):hover {

        background: $bg_element_type_button_clear_green;
        
        box-shadow: $box_shadow_element_type_button_clear_green; 

        .piece_icon {

            filter: $filter_element_type_button_piece_icon_clear_green; 
        }
    }
}

.switch.button_full.green.on, .switch.button_text.green.on, .switch.button_icon.green.on { // Switch ON

    background: $bg_element_type_button_clear_green;
    box-shadow: $box_shadow_element_type_button_clear_green;
 
    .piece_text {

        filter: $filter_element_type_button_piece_text_green; 
    }

    .piece_icon {

        filter: $filter_element_type_button_piece_icon_clear_green; 
    }
}

.switch.button_icon.green.on { // Switch ON
 
    .piece_text {

        filter: initial;  
    }
}

.switch.button_full.green.on.disabled, .switch.button_text.green.on.disabled, .switch.button_icon.green.on.disabled { // Switch ON Disabled
 
    .piece_text {

        filter: $filter_switch_type_button_piece_text_clear_disabled_green; 
    }  
}

@media (pointer: fine) { // Floating Labels

    .switch.button_icon.green.on, button.button_icon.green, a.button_icon.green {  
    
        .piece_text {

            border-color: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_green; 
            background: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on_green;
            color: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_green;
        } 
    }
}

/*------ Black ------*/

button.button_full.black, button.button_text.black, button.button_icon.black, 
a.button_full.black, a.button_text.black, a.button_icon.black {

    background: 
    linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.7), white), 
    linear-gradient(to bottom, hsl(195, 0%, 90%), hsl(195, 0%, 44%), hsl(195, 0%, 44%));

    box-shadow: 0px 0px 0px 1px hsl(195, 0%, 68%), inset 0px 0px 9px 6px white;

    .piece_icon {

        filter: drop-shadow(0px 0px 1px hsl(0, 0%, 46%));
    }
}

button.button_full.black, button.button_text.black,
a.button_full.black, a.button_text.black {

    .piece_text {

        filter: $filter_element_type_button_piece_text_black;
    }
}

@media not all and (pointer: coarse) { // Hover
    
    button.button_full.black:not(.disabled):hover, button.button_text.black:not(.disabled):hover, button.button_icon.black:not(.disabled):hover,
    a.button_full.black:not(.disabled):hover, a.button_text.black:not(.disabled):hover, a.button_icon.black:not(.disabled):hover {

        background: $bg_element_type_button_clear_black;
        
        box-shadow: $box_shadow_element_type_button_clear_black; 

        .piece_icon {

            filter: $filter_element_type_button_piece_icon_clear_black; 
        }
    } 
}

.switch.button_full.black.on, .switch.button_text.black.on, .switch.button_icon.black.on { // Switch ON

    background: $bg_element_type_button_clear_black;
    box-shadow: $box_shadow_element_type_button_clear_black;
 
    .piece_text {

        filter: $filter_element_type_button_piece_text_black; 
    }

    .piece_icon {

        filter: $filter_element_type_button_piece_icon_clear_black; 
    }
}

.switch.button_icon.black.on { // Switch ON 
 
    .piece_text {

        filter: initial;  
    }
}

.switch.button_full.black.on.disabled, .switch.button_text.black.on.disabled, .switch.button_icon.black.on.disabled { // Switch ON Disabled
 
    .piece_text {

        filter: $filter_switch_type_button_piece_text_clear_disabled_black; 
    }  
}

@media (pointer: fine) { // Floating Labels

    .switch.button_icon.black.on, button.button_icon.black, a.button_icon.black {  
    
        .piece_text {

            border-color: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_black; 
            background: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on_black;
            color: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_black;
        } 
    }
}
 
/*  
────────────────────────────
TODO:        >> Image
──────────────────────────── */
      
.switch.image, button.image, a.image {

    display: inline-flex;

    /* width: max-content; -moz-width: fit-content; width: -moz-fit-content; width: fit-content; <- Declarações necessárias 
    para garantir que o Firefox funcione como se suportasse 'width: fit-content'. (Ao menos 1 delas deve funcionar.) */

    min-width: $button_height_smaller;
    min-height: $button_height_smaller;
    width: $button_and_switch_both_type_image_icon_size;
    // height: $button_and_switch_both_type_image_icon_size;

    background: 0; 
    
    .piece_text {

        // display: none; // Propriedade aplicada via JS.

        padding-left: 9px; // Propriedade aplicada via JS.
        padding-right: 9px; // Propriedade aplicada via JS.
    }

    .piece_icon {

        width: inherit;
        height: inherit;
        margin: 0;

        filter: drop-shadow(0px 0px 1px $color_outline_button_and_switch_both_type_image);
        // transition: 0.17s; // Buga se usado com 'filter'!

        border-radius: calc(1/4 * #{$button_and_switch_both_type_image_icon_size}); // Propriedade aplicada aprimorada via JS. 
    }
}

.switch.image .piece_label {

    width: inherit;
    height: inherit;
}

.switch.image .piece_key {
    
    display: none;
}
      
.switch.image:not(.disabled), button.image:not(.disabled), a.image:not(.disabled) {

    .piece_text {

        top: -49px; // Propriedade aplicada via JS.
    }
}

// ─────────── pill ───────────

.switch.image.pill, button.image.pill, a.image.pill {

    border-radius: 1000px !important; // Declaração necessária apenas para 'button:focus'.
    
    .piece_icon {

        border-radius: 1000px !important;
    }
}

/*  
────────────────────────────
TODO:            >>> Option ON
──────────────────────────── */

.switch.image.on .piece_icon {

    // border: 2px solid white; filter: drop-shadow(0px 0px 6px $color_theme);  
    // box-shadow: 0px 0px 0px 2px white; filter: drop-shadow(0px 0px 6px $color_theme);  
    // box-shadow: 0px 0px 3px 3px white; filter: drop-shadow(0px 0px 7px $color_theme);  
    
    box-shadow:  0px 0px 0px 2px white, 0px 0px 12px 2px $color_theme;
}
 
/*  
────────────────────────────
TODO:            >>> Floating Labels
──────────────────────────── */

@media (pointer: fine) {  

    .switch.image, button.image, a.image {
        
        justify-content: center;
        position: relative;

        .piece_text {

            position: absolute;  
            // top: -45px; // Propriedade aplicada aprimorada via JS.  
            // left: -15px; // Propriedade aplicada aprimorada via JS. 
            z-index: 1;
            padding-top: 6px; 
            padding-bottom: 6px;
            // padding-left e padding-right foram aplicados via JS.
            border: 1px solid;
            border-radius: 1000px;
            font-weight: initial;
            text-align: center;
        }
    }

    .switch.image .piece_text {

        color: $color_text_switch_type_image_piece_text_floating_off;
        border-color: $color_border_switch_type_image_piece_text_floating_off; 
        background: $bg_switch_type_image_piece_text_floating_off;
        box-shadow: 0px 7px 4px -2px $color_box_shadow_switch_type_image_piece_text_floating_off; 
    }

    .switch.image .piece_label {

        display: inline-flex;
        justify-content: center; 
        align-items: center;
        position: relative;
    }

    /*
    button.image, a.image {

        justify-content: center;
        position: relative;
    }
    */

    .switch.image.on .piece_label {
        
        filter: initial; 
    }

    .switch.image.on .piece_text {

        filter: initial;
        box-shadow: 0px 7px 4px -2px $color_box_shadow_switch_type_image_piece_text_floating_on;  
    }

    .switch.image:hover, button.image:hover, a.image:hover { 
        
        .piece_text {

            display: block !important;
        }
    }
}
 
/*  
────────────────────────────
TODO:            >>> Colors
──────────────────────────── */

@media (pointer: fine) {  

    /*------ Default: Blue ------*/

    .switch.image.on .piece_text,

    .switch.image.blue.on .piece_text {

        color: $color_text_switch_type_image_piece_text_floating_on;
        border-color: $color_border_switch_type_image_piece_text_floating_on; 
        background: $bg_switch_type_image_piece_text_floating_on;
    }

    button.image .piece_text, a.image .piece_text,

    button.image.blue .piece_text, a.image.blue .piece_text { 

        color: $color_text_button_type_image_piece_text_floating;
        border-color: $color_border_button_type_image_piece_text_floating; 
        background: $bg_button_type_image_piece_text_floating;
        box-shadow:
        inset 0px 0px 7px 1px $color_box_shadow_in_button_type_image_piece_text_floating, 
        0px 7px 4px -2px $color_box_shadow_out_button_type_image_piece_text_floating;  
    }

    /*------ Red ------*/

    .switch.image.red.on .piece_text {

        color: $color_text_switch_type_image_piece_text_floating_on_red;
        border-color: $color_border_switch_type_image_piece_text_floating_on_red; 
        background: $bg_switch_type_image_piece_text_floating_on_red;
    }

    button.image.red .piece_text, a.image.red .piece_text {

        color: $color_text_button_type_image_piece_text_floating_red;
        border-color: $color_border_button_type_image_piece_text_floating_red; 
        background: $bg_button_type_image_piece_text_floating_red;
        box-shadow:
        inset 0px 0px 7px 1px $color_box_shadow_in_button_type_image_piece_text_floating_red, 
        0px 7px 4px -2px $color_box_shadow_out_button_type_image_piece_text_floating_red;  
    }
    
    /*------ Yellow ------*/ 

    .switch.image.yellow.on .piece_text {

        color: $color_text_switch_type_image_piece_text_floating_on_yellow;
        border-color: $color_border_switch_type_image_piece_text_floating_on_yellow; 
        background: $bg_switch_type_image_piece_text_floating_on_yellow;
    }

    button.image.yellow .piece_text, a.image.yellow .piece_text {

        color: $color_text_button_type_image_piece_text_floating_yellow;
        border-color: $color_border_button_type_image_piece_text_floating_yellow; 
        background: $bg_button_type_image_piece_text_floating_yellow;
        box-shadow:
        inset 0px 0px 7px 1px $color_box_shadow_in_button_type_image_piece_text_floating_yellow, 
        0px 7px 4px -2px $color_box_shadow_out_button_type_image_piece_text_floating_yellow;  
    }

    /*------ Green ------*/

    .switch.image.green.on .piece_text {

        color: $color_text_switch_type_image_piece_text_floating_on_green;
        border-color: $color_border_switch_type_image_piece_text_floating_on_green; 
        background: $bg_switch_type_image_piece_text_floating_on_green;
    }

    button.image.green .piece_text, a.image.green .piece_text {

        color: $color_text_button_type_image_piece_text_floating_green;
        border-color: $color_border_button_type_image_piece_text_floating_green; 
        background: $bg_button_type_image_piece_text_floating_green;
        box-shadow:
        inset 0px 0px 7px 1px $color_box_shadow_in_button_type_image_piece_text_floating_green, 
        0px 7px 4px -2px $color_box_shadow_out_button_type_image_piece_text_floating_green;  
    }

    /*------ Black ------*/

    .switch.image.black.on .piece_text {

        color: $color_text_switch_type_image_piece_text_floating_on_black;
        border-color: $color_border_switch_type_image_piece_text_floating_on_black; 
        background: $bg_switch_type_image_piece_text_floating_on_black;
    }

    button.image.black .piece_text, a.image.black .piece_text {

        color: $color_text_button_type_image_piece_text_floating_black;
        border-color: $color_border_button_type_image_piece_text_floating_black; 
        background: $bg_button_type_image_piece_text_floating_black;
        box-shadow:
        inset 0px 0px 7px 1px $color_box_shadow_in_button_type_image_piece_text_floating_black, 
        0px 7px 4px -2px $color_box_shadow_out_button_type_image_piece_text_floating_black;  
    }
}

/*  
────────────────────────────
TODO:        >> Key (Only Switches)
──────────────────────────── */

.switch.key_full, .switch.key_text {

    display: flex;
    justify-content: space-between;

    margin-top: $margin_vertical;
    margin-bottom: $margin_vertical;
    
    .piece_key { // Path
 
        order: 1;
        margin-left: 18px; 
        margin-right: 0;
        //margin-right: 12px;
        border-radius: 1000px;
        background: $bg_switch_type_key_path_off;
    }

    .piece_key::before { // Ball

        content: '';
        display: inline-block;
        position: relative;
        border-radius: 1000px;
        background: $bg_switch_type_key_ball; 
        transition: all 0.39s; 
    }

    .piece_key::after { // Shine
        
        content: '';
        display: inline-block;
        position: relative;
        border-radius: 1000px;
        background: $bg_switch_type_key_ball_shine;
        transition: all 0.39s; 
    }

    .piece_label {
        display: inline-flex;
        align-items: center;
        margin: 0;
        text-indent: 0;
    }

    .piece_icon {

        $width: 32px;

        width: $width;
        border-radius: calc(1/4 * #{$width});

        margin-right: 12px;
        filter: drop-shadow(0px 0px 1px rgba(0, 0, 0, 0.15));
    }

    .piece_text {

        line-height: 1.5;
    }
} 

.switch.key_text {

    .piece_icon {
        display: none;
    }
}

.switch.key_full.on, .switch.key_text.on {

    .piece_key { // Path

        border-color: hsl(187, 100%, 60%);
        background: $bg_switch_type_key_path_on;
        box-shadow: 0px 0px 6px 0px hsla(188, 100%, 45%, 0.50);
    }

    .piece_key::before { // Ball

        border: 1px solid hsl(187, 100%, 80%); 
        background: $bg_switch_type_key_on_ball;
        box-shadow: 0px 0px 13px 0px hsl(188, 100%, 60%); 
    } 
}

.switch.key_full.disabled, .switch.key_text.disabled {

    .piece_key::before { // Ball

        border-top: 0;
        border-bottom: 0;
    }

    .piece_label {
        color: adjust-color($color_text, $alpha: -0.5);
    }
}

.switch.key_full.on.disabled, .switch.key_text.on.disabled {

    .piece_key { // Path

        box-shadow: none;
    }
    
    .piece_key::before { // Ball

        border: 2px solid hsl(187, 100%, 80%);
        box-shadow: none;
    }
}

.switch.key_full.inverted, .switch.key_text.inverted {

    // justify-content: space-between;
    justify-content: initial;

    .piece_key {

        /*  
        order: 1;
        margin-left: 18px; 
        margin-right: 0;
        */

        order: initial;
        margin-left: 0px; 
        margin-right: 12px;
    }
} 

/*  
────────────────────────────
TODO:            >>> Sizes & Positions
──────────────────────────── */

// Tamanho para tela grande

.switch.key_full, .switch.key_text {

    .piece_key { // Path

        min-width: 47px;
        height: 6px; 
        border: 1px solid black;
    }

    .piece_key::before { // Ball

        top: -11px;
        left: -2px;
        width: $switch_type_key_ball_size;
        height: $switch_type_key_ball_size;
        border: 0;
    }

    .piece_key::after { // Shine

        top: -19px; // calc(-0.9 * #{$switch_type_key_ball_size} + 3px);
        left: -21px; //calc(-1.05 * #{$switch_type_key_ball_size} + 0.25 * #{$switch_type_key_ball_size} - 2px); 
        width: 14px; // calc(0.585 * #{$switch_type_key_ball_size});
        height: 14px; // calc(0.585 * #{$switch_type_key_ball_size});
    }
}

.switch.key_full.on, .switch.key_text.on {
    
    .piece_key::before { // Ball

        top: -10px; 
        left: 23px; 
        width: calc(#{$switch_type_key_ball_size} + 2); 
        height: calc(#{$switch_type_key_ball_size} + 2); 
        transition: all 0.39s; 
    }

    .piece_key::after { // Shine
        
        top: calc(-0.9 * #{$switch_type_key_ball_size} + 4px);
        left: calc(-1.05 * #{$switch_type_key_ball_size} + 0.25 * #{$switch_type_key_ball_size} + 23px); 
        transition: all 0.39s; 
    }
}

@media (max-width: $screen_small_widthLimit), (max-height: $screen_small_widthLimit) {

    // Tamanho para tela pequena

    .switch.key_full, .switch.key_text {

        .piece_key { // Path

            min-width: calc(53px + #{$switch_type_key_ball_size_SS} - #{$switch_type_key_ball_size});
            height: 8px; 
            background: $bg_switch_type_key_path_off_SS;
        }
    
        .piece_key::before { // Ball

            top: -12px;
            width: $switch_type_key_ball_size_SS;
            height: $switch_type_key_ball_size_SS;
            background: $bg_switch_type_key_ball;
        }

        .piece_key::after { // Shine

            top: calc(-0.9 * #{$switch_type_key_ball_size_SS} + 4px);
            left: calc(-1.05 * #{$switch_type_key_ball_size_SS} + 0.25 * #{$switch_type_key_ball_size_SS} - 2px); 
            width: calc(0.6 * #{$switch_type_key_ball_size_SS});
            height: calc(0.6 * #{$switch_type_key_ball_size_SS}); 
        }
    }
    
    .switch.key_full.on, .switch.key_text.on {

        .piece_key { // Path

            box-shadow: 0px 0px 6px 0px hsla(188, 100%, 50%, 0.60);
        }
        
        .piece_key::before { // Ball

            top: -11px; 
            left: 29px;  
            width: calc(#{$switch_type_key_ball_size_SS} + 2); 
            height: calc(#{$switch_type_key_ball_size_SS} + 2); 
        }

        .piece_key::after { // Shine
            
            top: calc(-0.9 * #{$switch_type_key_ball_size_SS} + 5px);
            left: calc(-1.05 * #{$switch_type_key_ball_size_SS} + 0.25 * #{$switch_type_key_ball_size_SS} + 29px); 
            transition: all 0.42s; 
        } 
    }
}

/*  
────────────────────────────
TODO:    > Choices
──────────────────────────── 

$bg_element_type_button_blue
$box_shadow_element_type_button_blue
*/

.choice.horizontal, .choice.vertical, .choice.dropdown {

    display: inline-block;
    font-size: 0;

    width: max-content; -moz-width: fit-content; width: -moz-fit-content; width: fit-content; /* <- Declarações necessárias 
    para garantir que o Firefox funcione como se suportasse 'width: fit-content'. (Ao menos 1 delas deve funcionar.) */

    padding: 0;
    margin: 0;
    list-style-type: none;
    //border: 1px solid adjust-color($color_theme, $lightness: -1%);
    // text-shadow: 1px 1px 1px $color_shadow_text; // <- Parte do estilo de choice anterior!

    li + li {
        margin-top: 0;
    }
}

.choice.horizontal > li a, .choice.vertical > li a, .choice.dropdown > li a {

    display: inline-flex;
    align-items: center;
    width: 100%;
    height: 100%;
}

.choice.horizontal > li, .choice.vertical > li, .choice.dropdown > li {

    span {

        display: inline-flex;
        justify-content: center;
        align-items: center; 
        color: $color_text_menu;
        font-weight: bold;
        filter: $filter_element_type_button_piece_text_blue; // <- Parte do estilo de choice novo! 

        .text_img, .text_img_size {
            
            filter: drop-shadow(1px 1px 1px $color_shadow_text); 
        }
    }

    span:hover {
        
        filter: drop-shadow(0px 0px 2px hsl(193, 100%, 36%)); // <- Parte do estilo de choice novo! 
    }
}

.choice.horizontal > li span > img, .choice.vertical > li span > img, .choice.dropdown > li span > img {

    margin-right: 6px;
}

/*  
────────────────────────────
TODO:        >> Horizontal
──────────────────────────── */

.choice.horizontal {

    display: inline-flex;
    border-radius: 1000px;
    // background: $bg_choice; // <- Parte do estilo de choice anterior!
    // box-shadow: // <- Parte do estilo de choice anterior!
    // inset 0px -4px 5px 3px $color_shadow_box_inset_dark,
    // inset 5px 5px 5px 0px $color_shadow_box_inset_clear;

    // background: ; // <- Parte do estilo de choice novo!
    // linear-gradient(to top, hsl(195, 100%, 100%), hsla(195, 100%, 100%, 0.64), hsla(195, 100%, 100%, 0) 46%),
    // linear-gradient(to bottom, hsl(195, 100%, 80%), hsl(195, 100%, 67%), hsl(195, 100%, 60%)); 
    
    background: $bg_element_type_button_blue; // <- Parte do estilo de choice novo!

    // box-shadow: inset 0px 0px 9px 6px white, 0px 0px 0px 1px hsl(195, 100%, 77%); // <- Parte do estilo de choice novo!
    box-shadow: $box_shadow_element_type_button_blue; // <- Parte do estilo de choice novo!

    > li {
        display: inline-flex;
        justify-content: center;
        align-items: center; 
        min-height: $button_height_small;

        a {
            min-height: $button_height_small;
        }

        span {
            padding: 0 10px;
        }
    }

    > li:nth-of-type(1) {
        border-right: 1px solid $color_text_menu; 
        border-top-left-radius: 1000px;
        border-bottom-left-radius: 1000px;

        // background: $bg_choice_label; // <- Parte do estilo de choice anterior!
        text-shadow: 1px 1px 1px $color_shadow_text;
        // box-shadow: // <- Parte do estilo de choice anterior!
        // inset 0px -4px 5px 3px $color_shadow_box_inset_dark,
        // inset 5px 5px 5px 0px $color_shadow_box_inset_clear;

        background: // <- Parte do estilo de choice novo!
        linear-gradient(to top, hsl(195, 100%, 100%), hsla(195, 100%, 100%, 0.64), hsla(195, 100%, 100%, 0) 46%),
        linear-gradient(to bottom, hsl(195, 100%, 70%), hsl(195, 100%, 57%), hsl(195, 100%, 50%));

        box-shadow: inset 2px 0px 9px 4px hsl(195, 100%, 41%), 0px 0px 0px 1px hsl(195, 100%, 77%); // <- Parte do estilo de choice novo!
            
        span {
            padding-left: 15px;
        }
    }
     
    > li:nth-of-type(2) {
        border-left-width: 0px;
    }

    > li:nth-last-of-type(1) { 

        a { 
            border-top-right-radius: 1000px;
            border-bottom-right-radius: 1000px;
        }

        > a > img {
            border-top-right-radius: 1000px;
            border-bottom-right-radius: 1000px;
        }

        span {
            padding-right: 15px;
        }
    }

    // > li a:hover {

    //     background: hsla(0, 0%, 100%, 0.25); 
    //     // text-shadow: 1px 1px 1px $color_shadow_text_strong; // <- Parte do estilo de choice anterior!
    // }

    // > li:nth-of-type(1) a:hover {
    //     background: 0;
    //     text-shadow: 1px 1px 1px $color_shadow_text;
    // }

    > li + li {
        border-left: 1px solid $color_text_menu;
    }
}
 
/*  
────────────────────────────
TODO:        >> Vertical
──────────────────────────── */

.choice.vertical {

    border-radius: $border_radius_default;
    // background: $bg_choice; // <- Parte do estilo de choice anterior!
    // box-shadow: // <- Parte do estilo de choice anterior!
    // inset 0px -4px 5px 3px $color_shadow_box_inset_dark,
    // inset 5px 5px 5px 0px $color_shadow_box_inset_clear;

    // background: // <- Parte do estilo de choice novo!
    // linear-gradient(to bottom, hsla(195, 100%, 100%, 0) 46%, hsla(195, 100%, 100%, 0.64), hsla(0, 0%, 100%, 0.9)), 
    // linear-gradient(to bottom, hsl(195, 100%, 80%), hsl(195, 100%, 67%), hsl(195, 100%, 60%)); 
    
    background: // <- Parte do estilo de choice novo!
    linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.7), white), hsl(195, 100%, 55%);

    // box-shadow: inset 0px 0px 9px 6px white, 0px 0px 0px 1px hsl(195, 100%, 77%); // <- Parte do estilo de choice novo!

    box-shadow: $box_shadow_element_type_button_blue; // <- Parte do estilo de choice novo!

    > li {
        display: flex;
        align-items: center;
        min-height: $button_height;

        a {
            min-height: $button_height;
        }

        span {
            padding: 0px 19px 0px 17px;
        }
    }

    // > li a:hover {
        // background: $bg_choice_selector; // <- Parte do estilo de choice anterior!
        // background: hsla(0, 0%, 100%, 0.3);
        // text-shadow: 1px 1px 1px $color_shadow_text_strong; // <- Parte do estilo de choice anterior!
    // }

    // > li:nth-of-type(1) a:hover {
    //     background: 0;
    //     text-shadow: 1px 1px 1px $color_shadow_text;
    // }

    > li:nth-of-type(1) {

        border-top-left-radius: 20px;
        border-top-right-radius: 20px;

        justify-content: center;
        // background: $bg_choice_label; // <- Parte do estilo de choice anterior!
        text-shadow: 1px 1px 1px $color_shadow_text;
        // box-shadow:  // <- Parte do estilo de choice anterior!
        // inset 0px -4px 5px 3px $color_shadow_box_inset_dark,
        // inset 5px 5px 5px 0px $color_shadow_box_inset_clear;

        background: // <- Parte do estilo de choice novo!
        linear-gradient(to top, hsl(195, 100%, 100%), hsla(195, 100%, 100%, 0.64), hsla(195, 100%, 100%, 0) 46%),
        linear-gradient(to bottom, hsl(195, 100%, 70%), hsl(195, 100%, 57%), hsl(195, 100%, 50%));

        box-shadow: inset 2px -2px 9px 4px hsl(195, 100%, 41%), 0px 0px 0px 1px hsl(195, 100%, 77%); // <- Parte do estilo de choice novo! // Escuro
        //box-shadow: inset 0px 2px 2px 0px hsl(195, 100%, 34%); // <- Parte do estilo de choice novo! // Claro

        a {
            display: flex;
            justify-content: center;
        }
    }

    > li:nth-last-of-type(1) {
        border-bottom-left-radius: 20px;
        border-bottom-right-radius: 20px;

        a {
            border-bottom-left-radius: 20px;
            border-bottom-right-radius: 20px; 
        }

        > a > img {
            border-bottom-left-radius: 20px;
            border-bottom-right-radius: 20px;
        }
    }
   
    > li + li {
        border-top: 1px solid $color_text_menu;
    }
}

/*  
────────────────────────────
TODO:        >> Dropdown
──────────────────────────── */

.choice.dropdown {

    border-radius: 1000px;
    // background: $bg_choice; // <- Parte do estilo de choice anterior!

    // background: // <- Parte do estilo de choice novo!
    // linear-gradient(to top, hsl(195, 100%, 100%), hsla(195, 100%, 100%, 0.64), hsla(195, 100%, 100%, 0) 46%),
    // linear-gradient(to bottom, hsl(195, 100%, 80%), hsl(195, 100%, 67%), hsl(195, 100%, 60%)); 
    
    background: $bg_element_type_button_blue; // <- Parte do estilo de choice novo!

    // box-shadow: // <- Parte do estilo de choice anterior!
    // inset 0px -4px 5px 3px $color_shadow_box_inset_dark,
    // inset 5px 5px 5px 0px $color_shadow_box_inset_clear;

    box-shadow: inset 0px 0px 9px 6px $color_shadow_box_inset_element_type_button_clear, 0px 0px 0px 1px hsl(195, 100%, 66%); // <- Parte do estilo de choice novo!
    
    > li {
        display: inline-flex;
        justify-content: center;
        align-items: center;
        min-height: $button_height_small;

        span {
            padding: 0 10px 0 14px;
        }

        > a > img {
            border-radius: 1000px;
        }

        span::after { 
            content: "▼";
            margin-left: 5rem;
        }
    }

    > li:not(:nth-of-type(1)) {
        display: none;
    }

    > li:nth-of-type(1) {

        background: 0;

        cursor: pointer;

        > img {
            border-radius: 1000px;
        }
    }
}

@media not all and (pointer: coarse) {

    .choice.dropdown:not(.disabled, .dropdown_open):hover {

        background: linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.64), white), hsl(193, 100%, 83%);
        
        box-shadow: inset 0px 0px 9px 5px white, 0px 0px 12px 0px $color_theme;
    }
}

// Dropdown - Open:

.choice.dropdown.dropdown_open {

    position: fixed; top: 0; bottom: 0; left: 0; right: 0;
    z-index: $zIndex_choice_d_open;
    width: auto;
    margin: 0;
    border-radius: 0px;
    // background: $bg_choice_d_open; // <- Parte do estilo de choice anterior!
    background:  // <- Parte do estilo de choice novo! 
    // linear-gradient(127deg, hsl(180, 100%, 72%), hsla(180, 100%, 50%, 0) 71%),
    // linear-gradient(217deg, hsl(195, 100%, 50%), hsla(195, 100%, 50%, 0) 71%),
    // linear-gradient(336deg, hsl(204, 100%, 54%), hsla(0, 0%, 100%, 0) 71%),
    // white;

    linear-gradient(217deg, hsla(195, 100%, 50%, 0.8), hsla(195, 100%, 50%, 0) 71%),
    linear-gradient(127deg, hsla(0, 0%, 88%, 0.8), hsla(0, 0%, 88%, 0) 71%),
    linear-gradient(336deg, hsla(180, 100%, 50%, 0.8), hsla(180, 100%, 50%, 0) 71%),
    white;

    overflow-y: auto;

    > li {
        display: flex;
        flex-direction: column;
        justify-content: center; // <- Neste caso, alinha verticalmente!

        position: relative; top: $button_height_small;
        width: 100%;

        span {

            // filter: drop-shadow(0px 0px 1px hsl(193, 100%, 0%)); // <- Parte do estilo de choice novo! 
            filter: drop-shadow(0px 0px 2px hsl(193, 100%, 34%)); // <- Parte do estilo de choice novo! 
        }

        > a {
            flex-grow: 1;
            justify-content: center;

            img {
                border-radius: 0px;
            }
        }

        a > span::after {

            content: "";
            margin-left: 0;
        }
    }

    > li:nth-of-type(1) {
        display: none;
    }

    > li:nth-of-type(2) {
        border-top: 1px solid $color_text_menu;
    }

    > li:nth-last-of-type(1) { // Esta regra só deve existir caso o último 'li' tiver sido criado via JS.
        border: 0;
    }

    li span {
        padding: 0 11px 0 11px;
    }

    > li:nth-of-type(2) > a > img[src] {
        border-radius: 0;
    }

    > li + li {
        border-bottom: 1px solid $color_text_menu;
    }

    /* @media (min-width: $screen_small_widthLimit) and (min-height: $screen_small_widthLimit) {  > li { position: relative; top: calc(3 * #{$button_height_small}); } } */
}

// Dropdown - Open - Scrollbars:

.choice.dropdown.choice.dropdown_open::-webkit-scrollbar { // Entire bar

    width: 12px;
    height: 13px;
}

.choice.dropdown.choice.dropdown_open::-webkit-scrollbar-thumb { // Bar pointer

    background: linear-gradient(to bottom, hsl(180, 100%, 85%), hsl(195, 100%, 55%));    
    box-shadow: inset 0px 0px 0px 1px hsl(195, 100%, 100%);
}

.choice.dropdown.choice.dropdown_open::-webkit-scrollbar-thumb:hover { // Bar pointer hover

    background: linear-gradient(to bottom, hsl(180, 100%, 91%), hsl(195, 100%, 71%));    
}

.choice.dropdown.choice.dropdown_open::-webkit-scrollbar-track {   // Bar background

    border: 0;
    background: transparent; 
}

.choice.dropdown.choice.dropdown_open { // Regra para o Firefox
        
    scrollbar-width: auto;
    scrollbar-color: hsl(195, 100%, 94%) transparent;
}

/* @media (pointer: fine) {

    .choice.dropdown.choice.dropdown_open {
        overflow: hidden;
    }
    
    .choice.dropdown.choice.dropdown_open:hover {
        overflow: auto;
    }
}*/

/*  
────────────────────────────
TODO:        >> Option ON
──────────────────────────── */


.choice.horizontal > li > a.on, .choice.vertical > li > a.on, .choice.dropdown.choice.dropdown_open > li > .on { 

    // background: $bg_choice_selector; // <- Parte do estilo de choice anterior!
    background: hsla(0, 0%, 100%, 0.5);
    // text-shadow: 1px 1px 1px $color_shadow_text_strong; // <- Parte do estilo de choice anterior!

    span {

        filter: drop-shadow(0px 0px 2px hsl(193, 100%, 36%)); // <- Parte do estilo de choice novo! 
    }
}

.choice.vertical > li > a.on { 

    // background: linear-gradient(to bottom, hsla(0, 0%, 100%, 0.6), hsla(0, 0%, 100%, 0.9), hsla(0, 0%, 100%, 1), hsla(0, 0%, 100%, 0.9), hsla(0, 0%, 100%, 0.6)); // <- Parte do estilo de choice novo! 
    // background: hsl(195, 100%, 93%);// <- Parte do estilo de choice novo!
    // background: hsla(0, 0%, 100%, 0.8);// <- Parte do estilo de choice novo! 
    background: hsla(195, 100%, 98%, 0.9);// <- Parte do estilo de choice novo!
}

/*  
────────────────────────────
TODO:        >> No Label
──────────────────────────── */

.no_label {

    > li:nth-of-type(1) {
        display: none;
    }
}

.choice.horizontal.no_label {

    > li:nth-of-type(2) a { 
        border-top-left-radius: 1000px;
        border-bottom-left-radius: 1000px;
    }

    > li:nth-of-type(2) span {

        padding-left: 15px;
    }

    > li:nth-of-type(2) > a > img {
            border-top-left-radius: 1000px;
            border-bottom-left-radius: 1000px;
    }
}

.choice.vertical.no_label > li:nth-of-type(2) { 

        border-top-width: 0; 

        a {
            border-top-left-radius: 20px;
            border-top-right-radius: 20px;
        }

    > a > img {
        border-top-left-radius: 20px;
        border-top-right-radius: 20px;
    }
}

.choice.dropdown.no_label {

    > li:nth-of-type(2) {

        display: inline-flex;
    
        span::after { 
            content: "▼";
            margin-left: 5rem;
        }

        > a > img {
            border-radius: 1000px;
        }
    }
}

.choice.dropdown.no_label.choice.dropdown_open > li:nth-of-type(2) > a > img  {

    border-bottom-left-radius: 0px;
    border-bottom-right-radius: 0px;
}

.choice.dropdown.no_label.choice.dropdown_open > li:nth-of-type(2) span::after {

    content: "";
    margin-left: 0;
}

/*  
────────────────────────────
TODO:        >> Disabled
──────────────────────────── */

.choice.horizontal.disabled, .choice.vertical.disabled, .choice.dropdown.disabled {
    opacity: 0.5;
}

.choice.horizontal.disabled *, .choice.vertical.disabled *, .choice.dropdown.disabled * {
    cursor: default !important; 
}

.choice.horizontal > li > a.disabled, .choice.vertical > li > a.disabled, .choice.dropdown > li > a.disabled {

    cursor: default; 
}

.choice.horizontal > li > a.disabled > *:not(.choice_shine_top) {

    opacity: 0.5;
}

.choice.vertical > li > a.disabled, .choice.dropdown > li > a.disabled {
    
    opacity: 0.5;
}

.choice.horizontal.disabled > li > a, .choice.vertical.disabled > li > a {
    background: 0 !important;
    text-shadow: 1px 1px 1px $color_shadow_text !important;
}

.choice.horizontal > li > a.disabled, .choice.vertical > li > a.disabled {
    background: 0 !important;
    text-shadow: 1px 1px 1px $color_shadow_text !important;
}

/*  
──────────────────────────── // <- Parte do estilo de choice novo!
TODO:        >> Shine
──────────────────────────── */

.choice.horizontal {

    li {
        position: relative;
    }
    
    .choice_shine_top { 
          
        content: '';
        position: absolute;
        top: 0px;  
        z-index: 1; 
        width: 100%;
        height: 52%;
        background: linear-gradient(to bottom, white, hsla(0, 0%, 100%, 0.4));
    }

    li:nth-of-type(1) .choice_shine_top { 
        
        $left: 9px;
    
        left:  $left;
        width: calc(100% - #{$left});

        border-top-left-radius: 1000px;
        border-bottom-left-radius: 1000px; 
    }

    li:nth-last-of-type(1) .choice_shine_top { 
        
        $right: 9px;
    
        right:  $right;
        width: calc(100% - #{$right});

        border-top-right-radius: 1000px;
        border-bottom-right-radius: 1000px; 
    }
}

.choice.horizontal.no_label li:nth-of-type(2) .choice_shine_top {
        
    $left: 9px;

    left:  $left;
    width: calc(100% - #{$left});

    border-top-left-radius: 1000px;
    border-bottom-left-radius: 1000px; 
}

.choice.vertical {

    li {
        position: relative;
    }

    .choice_shine_top { 
          
        content: '';
        position: absolute;
        z-index: 1; 

        $offset: 1px;
        top: $offset;  
        height: calc(52% - #{$offset}) ;
        
        background: linear-gradient(to bottom, white, hsla(0, 0%, 100%, 0.7), hsla(0, 0%, 100%, 0.2)); 
        border-top-left-radius: 1000px;
        border-top-right-radius: 1000px;
        border-bottom-left-radius: 650px; 
        border-bottom-right-radius: 650px; 
        
        $left: 7px;  
    
        left:  $left;
        width: calc(100% - 2 * #{$left});
    }
}

.choice.dropdown {

    position: relative;
    cursor: pointer;

    .choice_shine_top { 
          
        content: '';
        position: absolute;
        top: 0px;  
        z-index: 1; 
        height: 52%;
        background: linear-gradient(to bottom, white, hsla(0, 0%, 100%, 0.4));
        border-radius: 1000px;
        
        $left: 9px;  
    
        left:  $left;
        width: calc(100% - 2 * #{$left});
    }
}

.choice.dropdown.dropdown_open {

    cursor: default;
}

/*
──────────────────────────────────────────────────────
TODO: Components
────────────────────────────────────────────────────── */

/*  
────────────────────────────
TODO:    > Outdoors
──────────────────────────── */

img.outdoor, video.outdoor {
    display: block;
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;
}

@media (min-width: $screen_small_widthLimit) {

    img.outdoor, video.outdoor {
        max-width: calc(100% - (2 * #{$margin_horizontal}) );
        border-radius: $border_radius_big; 
    }
}

// figure:

figure.outdoor {
    margin-left: auto;
    margin-right: auto;
    text-align: center;
}

figure.outdoor img {
        max-width: 100%;
}

@media (min-width: $screen_small_widthLimit) {

    figure.outdoor {
        max-width: calc(100% - (2 * #{$margin_horizontal}) );
}
    figure.outdoor img {
        border-radius: 40px;
        // box-shadow: 6px 6px 24px -15px black;
    }
    
}

// img, video, figure:

@media (max-height: $screen_small_widthLimit) {

    img.outdoor, video.outdoor, figure.outdoor img { 
        max-height: 100vh;
        //max-height: calc(100vh - #{$button_height}) ;
    }
}

/*  
────────────────────────────
TODO:    > Galleries
──────────────────────────── */

.gallery img {
    width: 50%;
}

.gallery a {
    font-size: 0;
}

@media (min-width: $screen_small_widthLimit) { 

    .gallery {
        margin-left: $margin_horizontal;
        margin-right: $margin_horizontal;
    }

    .gallery img { 
        width: 25%; 
    } 
}

/*  
────────────────────────────
TODO:    > Sliders
──────────────────────────── */

.slider {

    white-space: nowrap;

    border-top: 2px solid $color_theme;
    border-bottom: 2px solid $color_theme;
    overflow-x: auto;
    overflow-y: hidden;

    img +  img {

        border-left: 2px solid $color_theme; 
    }

    @media (min-width: $screen_small_widthLimit) {

        border: 2px solid $color_theme;
    }
}
 
.slider img, .slider picture {

    max-width: 94%;   
}

@media (max-height: $screen_small_widthLimit) {

    .slider img, .slider picture {

        max-height: 100vh;
    }
}

@media (min-width: $screen_small_widthLimit) {  

    .slider { 

        margin-left: $margin_horizontal;
        margin-right: $margin_horizontal;
    }
}

@media (pointer: fine) {

    .slider {

        overflow-x: hidden;
    }
    
    .slider:hover {

        overflow-x: auto;
    }
}

// Slider scrollbar:

/* // Scrollbar anterior do slider

.slider::-webkit-scrollbar { // Entire bar

    height: 12px;
}

.slider::-webkit-scrollbar-thumb { // Bar pointer

    background: hsl(0, 0%, 74%);
    box-shadow: none;
}
   
.slider::-webkit-scrollbar-track { // Bar background

    background: hsl(0, 0%, 98%); 
    border: 1px solid hsl(0, 0%, 86%);
    border-radius: 1000px; 
}
*/

.slider::-webkit-scrollbar { // Entire bar

    width: 14px;
    height: 14px;
}

.slider::-webkit-scrollbar-thumb { // Bar pointer  
    
    $delta_deg: 51deg;

    background:
    linear-gradient(calc(217deg + #{$delta_deg}), hsla(195, 100%, 50%, 0.8), hsla(195, 100%, 50%, 0) 71%),
    linear-gradient(calc(127deg + #{$delta_deg}), hsla(0, 0%, 100%, 0.8), hsla(0, 0%, 100%, 0) 71%),
    linear-gradient(calc(336deg + #{$delta_deg}), hsla(190, 100%, 83%, 0.8), hsla(190, 100%, 80%, 0) 71%),
    white;

    box-shadow: inset 0px 0px 0px 1px hsla(195, 100%, 50%, 0.18);
}

.slider::-webkit-scrollbar-thumb:hover { // Bar pointer hover

    $delta_deg: 51deg;

    background:
    linear-gradient(calc(217deg + #{$delta_deg}), hsla(195, 100%, 78%, 0.8), hsla(195, 100%, 50%, 0) 71%),
    linear-gradient(calc(127deg + #{$delta_deg}), hsla(0, 0%, 100%, 0.85), hsla(0, 0%, 100%, 0) 71%),
    linear-gradient(calc(336deg + #{$delta_deg}), hsla(190, 100%, 92%, 0.8), hsla(190, 100%, 80%, 0) 71%),
    white;

    box-shadow: inset 0px 0px 0px 1px hsla(195, 100%, 50%, 0.25);
} 

.slider::-webkit-scrollbar-track {   // Bar background

    border: 0;
    border-top: 2px solid $color_theme;
    // background: radial-gradient(white, hsl(195, 100%, 94%));
    background: white; 
}

@media (min-width: $screen_small_widthLimit) {  

    .slider.border_radius_big::-webkit-scrollbar-thumb { // Bar pointer  

        border-left-width: 1px;
        border-right-width: 1px;
    }

    .slider.border_radius_big::-webkit-scrollbar-track { // Bar background
        
        border: 1px solid $color_theme;
        border-radius: 1000px;
    }
}

.slider { // Regra para o Firefox
        
    scrollbar-width: auto;
    scrollbar-color: $color_theme hsl(195, 100%, 100%);
}

/*
──────────────────────────────────────────────────────
TODO:    > Cards & Posters
────────────────────────────────────────────────────── */

/*  
────────────────────────────
TODO:        >> Cards
──────────────────────────── */

.card {
    display: inline-flex;
    flex-direction: column;
    align-items: center;
    margin-top: $margin_vertical;
    margin-bottom: $margin_vertical;
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal;
    color: $color_text;
}

.card_text { 

    h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14, h15, h16, h17, h18, h19, h20 { // <- Desfaz o bg como cor do texto.
            
        background: 0;
        -webkit-background-clip: border-box;
        -webkit-text-fill-color: currentcolor;
        background-clip: border-box;
        text-fill-color: currentcolor; 
    }
    
    > :nth-last-child(1) { 

        margin-bottom: 0;
    }
}

.card_img {
    max-width: 100%; 
    max-height: 100%;
    border-radius: $border_radius_default;
}

.card.h1, .card.h2 {

    flex-direction: row;

    .card_img {
        max-width: 40%; 
    }

    .card_text {

        h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14, h15, h16, h17, h18, h19, h20 {

            //font-size: $font_size;
            text-align: left;
        }
    }
}

.card.h1 { // Card + Float

    display: inline-block; // <- Hack necessário para o card não bugar no Safari do desktop.
    display: flow-root;
    margin-top: 0; 
    margin-bottom: 0;

    .card_img {
        float: left;
        margin-top: $margin_vertical;
        margin-right: $margin_horizontal; 
    }

    .card_text { 
        
        > * {
            margin-left: 0; 
            margin-right: 0;
        }

        > :nth-child(1) { 
            margin-top: calc(2 * #{$margin_vertical});
        }  
    }

    .card_text::after {

        content: "";
        display: block;
        height: $margin_vertical;
        clear: both;
    }
}

.card.h2 .card_text {

    > * {
        margin-right: 0;
    }
    
    > :nth-child(1) {
        margin-top: 0;
    }
}
 
/*  
────────────────────────────
TODO:        >> Posters
──────────────────────────── */

.poster {
    display: inline-flex;
    flex-direction: column;
    justify-content: space-between;
    position: relative;
    color: $color_text_menu;
    margin-top: $margin_vertical;
    margin-bottom: $margin_vertical;
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal;
    text-shadow: 1px 1px 1px $color_shadow_text;

    h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14, h15, h16, h17, h18, h19, h20 { // <- Desfaz o bg como cor do texto.
            
        background: 0;
        -webkit-background-clip: border-box;
        -webkit-text-fill-color: currentcolor;
        background-clip: border-box;
        text-fill-color: currentcolor; 
    }

    .text_img, .text_img_size {
        filter: drop-shadow(1px 1px 1px $color_shadow_text); 
    }
}

.poster_img {
    position: absolute; top: 0; left: 0;
    z-index: -1;
    width: 100%; 
    height: 100%; 
    border-radius: $border_radius_default;
}

.poster_header {

    > * {
        text-align: center; 
    }
}

.poster_body { 

    > p {
        text-indent: 0;
    }
}
/*  
────────────────────────────
TODO:        >> Groups
──────────────────────────── */

.group {
    display: flex;
    flex-direction: column;
}

/*
.group.h_2 {

    @media (min-width: $screen_small_widthLimit) {

        flex-direction: row;
        flex-wrap: wrap;

        > * {
            width: calc((100% - (4 * #{$margin_horizontal}))/2); 
        }
    }
}
*/

@for $i from 2 through 12 {

    .group.c_#{$i} {

        @media (min-width: $screen_small_widthLimit) {

            flex-direction: row;
            flex-wrap: wrap;

            > * {
                width: calc((100% - ((2 * #{$i}) * #{$margin_horizontal}))/#{$i}); 
            }
        }
    }
}


/*
──────────────────────────────────────────────────────
TODO:    > Lightbox
────────────────────────────────────────────────────── */

.lightbox {
    display: none;
    justify-content: center;
    align-items: center;
    position: fixed;
    z-index: $zIndex_lightbox;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; 

    opacity: 0;
}

.lightbox_closeArea {
    display: block;
    position: relative;
}

/* Lightbox Overlay */

.lightbox_closeArea::before {
    position: fixed;
    top: 0;
    left: 0;
    z-index: -1;
    width: 100%;
    height: 100%;
    background: $bg_lightbox_overlay; 
    content: "";
    cursor: default;
}

  /* Lightbox Layout */

.lightbox_layout {

    position: relative;
    padding: 24px;
    overflow-x: hidden;
    overflow-y: auto;

    max-width: calc(100vw - (2 * #{$button_height_small}));
    max-height: calc(100vh - (3 * #{$button_height}));
    color: $color_text_menu;
    /* border-radius: $border_radius_default;  // Lightbox anterior 
    background: $bg_lightbox;  // Lightbox anterior 

    box-shadow: 6px 6px 24px -14px $color_shadow_lightbox,  // Lightbox anterior 
    inset 0px -4px 5px 3px $color_shadow_box_inset_dark,
    inset 5px 5px 5px 0px $color_shadow_box_inset_clear; */

     // Lightbox novo:

    $lightbox_border_width: 5px;
    border: $lightbox_border_width solid rgba(0, 0, 0, 0);
    $bg_lightbox_border_1: hsl(198, 100%, 74%);
    $bg_lightbox_border_2: white;
    background: 
    linear-gradient(to bottom right, hsla(0, 0%, 100%, 0.85), hsla(198, 100%, 74%, 0.85), hsla(0, 0%, 100%, 0.85)) padding-box, 

    linear-gradient(to right, $bg_lightbox_border_1, $bg_lightbox_border_2) border-box top/100% $lightbox_border_width no-repeat,
    linear-gradient(to bottom, $bg_lightbox_border_2, $bg_lightbox_border_1) border-box right/$lightbox_border_width 100% no-repeat,
    linear-gradient(to left, $bg_lightbox_border_1, $bg_lightbox_border_2) border-box bottom/100% $lightbox_border_width no-repeat,
    linear-gradient(to top, $bg_lightbox_border_2, $bg_lightbox_border_1) border-box left/$lightbox_border_width 100% no-repeat;
    
    box-shadow: 6px 6px 24px -14px $color_shadow_lightbox;
}

.lightbox_img {
    display: block;
    max-width: 100%;
    max-height: 100%;
    margin-left: auto;
    margin-right: auto; 
}

.lightbox_img_marginBottom {
    margin-bottom: $margin_vertical;
}

.lightbox_img_rounded {
    border-radius: $border_radius_default;
}

.lightbox_text {

    font-size: $font_size; 
    font-weight: bold;  // Lightbox novo
    // text-shadow: 1px 1px 1px $color_shadow_text;  // Lightbox anterior 
    filter: drop-shadow(0px 0px 2px hsl(193, 100%, 30%));  // Lightbox novo
    line-height: 1.5; 

    .text_img, .text_img_size {
        filter: drop-shadow(1px 1px 1px $color_shadow_text); 
    }
}
  
/* Close Button   // Lightbox anterior 

.lightbox_closeArea::after {

    content: "";
    position: absolute;
    top: -19px;
    right: -19px;
    z-index: 1;
    cursor: pointer;

    width: $button_height_small; 
    height: $button_height_small;
    border-radius: 50%;
    background: $bg_lightbox_button; 
    box-shadow: 6px 6px 8px -7px $color_shadow_lightbox_button,
    inset 4px 4px 5px 0px hsla(0, 0%, 100%, 0.5), 
    inset -3px -4px 5px 3px hsla(0, 0%, 0%, 0.4);
    //content: "×"; font-size: 31rem; color: white; display: flex; align-items: center; justify-content: center; 
}*/

// Lightbox Layout - Scrollbars:

.lightbox_layout::-webkit-scrollbar { // Entire bar

    width: 11px;
    height: 11px;
}

.lightbox_layout::-webkit-scrollbar-thumb { // Bar pointer
    
    // background: linear-gradient(to bottom, hsl(198, 100%, 100%), hsl(198, 100%, 74%));
    // box-shadow: inset 0px 0px 0px 1px hsl(198, 100%, 87%);   

    background: hsl(198, 100%, 89%);
    box-shadow: inset 0px 0px 0px 1px white;
}

.lightbox_layout::-webkit-scrollbar-thumb:hover { // Bar pointer

    // background: linear-gradient(to bottom, hsl(198, 100%, 74%), hsl(198, 100%, 100%));
    // background: linear-gradient(to bottom, hsl(198, 100%, 90%), hsl(198, 100%, 94%));
    background: hsl(198, 100%, 91%); 
}

.lightbox_layout::-webkit-scrollbar-track {   // Bar background

    border: 0;
    background: transparent; 
}

.lightbox_layout { // Regra para o Firefox

    scrollbar-width: auto;
    scrollbar-color: hsl(195, 100%, 100%) hsla(194, 100%, 50%, 0.1);  
}

/*  
──────────────────────────────────────────────────────
TODO: Others
────────────────────────────────────────────────────── */

::selection { 
    
    color: hsl(195, 100%, 49%); 
    background-color: hsl(195, 100%, 95%); 
} 

hr {

    border-top: 1px solid $color_theme;
    border-bottom: 0; 
    background: $color_theme;
    margin-top: $margin_vertical;
    margin-bottom: $margin_vertical;
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal;
}

// Não apage esta regra comentada:
/*@media (min-width: $hr_stop) {

    hr {
        margin-left: 0;
        margin-right: 0;
    }
}*/

a, button:not(button[disabled], .disabled), input[type="radio"]:not(fieldset[disabled] input[type="radio"]), input[type="checkbox"]:not(fieldset[disabled] input[type="checkbox"]), select {
    
    cursor: pointer;
}

.lb { /* Line break */
    margin-top: $margin_vertical; 
    margin-bottom:  $margin_vertical;
} 

@for $i from 1 through 100 { 
    .lb#{$i} { /* Line break */
        margin-top: calc(#{$i} * #{$margin_vertical}); 
        margin-bottom:  calc(#{$i} * #{$margin_vertical});
    } 
}

/*
.content-left {
    text-align: left;
}

.content-center {
    text-align: center;
}

.content-right {
    text-align: right;
}

.content-justify {
    text-align: justify;
}
*/

// ------ center ------

.center {
    
    display: block !important;
    margin-left: auto !important;
    margin-right: auto !important;
}

.center.offset {
    
    margin-left: auto !important;
    margin-right: auto !important;
    max-width: calc(100% - (2 * #{$margin_horizontal}));
}

figure.center {
    
    text-align: center;
} 

.center.choice.horizontal {
    
    display: flex !important;
}

.center.offset.choice.dropdown_open {
    
    max-width: none;
}

.switch.button_full.center, .switch.button_text.center, .switch.button_icon.center, .switch.image.center, .switch.key_full.center, .switch.key_text.center, 
button.button_full.center, button.button_text.center, button.button_icon.center, button.image.center, 
a.button_full.center, a.button_text.center, a.button_icon.center, a.image.center {
    
    display: flex !important;
}

.switch.key_full.inverted.center, .switch.key_text.inverted.center {

    width: max-content; -moz-width: fit-content; width: -moz-fit-content; width: fit-content; /* <- Declarações necessárias 
    para garantir que o Firefox funcione como se suportasse 'width: fit-content'. (Ao menos 1 delas deve funcionar.) */
}

// ----------------------

.line {
    border: 1px solid black;
}

.hidden {
    display: none;
}

.button_height_small {
    height: $button_height_small;
}

.border_radius_big {
    @media (min-width: $screen_small_widthLimit) {

        border-radius: $border_radius_big;
    }
}

.cursor_pointer {
    cursor: pointer;
}

// ------ Screen ------

.screen_small, .ss {
    
    @media (min-width: $screen_small_widthLimit) and (min-height: $screen_small_widthLimit)  {

        display: none !important;
    }
}

.screen_small_portrait, .ssp {
    
    @media  (orientation: landscape), (orientation: portrait) and (min-width: $screen_small_widthLimit) {

        display: none !important;
    }
}

.screen_small_landscape, .ssl  {
    
    @media (orientation: portrait), (orientation: landscape) and (min-height: $screen_small_widthLimit)  {

        display: none !important;
    }
}

/*
.screen_medium {

    @media (min-width: $screen_medium_widthLimit) and (min-height: $screen_medium_widthLimit)  {

        display: none !important;
    }
}
*/

.screen_not_small, .sns {
    
    @media (max-width: $screen_small_widthLimit), (max-height: $screen_small_widthLimit)  {

        display: none !important;
    }
}

.screen_not_small_portrait, .snsp {
    
    @media (orientation: portrait) and (max-width: $screen_small_widthLimit) {

        display: none !important;
    }
}

.screen_not_small_landscape, .snsl  {
    
    @media (orientation: landscape) and (max-height: $screen_small_widthLimit)  {

        display: none !important;
    }
}

// ----------------------

.button_hide_container {
    
    display: none;
    position: relative;
    margin-top: calc((#{$button_height_smaller})/2); 
    margin-bottom: $margin_vertical;
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal;

    .button_hide {

        display: inline-block;
        content: "";
        position: absolute; 
        top: calc((-1 * #{$button_height_smaller})/2);
        right: 4px;
        cursor: pointer;

        width: $button_height_smaller;  
        height: $button_height_smaller;
        border-radius: 50%;
        background: $bg_button_hide; 
        //box-shadow: 6px 6px 8px -7px $color_shadow_lightbox_button, inset 3px 3px 5px 0px hsla(0, 0%, 100%, 0.5), inset -2px -3px 5px 3px hsla(0, 0%, 0%, 0.4);
        //content: "×"; font-size: 31rem; color: white; display: flex; align-items: center; justify-content: center; 
    }
 
    > :nth-child(2) { 
        
        margin-left: $margin_horizontal;
        margin-right: $margin_horizontal;
        padding-right: calc((#{$button_height_smaller})/2);
    }
}

/*  
──────────────────────────────────────────────────────
TODO: Classes JS
────────────────────────────────────────────────────── */

// Classes Genéricas Pra Serem Aplicadas Somente Via JS:

.display_none {
    
    display: none;
}

.overflow_hidden {
    
    overflow: hidden;
}











