/* 
◈──────────────────────────────────────────────────────◈
TODO: Variables
◈──────────────────────────────────────────────────────◈ */

$enableAlternativeScrollbarStyle: false; // Estilo mais limitado, porém também funciona no Firefox. 

$fonts_fallback: Times, 'Times New Roman', Georgia, serif;
$font_default: 'Digital Disk', Verdial, $fonts_fallback;
$font_default_2: Verdial, $fonts_fallback;
$font_size: 19rem; 
$font_monospace: Courier, 'Courier New', monospace;
$font_monospace_size: 17px;
$font_small: 16rem;
$font_smaller: 13rem;
$central_maxWidth: 800px; /* Padrão: 600-700px. */
$margin_vertical: 16rem; // VÍNCULO: Váriável JS
$margin_horizontal: 20px; /* Apple: 16px em 320w, e 22px em 736w. */ // VÍNCULO: Váriável JS
$button_height: 48px;
$button_height_small: 40px;
$button_height_smaller: 32px;
$border_radius_default: 20px;
$border_radius_big: 40px; 
 
//····································································◈ Breakpoints

$screen_small_widthLimit: 501px; // Largura máxima de um celular. // VÍNCULO: Váriável JS
// $screen_medium_widthLimit: 1000px; // Largura mínima de um PC.

// $tablet_height_limit: 1366px; // Altura máxima de um tablet.

$nav_expand: 565px; // VÍNCULO: Váriável JS // Altura mínima de um celular.
$hr_stop: calc(#{$central_maxWidth} + 60px);

//····································································◈ z-index's

$zIndex_nav_openBtn_base: -1;
$zIndex_nav: 1000;
$zIndex_header: 1100;
$zIndex_choice_d_open: 1200;
$zIndex_lightbox: 1300;
$zIndex_gallery_fullScreen: 1400;
$zIndex_slider_fullScreen: 1400;
$zIndex_error: 5000;

//····································································◈ Colors And BG's Geral

// $color_theme: hsl(193, 100%, 50%);
//$color_theme: hsl(201, 100%, 48%);
//$color_theme: DodgerBlue;
$color_theme: DeepSkyBlue; // VÍNCULO: Váriável JS
$color_theme_2: hsl(195, 100%, 66%);
$color_theme_clear: hsla(193, 100%, 98%, 1); 

$color_text: black;
$color_text_clear: hsl(0, 0%, 68%); 
$color_text_window: white; 

$color_shadow_text: hsla(0, 0%, 0%, 0.15);
$color_shadow_text_strong: hsla(0, 0%, 0%, 0.3);
$color_shadow_box_inset_clear: hsla(0, 0%, 100%, 0.4);
$color_shadow_box_inset_dark: hsla(0, 0%, 0%, 0.15); 

$bg_html: hsl(0, 0%, 100%);
//$bg_html: hsl(0, 0%, 36%);
//$bg_html: url(../../images/bgs/lightbox.png)  center /100% 100%, white;
$bgColor_body: hsl(0, 0%, 100%);


/*  TODO:    1 ▶ Specific Elements & Components
◈──────────────────────────────────────────────────────◈ */

//····································································◈ Nav

$minWidth_menuList: 240px; // VÍNCULO: Váriável JS

$size_nav_openBtn: 56px; // VÍNCULO: Váriável JS
$offset_nav_openBtn_show: // VÍNCULO: Váriável JS 
$size_nav_openBtn;
// calc(#{$size_nav_openBtn} * 3/4);
// calc(#{$size_nav_openBtn} / 2);

//····································································◈ Footer

$color_shadow_footer: hsla(0, 0%, 0%, 0.28);
$color_shadow_footer_icons: hsla(0, 0%, 0%, 0.12);   

$bg_footer_icons: url(../../images/bgs/footer_icons.png)  center /100% 100%;

// $bg_footer_icons: linear-gradient(to bottom right, hsl(204,100%,73%) 0%,hsl(203,100%,67%) 10%, hsl(193,100%,76%) 55%, hsl(170, 100%, 88%) 90%,hsl(170, 100%, 88%) 100%);

//····································································◈ Texts

// Cor de texto dos títulos para o header azul escuro:
// $color_text_hx: url(../../images/colors/text_hx.png)  center /100% 100%; 199
// $color_text_hx: linear-gradient(to bottom, hsl(195, 100%, 50%), hsl(201, 100%, 50%), hsl(193, 100%, 82%), hsl(230, 100%, 40%)); // hsl(246, 100%, 50%)
// $color_text_hx: linear-gradient(to bottom, hsl(195, 100%, 64%), hsl(201, 100%, 64%), hsl(193, 100%, 88%), hsl(200, 100%, 50%));
// $color_text_hx: linear-gradient(to bottom, hsl(195, 100%, 90%), hsl(201, 100%, 50%), hsl(193, 100%, 90%), hsl(210, 100%, 50%));
$color_text_hx: linear-gradient(to bottom, hsl(199, 100%, 90%), hsl(199, 100%, 50%), hsl(187, 100%, 87%), hsl(201, 100%, 50%)); 

// Cor de texto dos títulos para o header azul claro:
// $color_text_hx: linear-gradient(to bottom, hsl(199, 100%, 90%), hsl(192, 100%, 45%), hsl(187, 100%, 87%), hsl(199, 100%, 50%)); 
$color_text_hx: linear-gradient(to bottom, hsl(199, 100%, 90%), hsl(193, 100%, 46%), hsl(187, 100%, 87%), hsl(199, 100%, 50%)); 

$ulANDol_margin_horizontal: calc(1 * #{$margin_horizontal} + 21px);

$color_border_kbd: hsl(0, 0%, 95%);

$color_text_rainbow: url(../../images/colors/text_rainbow.png)  center /100% 100%;

$color_text_click: url(../../images/colors/text_click.png)  center /100% 100%;

$bg_kbd: hsl(0, 0%, 86%);
 
$textIconCSSs_size: 19px;

$widthOfSpace: 4px;

// Tokens:

$color_border_token_blue: hsl(195, 100%, 58%);
$bg_token_blue: hsl(195, 100%, 98%);
$color_text_token_blue: hsl(195, 100%, 46%);

$color_border_token_red: hsl(0, 100%, 74%);
$bg_token_red: hsl(0, 100%, 97%);
$color_text_token_red: hsl(0, 100%, 46%); 

$color_border_token_yellow: hsl(55, 100%, 43%);
$bg_token_yellow: hsl(60, 90%, 95%);
$color_text_token_yellow: hsl(54, 100%, 42%);

$color_border_token_green: hsl(120, 100%, 42%);
$bg_token_green: hsl(120, 100%, 97%);
$color_text_token_green: hsl(120, 100%, 42%);

$color_border_token_pink: hsl(300, 100%, 50%);
$bg_token_pink: hsl(300, 85%, 98%);
$color_text_token_pink: hsl(300, 100%, 49%);

$color_border_token_purple: hsl(300, 100%, 37%);
$bg_token_purple: hsl(280, 100%, 98%);
$color_text_token_purple: hsl(300, 100%, 37%);

$color_border_token_orange: hsl(39, 100%, 50%);
$bg_token_orange: hsl(39, 100%, 96%);
$color_text_token_orange: hsl(39, 100%, 48%);

$color_border_token_brown: hsl(25, 76%, 44%);
$bg_token_brown: hsl(25, 76%, 96%);
$color_text_token_brown: hsl(25, 76%, 44%);

$color_border_token_cyan: hsl(180, 100%, 38%);
$bg_token_cyan: hsl(180, 100%, 97%);
$color_text_token_cyan: hsl(180, 100%, 38%);

$color_border_token_purple2: hsl(249, 80%, 77%);
$bg_token_purple2: hsl(249, 100%, 98%);
$color_text_token_purple2: hsl(249, 80%, 72%);

$color_border_token_white: hsl(0, 0%, 66%); 
$bg_token_white: hsl(0, 0%, 100%);
$color_text_token_white: hsl(0, 0%, 64%); 

$color_border_token_black: hsl(0, 0%, 4%);
$bg_token_black: hsl(0, 0%, 97%); 
$color_text_token_black: hsl(0, 0%, 44%);

//····································································◈ Signs

$color_text_success: hsl(120, 100%, 35%);
$color_text_warning: hsl(45, 74%, 45%);
$color_text_fail: hsl(0, 100%, 50%);
$color_text_danger: white;

$color_border_success: hsl(120, 100%, 44%);
$color_border_warning: hsl(43, 74%, 72%);
$color_border_fail: hsl(0, 100%, 70%);
$color_border_danger_clear: hsl(0, 100%, 76%);
$color_border_danger_dark: hsl(0, 100%, 31%);

$bg_success: hsl(120, 100%, 91%);
$bg_warning: hsl(54, 100%, 93%);
$bg_fail: hsl(0, 100%, 94%);
$bg_danger: red;

//····································································◈ Tables

$table_border1_width: 1px;
$table_border2_width: 1px;

$color_border_table: hsl(0, 0%, 85%);

$bg_table_tr_hover: $color_theme_clear; 
$bg_table_tr_hover_2: linear-gradient(to right, hsla(193, 100%, 96%, 0), $color_theme_clear 5% 95%, hsla(193, 100%, 96%, 0)); // Não use a palavra-chave 'transparent' nesta instrução, pois caso contrário vai bugar no Safari

//····································································◈ Forms

$color_text_form: $color_text; 
$color_text_form_placeholder: $color_text_clear;
$color_text_form_select: $color_text_clear;

$color_border_form: hsl(0, 0%, 80%); 

// $bg_button: url(../../images/bgs/button.png)  center /100% 100%;
// $bg_select: url(../../images/bgs/select.png)  center /100% 100%; // <- Precisa ser do tipo PNG! 
$bg_select: linear-gradient(to bottom, hsl(0, 0%, 91%), white);  

// $bg_button: linear-gradient(to bottom right,hsl(197,100%,88%) 0%,hsl(200,100%,81%) 20%,hsl(203,100%,77%) 50%,hsl(204,100%,70%) 74%,hsl(204,100%,73%) 100%);

//····································································◈ Switches

// --- Type Button ---

$color_text_switch_type_button_off: hsl(0, 0%, 50%);
$color_text_switch_type_button_on: white;

$color_icon_outline_switch_type_button_off: hsla(0, 0%, 0%, 0.45);

$color_shadow_box_inset_switch_type_button_dark: hsla(0, 0%, 0%, 0.33); // VÍNCULO: Váriável JS
$color_shadow_box_inset_element_type_button_clear: white; // VÍNCULO: Váriável JS

$bg_switch_type_button_off: 
// url(../../images/bgs/switch_button_shine_under.webp) center center / 200% 100% no-repeat, // <- Isso buga no Safari desktop.
linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.64), white),
hsl(193, 0%,94%); // hsl(193, 0%,88%); 
//$bg_switch_type_button_off: hsl(193, 0%,96%); 



$bg_element_type_button_blue: linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.7), white), linear-gradient(to bottom, hsl(195, 100%, 64%), hsl(195, 100%, 48%), hsl(195, 100%, 50%));
$box_shadow_element_type_button_blue: 0px 0px 0px 1px $color_theme_2, inset 0px 0px 9px 7px white;
$filter_element_type_button_piece_text_blue: drop-shadow(0px 0px 2px hsl(193, 100%, 40%));

$filter_element_type_button_piece_text_red: drop-shadow(0px 0px 2px hsl(0, 100%, 44%));

$filter_element_type_button_piece_text_yellow: drop-shadow(0px 0px 2px hsl(54, 100%, 33%)); // hsl(60, 100%, 29%)

$filter_element_type_button_piece_text_green: drop-shadow(0px 0px 2px hsl(120, 100%, 34%));
 
$filter_element_type_button_piece_text_black: drop-shadow(0px 0px 2px hsl(0, 0%, 30%));



$bg_element_type_button_clear_blue:  // VÍNCULO: Váriável JS
// url(../../images/bgs/switch_button_shine_under.webp) center center / 200% 100% no-repeat, // <- Isso buga no Safari desktop.
linear-gradient(to bottom, hsla(0, 0%, 100%, 0.15) 46%, hsla(0, 0%, 100%, 0.64), white), hsl(193, 100%, 80%);
$box_shadow_element_type_button_clear_blue: inset 0px 0px 9px 5px $color_shadow_box_inset_element_type_button_clear, 0px 0px 12px 0px hsl(195, 100%, 50%); // box-shadow: inset 0px 0px 9px 4px white, 0px 0px 12px 0px $color_theme !important;
$filter_element_type_button_piece_icon_clear_blue: drop-shadow(0px 0px 1px hsl(195, 100%, 60%));
$filter_switch_type_button_piece_text_clear_disabled_blue: drop-shadow(0px 0px 2px hsl(193, 100%, 34%)); 

$bg_element_type_button_clear_red: linear-gradient(to bottom, hsla(0, 0%, 100%, 0.15) 46%, hsla(0, 0%, 100%, 0.64), white),hsl(0, 100%, 87%);
$box_shadow_element_type_button_clear_red: inset 0px 0px 9px 5px $color_shadow_box_inset_element_type_button_clear, 0px 0px 12px 0px hsl(0, 100%, 62%);
$filter_element_type_button_piece_icon_clear_red: drop-shadow(0px 0px 1px hsl(0, 100%, 78%));
$filter_switch_type_button_piece_text_clear_disabled_red: drop-shadow(0px 0px 2px hsl(0, 100%, 38%)); 

$bg_element_type_button_clear_yellow:linear-gradient(to bottom, hsla(0, 0%, 100%, 0.15) 46%, hsla(0, 0%, 100%, 0.64), white),hsl(60, 100%, 52%);
$bg_element_type_button_icon_clear_yellow: linear-gradient(to bottom, hsla(0, 0%, 100%, 0.15) 46%, hsla(0, 0%, 100%, 0.64), white),hsl(60, 100%, 48%);
$box_shadow_element_type_button_clear_yellow: inset 0px 0px 9px 5px $color_shadow_box_inset_element_type_button_clear, 0px 0px 0px 1px hsl(60, 100%, 48%), 0px 0px 4px 1px hsl(60, 100%, 48%), 0px 0px 11px 1px hsl(60, 100%, 50%);
$filter_element_type_button_piece_icon_clear_yellow: drop-shadow(0px 0px 1px hsl(60, 100%, 40%));
$filter_switch_type_button_piece_text_clear_disabled_yellow: drop-shadow(0px 0px 2px hsl(54, 100%, 28%)); 

$bg_element_type_button_clear_green: linear-gradient(to bottom, hsla(0, 0%, 100%, 0.15) 46%, hsla(0, 0%, 100%, 0.64), white),hsl(120, 100%, 77%); 
$box_shadow_element_type_button_clear_green: inset 0px 0px 9px 5px $color_shadow_box_inset_element_type_button_clear, 0px 0px 0px 1px hsl(120, 100%, 72%), 0px 0px 12px 0px hsl(120, 100%, 50%);
$filter_element_type_button_piece_icon_clear_green: drop-shadow(0px 0px 1px hsl(120, 100%, 48%));
$filter_switch_type_button_piece_text_clear_disabled_green: drop-shadow(0px 0px 2px hsl(120, 100%, 28%)); 

$bg_element_type_button_clear_black: linear-gradient(to bottom, hsla(0, 0%, 100%, 0.15) 46%, hsla(0, 0%, 100%, 0.64), white),hsl(0, 0%, 76%);
$box_shadow_element_type_button_clear_black: inset 0px 0px 9px 5px $color_shadow_box_inset_element_type_button_clear, 0px 0px 12px 0px hsl(0, 0%, 40%);
$filter_element_type_button_piece_icon_clear_black: drop-shadow(0px 0px 1px hsl(0, 0%, 64%));
$filter_switch_type_button_piece_text_clear_disabled_black: drop-shadow(0px 0px 2px hsl(0, 0%, 30%)); 



/*      
//$bg_switch_type_button_pill_and_rounded_off: hsl(193, 0%,94%);
$bg_switch_type_button_pill_and_rounded_off: 
url(../../images/bgs/switch_button_icon_pill_shine_under.webp) center center / 200% 100% no-repeat,
hsl(193, 0%, 88%);
$bg_switch_type_button_pill_and_rounded_on: 
url(../../images/bgs/switch_button_icon_pill_shine_under.webp) center center / 200% 100% no-repeat,
hsl(193, 100%, 83%);
*/

$mainShines: linear-gradient(to bottom, white, hsla(0, 0%, 100%, 0.5)); // Última alteração: +10% de opacidade.

$bg_button_type_normal_and_switch_type_button_shine_top: $mainShines;
 
$bg_button_type_normal_and_switch_type_button_rounded_shine: url(../../images/bgs/switch_button_rounded_shine_above.svg) center center / 100% 100% no-repeat;  //Fazendo dessa forma (usando a função de gradiente radial) não funciona em todos os navegadores: radial-gradient(circle at 50% 10%, white -10%, rgba(255, 255, 255, 0.43) 52%, transparent 52%) center center / 100% 100% no-repeat; 

// (Text floating):

/*  
$bg_switch_type_button_icon_piece_text_floating_off: linear-gradient(to bottom, white, hsl(193, 0%, 91%)); // hsl(0, 0%, 98%);
$color_border_switch_type_button_icon_piece_text_floating_off: hsl(0, 0%, 74%); 
$color_text_switch_type_button_icon_piece_text_floating_off: hsl(0, 0%, 67%); 
$bg_button_and_switch_both_type_button_icon_piece_text_floating_on: linear-gradient(to bottom, white, hsl(193, 100%, 92%));  // hsl(193, 100%, 98%);
$color_border_button_and_switch_both_type_button_icon_piece_text_floating_on: hsl(193, 100%, 68%);  
$color_text_button_and_switch_both_type_button_icon_piece_text_floating_on: hsl(193, 100%, 60%); 
*/

$color_border_switch_type_button_icon_piece_text_floating_off: hsl(0, 0%, 74%); 
$bg_switch_type_button_icon_piece_text_floating_off: hsl(0, 0%, 96%); //linear-gradient(to bottom, white, hsl(193, 0%, 91%));
$color_text_switch_type_button_icon_piece_text_floating_off: hsl(0, 0%, 67%); 

$color_border_button_and_switch_both_type_button_icon_piece_text_floating_on: $color_border_token_blue;
$bg_button_and_switch_both_type_button_icon_piece_text_floating_on: $bg_token_blue;
$color_text_button_and_switch_both_type_button_icon_piece_text_floating_on: $color_text_token_blue; 

$color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_red: $color_border_token_red;
$bg_button_and_switch_both_type_button_icon_piece_text_floating_on_red: $bg_token_red;
$color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_red: $color_text_token_red; 

$color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_yellow: $color_border_token_yellow;
$bg_button_and_switch_both_type_button_icon_piece_text_floating_on_yellow: $bg_token_yellow;
$color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_yellow: $color_text_token_yellow; 

$color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_green: $color_border_token_green;
$bg_button_and_switch_both_type_button_icon_piece_text_floating_on_green: $bg_token_green;
$color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_green: $color_text_token_green; 

$color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_black: $color_border_token_black;
$bg_button_and_switch_both_type_button_icon_piece_text_floating_on_black: $bg_token_black;
$color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_black: $color_text_token_black; 

// --- Type Image ---

$button_and_switch_both_type_image_icon_size: $button_height; 
$color_outline_button_and_switch_both_type_image: hsla(0, 0%, 0%, 0.2); 

// (Text floating):

$color_border_switch_type_image_piece_text_floating_off: $color_border_switch_type_button_icon_piece_text_floating_off; 
$bg_switch_type_image_piece_text_floating_off:  $bg_switch_type_button_icon_piece_text_floating_off;
$color_text_switch_type_image_piece_text_floating_off: $color_text_switch_type_button_icon_piece_text_floating_off; 
$color_box_shadow_switch_type_image_piece_text_floating_off: transparent; // hsla(0, 0%, 0%, 0.09);

/*  
$color_text_switch_type_image_piece_text_floating_on: hsl(193, 100%, 60%); 
$color_border_switch_type_image_piece_text_floating_on: hsl(193, 100%, 68%);  
$bg_switch_type_image_piece_text_floating_on: linear-gradient(to bottom, white, hsl(193, 100%, 92%));  // hsl(193, 100%, 98%);
$color_box_shadow_switch_type_image_piece_text_floating_on: hsla(193, 100%, 60%, 0.24);
*/

$color_border_switch_type_image_piece_text_floating_on: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on;  
$bg_switch_type_image_piece_text_floating_on: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on;
$color_text_switch_type_image_piece_text_floating_on: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on; 
$color_box_shadow_switch_type_image_piece_text_floating_on: transparent;

$color_border_switch_type_image_piece_text_floating_on_red: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_red;  
$bg_switch_type_image_piece_text_floating_on_red: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on_red;
$color_text_switch_type_image_piece_text_floating_on_red: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_red; 
$color_box_shadow_switch_type_image_piece_text_floating_on_red: transparent;

$color_border_switch_type_image_piece_text_floating_on_yellow: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_yellow;  
$bg_switch_type_image_piece_text_floating_on_yellow: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on_yellow;
$color_text_switch_type_image_piece_text_floating_on_yellow: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_yellow; 
$color_box_shadow_switch_type_image_piece_text_floating_on_yellow: transparent;

$color_border_switch_type_image_piece_text_floating_on_green: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_green;  
$bg_switch_type_image_piece_text_floating_on_green: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on_green;
$color_text_switch_type_image_piece_text_floating_on_green: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_green; 
$color_box_shadow_switch_type_image_piece_text_floating_on_green: transparent;

$color_border_switch_type_image_piece_text_floating_on_black: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_black;  
$bg_switch_type_image_piece_text_floating_on_black: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on_black;
$color_text_switch_type_image_piece_text_floating_on_black: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_black; 
$color_box_shadow_switch_type_image_piece_text_floating_on_black: transparent;

// --- Type Key ---

$switch_type_key_ball_size: 24px;
$switch_type_key_ball_size_SS: 28px;

$bg_switch_type_key_ball: 
linear-gradient(to bottom, hsla(0, 0%, 0%, 0.2), hsla(0, 0%, 100%, 0.5)),
radial-gradient(circle at 50% 50%, hsla(0, 0%, 100%, 0.15), hsla(0, 0%, 100%, 0.6) 50%, hsla(0, 0%, 0%, 0.45) 75%),
hsl(0, 0%, 80%);
$bg_switch_type_key_on_ball: 
linear-gradient(to bottom, hsl(0, 0%, 100%), hsla(0, 0%, 100%, 0.5)),
radial-gradient(circle at 50% 50%, hsla(0, 0%, 100%, 0.15), hsla(0, 0%, 100%, 0.6) 50%, hsl(0, 0%, 100%) 75%),
cyan;
$bg_switch_type_key_ball_shine: linear-gradient(to bottom, rgba(255, 255, 255, 1), hsla(0, 0%, 100%, 0));
$bg_switch_type_key_path_off: linear-gradient(to bottom, hsl(0, 0%, 70%), hsl(0, 0%, 73%), hsl(0, 0%, 100%)); // hsl(0, 0%, 76%)
$bg_switch_type_key_path_on: white; // linear-gradient(to bottom, white, hsl(197, 100%, 75%)); // linear-gradient(to bottom, white, white, hsl(197, 100%, 65%));
$bg_switch_type_key_path_off_SS: linear-gradient(to bottom, hsl(0, 0%, 70%), hsl(0, 0%, 79%), hsl(0, 0%, 100%)); // hsl(0, 0%, 76%)

//····································································◈ Buttons

// Obs.: Algumas variáveis dos botões estão em Switches.

/*  
$color_text_button_type_image_piece_text_floating: hsl(190, 100%, 51%); 
$color_border_button_type_image_piece_text_floating: hsl(195, 100%, 50%);
$color_box_shadow_in_button_type_image_piece_text_floating: hsla(195, 100%, 50%, 0.3);
$color_box_shadow_out_button_type_image_piece_text_floating: hsla(193, 100%, 66%, 0.24);
$bg_button_type_image_piece_text_floating: hsla(192, 100%, 98%, 0.95); 
*/

$color_border_button_type_image_piece_text_floating: $color_border_switch_type_image_piece_text_floating_on;
$bg_button_type_image_piece_text_floating: $bg_switch_type_image_piece_text_floating_on; 
$color_text_button_type_image_piece_text_floating: $color_text_switch_type_image_piece_text_floating_on; 
$color_box_shadow_in_button_type_image_piece_text_floating: transparent;
$color_box_shadow_out_button_type_image_piece_text_floating: transparent; // $color_box_shadow_switch_type_image_piece_text_floating_on;

$color_border_button_type_image_piece_text_floating_red: $color_border_switch_type_image_piece_text_floating_on_red;
$bg_button_type_image_piece_text_floating_red: $bg_switch_type_image_piece_text_floating_on_red; 
$color_text_button_type_image_piece_text_floating_red: $color_text_switch_type_image_piece_text_floating_on_red; 
$color_box_shadow_in_button_type_image_piece_text_floating_red: transparent;
$color_box_shadow_out_button_type_image_piece_text_floating_red: transparent;

$color_border_button_type_image_piece_text_floating_yellow: $color_border_switch_type_image_piece_text_floating_on_yellow;
$bg_button_type_image_piece_text_floating_yellow: $bg_switch_type_image_piece_text_floating_on_yellow; 
$color_text_button_type_image_piece_text_floating_yellow: $color_text_switch_type_image_piece_text_floating_on_yellow; 
$color_box_shadow_in_button_type_image_piece_text_floating_yellow: transparent;
$color_box_shadow_out_button_type_image_piece_text_floating_yellow: transparent;

$color_border_button_type_image_piece_text_floating_green: $color_border_switch_type_image_piece_text_floating_on_green;
$bg_button_type_image_piece_text_floating_green: $bg_switch_type_image_piece_text_floating_on_green; 
$color_text_button_type_image_piece_text_floating_green: $color_text_switch_type_image_piece_text_floating_on_green; 
$color_box_shadow_in_button_type_image_piece_text_floating_green: transparent;
$color_box_shadow_out_button_type_image_piece_text_floating_green: transparent;

$color_border_button_type_image_piece_text_floating_black: $color_border_switch_type_image_piece_text_floating_on_black;
$bg_button_type_image_piece_text_floating_black: $bg_switch_type_image_piece_text_floating_on_black; 
$color_text_button_type_image_piece_text_floating_black: $color_text_switch_type_image_piece_text_floating_on_black; 
$color_box_shadow_in_button_type_image_piece_text_floating_black: transparent;
$color_box_shadow_out_button_type_image_piece_text_floating_black: transparent;

//····································································◈ Choices

// $bg_choice_label: url(../../images/bgs/choice_label.png)  center /100% 100%; // <- Parte do estilo de choice anterior!
// $bg_choice: url(../../images/bgs/choice.png)  center /100% 100%; // <- Parte do estilo de choice anterior!
// $bg_choice_d_open: url(../../images/bgs/choice_d_open.png)  center /100% 100%; // <- Parte do estilo de choice anterior!
// $bg_choice_selector: url(../../images/bgs/choice_selector.png)  center /100% 100%; // <- Parte do estilo de choice anterior!

//····································································◈ Scrollbars

// HeaderANDnav, choice dropdown, lightbox, <textarea>

// $color_1_scrollbar: hsla(0, 0%, 0%, 0.14);
$color_1_scrollbar: linear-gradient(to bottom, hsl(180, 100%, 85%), hsl(195, 100%, 55%)); // hsl(188, 100%, 85%);
$color_2_scrollbar: hsla(0, 0%, 100%, 0.4);

$color_scrollbar_thumb: $color_1_scrollbar;
$color_scrollbar_thumb_firefox: $color_1_scrollbar;
$color_scrollbar_track: $color_2_scrollbar;
$color_scrollbar_track_firefox: transparent;

$color_menu_scrollbar_thumb: $color_1_scrollbar;  
$color_menu_scrollbar_thumb_firefox: $color_1_scrollbar; 
$color_menu_scrollbar_track: transparent;
$color_menu_scrollbar_track_firefox: transparent;

$color_menuRounded_scrollbar_thumb: $color_1_scrollbar;  
$color_menuRounded_scrollbar_thumb_firefox: $color_1_scrollbar; 
$color_menuRounded_scrollbar_track: transparent;
$color_menuRounded_scrollbar_track_firefox: $color_2_scrollbar;

//····································································◈ Others

$bg_button_hide: url(../../images/icons/button_hide.png)  center /100% 100%;

/*  
◈──────────────────────────────────────────────────────◈
TODO: Geral
◈──────────────────────────────────────────────────────◈ */

/* Global New Box Model */

html {
    
    box-sizing: border-box;
} 

*, *::before, *::after {
    
    box-sizing: inherit;
}

/* Cores */

.color_theme {
    color: $color_theme;
}

.bgc_color_theme {
    background-color: $color_theme;
}

/*  
◈──────────────────────────────────────────────────────◈
TODO: Error
◈──────────────────────────────────────────────────────◈ */

.error {

    @extend .danger;
    font-size: $font_size;
    /*     
    color: white;
    background-color: red;
    outline: 2px solid red;
    border-top: 2px solid $bg_html;
    padding: 0 8px;
    text-align: center;
    @extend .lineHeight;
    */
    position: fixed;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: $zIndex_error;
} 

.error.top {

    top: 0;
    bottom: auto;
} 

/*  
◈──────────────────────────────────────────────────────◈
TODO: Main Scrollbar
◈──────────────────────────────────────────────────────◈ */

// Não tente separar a barra de rodagem principal das outras, já tentei fazer isso de todo jeito mas ficou bugando no
// efeito de hover da barra de rodagem do <html>.
    
* {
    @if($enableAlternativeScrollbarStyle == true){

            scrollbar-width: auto;
            scrollbar-color: hsl(195, 100%, 50%) hsla(195, 100%, 50%, 0.06);
    }
}

*::-webkit-scrollbar { // Entire bar

    width: 16px;
    height: 16px;
}

*::-webkit-scrollbar-thumb { // Bar pointer 

    border-radius: 1000px;
    box-shadow: 0px 3px 5px 0px hsla(0, 0%, 0%, 0.25);



    // $delta_deg: 116deg; 
    // $delta_deg: 140deg; 
    // $delta_deg: 231deg; 
    // $delta_deg: 295deg; 

    // background:
    // linear-gradient(calc(217deg + #{$delta_deg}), hsla(190, 100%, 80%, 0.8), hsla(190, 100%, 80%, 0) 71%),
    // linear-gradient(calc(127deg + #{$delta_deg}), hsla(0, 0%, 100%, 0.8), hsla(0, 0%, 100%, 0) 71%),
    // linear-gradient(calc(336deg + #{$delta_deg}), hsla(195, 100%, 50%, 0.8), hsla(195, 100%, 50%, 0) 71%),
    // hsla(0, 0%, 100%, 0);



    // $delta_deg: 320deg;
    $delta_deg: 51deg;

    background:
    linear-gradient(calc(217deg + #{$delta_deg}), hsla(195, 100%, 50%, 0.8), hsla(195, 100%, 50%, 0) 71%),
    linear-gradient(calc(127deg + #{$delta_deg}), hsla(0, 0%, 100%, 0.8), hsla(0, 0%, 100%, 0) 71%),
    linear-gradient(calc(336deg + #{$delta_deg}), hsla(190, 100%, 83%, 0.8), hsla(190, 100%, 80%, 0) 71%);

    // background-color: white;
}

*::-webkit-scrollbar-thumb:hover { // Bar pointer hover

    $delta_deg: 51deg;

    background:
    linear-gradient(calc(217deg + #{$delta_deg}), hsla(195, 100%, 78%, 0.8), hsla(195, 100%, 50%, 0) 71%),
    linear-gradient(calc(127deg + #{$delta_deg}), hsla(0, 0%, 100%, 0.85), hsla(0, 0%, 100%, 0) 71%),
    linear-gradient(calc(336deg + #{$delta_deg}), hsla(190, 100%, 92%, 0.8), hsla(190, 100%, 80%, 0) 71%);

    // background-color: white;

    // box-shadow: 
    // inset 0px 0px 0px 1px hsla(195, 100%, 50%, 0.15),
    // 0px 3px 5px 0px rgba(0, 0, 0, 0.25);
}

*::-webkit-scrollbar-track { // Bar background

    border-top: 1px solid $color_theme;
    border-left: 1px solid $color_theme;
    // background: radial-gradient(white, hsl(195, 100%, 95%));
}

*::-webkit-scrollbar-track:hover {   // Bar background hover

    // background: hsla(195, 100%, 50%, 0.1);
}

/*  
◈──────────────────────────────────────────────────────◈
TODO: <html> & <body> 
◈──────────────────────────────────────────────────────◈ */

html {

    background: $bg_html;

    //····································································◈ Scrollbar
    
    @if($enableAlternativeScrollbarStyle == true){
        
        // @extend .mainScrollbar; 

        @media (min-width: $central_maxWidth) {

            scrollbar-width: auto;
            scrollbar-color: hsl(192, 100%, 72%) hsla(195, 100%, 50%, 0);
        }
    }
    /* 
    &::-webkit-scrollbar { // Entire bar

        // Está no elemento <body>.
    }
    
    &::-webkit-scrollbar-thumb { // Bar pointer  

        // Está no elemento <body>.
    }

    &::-webkit-scrollbar-thumb:hover { // Bar pointer hover

        // Está no elemento <body>.
    }

    &::-webkit-scrollbar-track { // Bar background
        
        // Está no elemento <body>.
    } */
}

body {

    min-width: 300px;
    margin: auto;

    & { // Gambiarra necessária para que o 'nav_openBtn_base' não apareça do rodapé para cima na página.

        background: // imagem anexo origem extensão posição/tamanho repetição cor_de_fundo
        
        linear-gradient(to bottom, $bgColor_body calc(100% - 20px), change-color($bgColor_body, $alpha: 0))  
        0 0 / 100% calc(100% - #{$size_nav_openBtn} - #{$offset_nav_openBtn_show}) no-repeat;
    }

    //····································································◈ Scrollbar   
    /*     
    @if($enableAlternativeScrollbarStyle == true){
        
        // Está no elemento <html>. 
    }

    &::-webkit-scrollbar { // Entire bar

        @extend ._webkit_mainScrollbar;
    }
    
    &::-webkit-scrollbar-thumb { // Bar pointer  

        @extend ._webkit_mainScrollbar_thumb;
    }

    &::-webkit-scrollbar-thumb:hover { // Bar pointer hover

        @extend ._webkit_mainScrollbar_thumb_hover;
    }

    &::-webkit-scrollbar-track { // Bar background
        
        @extend ._webkit_mainScrollbar_track;
    }
    */

    @media (min-width: calc(#{$central_maxWidth} + 18px)) {

        @if($enableAlternativeScrollbarStyle == true){
            
            // Está no elemento <html>.
        }

        &::-webkit-scrollbar { // Entire bar
        
            width: 15px;
        }
        
        &::-webkit-scrollbar-thumb { // Bar pointer 
        
            border-top: 1px solid hsl(195, 100%, 70%);
            border-left: 1px solid hsl(195, 100%, 70%);
            box-shadow: none; // Bug fix: A sombra fica bugando no Chrome.
        }
        
        &::-webkit-scrollbar-thumb:hover { // Bar pointer hover
        
            border-color: hsl(195, 100%, 82%);
            box-shadow: none; // Bug fix: A sombra fica bugando no Chrome.
        }
        
        &::-webkit-scrollbar-track { // Bar background
        
            border: 0;
        }
    } 
}

/*  
◈──────────────────────────────────────────────────────◈
TODO: Syntaxes Elements
◈──────────────────────────────────────────────────────◈ */

c1 { color: red; }
c2 { color: blue; }
c3 { color: adjust-color(green, $lightness: 18%); }
c4 { color: purple; }
       
/*  
◈──────────────────────────────────────────────────────◈
TODO: Margins
◈──────────────────────────────────────────────────────◈ */

.offset { /* Lateral margins */    
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal;
}

// .offsetV {
//     margin-top: $margin_vertical;
//     margin-bottom: $margin_vertical;
// }

.offset.choice.horizontal { 
    display: inline-flex;
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal;
}

.offset.choice.vertical, .offset.choice.dropdown { 
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal;
}

%margins {
    margin-top: $margin_vertical;
    margin-bottom: $margin_vertical;
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal; 
    // @extend .offset; 
}

/*
◈──────────────────────────────────────────────────────◈
TODO: Topic
◈──────────────────────────────────────────────────────◈ */

.temporaryMsgBox {
    
    // display: none;
    // position: relative;
    // border: 1px solid black;
    // margin-top: calc((#{$button_height_smaller})/2); 
    // margin-bottom: $margin_vertical;
    // margin-left: $margin_horizontal;
    // margin-right: $margin_horizontal;

    /* > :nth-child(1) {

        display: inline-block;
        content: "";
        position: absolute; 
        top: calc((-1 * #{$button_height_smaller})/2);
        right: 4px;
        cursor: pointer;

        width: $button_height_smaller;  
        height: $button_height_smaller;
        border-radius: 50%;
        background: $bg_button_hide; 
        //box-shadow: 6px 6px 8px -7px $color_shadow_lightbox_button, inset 3px 3px 5px 0px hsla(0, 0%, 100%, 0.5), inset -2px -3px 5px 3px hsla(0, 0%, 0%, 0.4);
        //content: "×"; font-size: 31rem; color: white; display: flex; align-items: center; justify-content: center; 
    } */
}

.temporaryHideBtn {

    display: inline-block;
    content: "";
    position: absolute; 
    top: calc((-1 * #{$button_height_smaller})/2);
    z-index: 1;
    cursor: pointer;

    width: $button_height_smaller;  
    height: $button_height_smaller;
    border-radius: 50%;
    background: $bg_button_hide; 
    //box-shadow: 6px 6px 8px -7px $color_shadow_lightbox_button, inset 3px 3px 5px 0px hsla(0, 0%, 100%, 0.5), inset -2px -3px 5px 3px hsla(0, 0%, 0%, 0.4);
    //content: "×"; font-size: 31rem; color: white; display: flex; align-items: center; justify-content: center; 
}
 
.temporaryMsg { 
        
    display: none;
    position: relative;
    @extend .container_organize;
    border: 1px solid black;
    border-radius: 10px;
    // margin-left: $margin_horizontal;
    // margin-right: $margin_horizontal;
    padding: 3px 12px;
    padding-right: 13px !important;
    // padding-right: calc((#{$button_height_smaller})/2);
    text-indent: 0;

    .temporaryHideBtn {
        
        right: -18px;
    }
}

.temporaryDiv {
    
    display: none;
    position: relative;
    // margin-top: calc((#{$button_height_smaller})/2); 
    // margin-bottom: $margin_vertical;
    // margin-left: $margin_horizontal;
    // margin-right: $margin_horizontal;

    .temporaryHideBtn {

        right: 4px;
    }

    /* > :nth-child(1) {

        display: inline-block;
        content: "";
        position: absolute; 
        top: calc((-1 * #{$button_height_smaller})/2);
        right: 4px;
        z-index: 1;
        cursor: pointer;

        width: $button_height_smaller;  
        height: $button_height_smaller;
        border-radius: 50%;
        background: $bg_button_hide; 
        //box-shadow: 6px 6px 8px -7px $color_shadow_lightbox_button, inset 3px 3px 5px 0px hsla(0, 0%, 100%, 0.5), inset -2px -3px 5px 3px hsla(0, 0%, 0%, 0.4);
        //content: "×"; font-size: 31rem; color: white; display: flex; align-items: center; justify-content: center; 
    } */
 
    /* > :nth-child(2) { 
        
        margin-left: $margin_horizontal;
        margin-right: $margin_horizontal;
        padding-right: calc((#{$button_height_smaller})/2);
    } */
}

/*  
◈──────────────────────────────────────────────────────◈
TODO: Texts
◈──────────────────────────────────────────────────────◈ */

/*  TODO:    1 ▶ Elements
◈──────────────────────────────────────────────────────◈ */
/* 
.TNR {
    font-family: 'Times New Roman'; 
    font-size: 19px;
}
 */
.courier {
    font-family: 'Courier';
    font-size: $font_monospace_size;
}

html {
    font-family: $font_default;
    font-size: 1px;
    color: $color_text; 
}

// /* Elementos genéricos inline: */ 
// span, a, em, i, strong, b, u, abbr, dfn, sub, sup, var, 
// /* Elementos genéricos em bloco: */ 
// p, ul, ol, li, dt, dd, details, summary, 
// /* ?: */
// output, time, address, blockquote, 
// q, cite, figcaption, 
// /* Elementos de formulário: */ 
// form, label, input, textarea, select, button, fieldset, legend, 
// /* Elementos de tabela: */
// table, tr, th, td,
// /* Elementos com tamanho definido separadamente: 
// h1, h2, h3, h4, h5, h6, pre, code, samp, kbd, caption
// /* Elementos que eu criei: */
// e, sc1, ..., sc4, fake */ 

* {
    font-size: $font_size; 
}

div, header, nav, main, article, section, aside, footer {
    font-size: 0;
}

a { 
    color: blue; 
    text-decoration: none;
} 

a[href^="http"] { 
    word-break: break-all;
}

@for $i from 1 through 6 {

	h#{$i} { 
        font-size: calc(70rem - (8 * #{$i}rem)); // Geralmente o h1 é 40rem e o h6 é 20rem
        margin-top: calc(7rem - #{$i}rem + #{$margin_vertical});
        margin-bottom: calc(7rem - #{$i}rem + #{$margin_vertical});
        margin-left: $margin_horizontal;
        margin-right: $margin_horizontal;
        text-align: center;
        background: $color_text_hx;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        text-fill-color: transparent; 
	}
}

@for $i from 7 through 20 { 
	h#{$i} {
        display: block;
        font-size: 20rem;
        margin-top: $margin_vertical;
        margin-bottom: $margin_vertical;
        margin-left: $margin_horizontal;
        margin-right: $margin_horizontal;
        text-align: center; 
        font-weight: bold;
        // color: $color_theme;
        background: $color_text_hx;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        text-fill-color: transparent; 
	}
}

.lineHeight {
    line-height: 1.5;
}

p {
    @extend .lineHeight;
}

p {
    @extend %margins;
    text-indent: 6rem; /* Sem 'text-align: justify', usar: 4px. Com 'text-align: justify', usar: 6px.  */
    text-align: justify;
}

strong, b, em, i {
    font-weight: normal; 
    font-style: normal;
    text-decoration: underline;
}

mark {
    // color: $color_text;
    // color: initial;
    color: inherit;
    background: 0;
}

abbr {
    text-decoration: none !important;
    font-variant: none; // Evita o estilo 'font-variant: small-caps' de alguns navegadores
}

address {
    @extend .lineHeight;
}

dfn, var, address, cite {
    font-style: normal;
}

kbd {
    font-family: Helvetica;
    font-size: 14rem;
    padding: 1px 5px;
    border: 4px outset $color_border_kbd;
    border-radius: 5px;
    background: $bg_kbd;
}

code, samp {
    /* font-size: 17px;
    font-family: $font_monospace;
    text-align: left; */

    font-size: $font_size; 
    font-family: $font_default;
    text-align: left;
}

pre {
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal;
    /* 
    font-size: $font_monospace_size;
    font-family: $font_monospace; */
    font-size: $font_size; 
    font-family: $font_default;
}

// Tentei fazer a configuração do <summary> usando Flexbox mas bugou no Safari, e não fiz manipulando 
// os paddings pois a altura do <summary> podia ficar diferente dependendo do tipo de fonte usada.

details {
    $paddingTop: 9px;
    $paddingBottom: $paddingTop;
    $paddingLeft: 16px;
    $paddingRight: 12px;

    border: 1px solid $color_theme;
    border-radius: calc(#{$button_height_small}/2);
    @extend %margins;

    > summary:nth-of-type(1) {
        line-height: $button_height_small;
        padding-left: $paddingLeft;
        padding-right: $paddingRight;
        // border: 1px solid $color_theme;
        border-top-color: hsla(0, 0%, 100%, 0);
        border-radius: calc((#{$button_height_small}/2) - 1px);
        color: $color_theme;
        font-weight: bold;
        background-color: $bg_html;
        list-style-type: "▶ ";
        cursor: pointer;
    }

    > .content {
        font-size: $font_size;
        padding: $paddingTop $paddingRight $paddingBottom $paddingLeft;
    }

    ul {
        margin-top: calc(#{$margin_vertical} - #{$paddingTop});
        margin-bottom: calc(#{$margin_vertical} - #{$paddingBottom});
        // margin-left: calc(#{$ulANDol_margin_horizontal} - #{$margin_horizontal});
        // margin-right: calc(#{$ulANDol_margin_horizontal} - #{$margin_horizontal});
        margin-left: $margin_horizontal;
        margin-right: $margin_horizontal;
    }
}

details[open] > summary:nth-of-type(1) {

    border-bottom: 1px solid $color_theme;
    list-style-type: "▼ ";
}

details.type_2[open] {

    background-image: linear-gradient(to bottom right, hsl(195, 100%, 72%), hsl(195, 100%, 48%));

    > summary:nth-of-type(1) {

        border: 1px solid hsla(0, 0%, 100%, 0);
        list-style-type: "▼ ";
    }

    > .content {
        color: $color_text_window;
    }
}


/*  TODO:        2 ▶ Lists
◈──────────────────────────────────────────────────────◈ */

li, ul, ol, dl, dt, dd {
    @extend .lineHeight;
}

ul, ol {
    margin-top: $margin_vertical; 
    margin-bottom: $margin_vertical;
}

ul {
    // margin-left: $ulANDol_margin_horizontal;
    // margin-right: $ulANDol_margin_horizontal;
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal;
}

ol {
    margin-left: $ulANDol_margin_horizontal;
    margin-right: $ulANDol_margin_horizontal;
}

ul > li + li, ol > li + li {
    margin-top: $margin_vertical;
}

ul, dl { 
    // margin-left: calc(#{$margin_horizontal} + 24px); 
    margin-left: $margin_horizontal; 
} 

li, dd {
    text-align: justify;
}


// ul { list-style-type: "➭ "; } ul ul { list-style-type: "● "; } ul ul { list-style-type: "-› "; } ul ul ul { list-style-type: "- "; } <- Não funciona no Safari.

/* 
ul, dl { list-style-image: url("../../images/icons/list_1.svg"); }
ul ul, dl dl { list-style-image: url("../../images/icons/list_2.svg"); }
ul ul ul, dl dl dl { list-style-image: url("../../images/icons/list_3.svg"); }
ul ul ul ul, dl dl dl dl { list-style-image: url("../../images/icons/list_4.svg"); }
*/

// Estilos pro Safari
/* ul, dl { list-style-image: url("../../images/icons/list_1.svg"); }
ul ul, dl dl { list-style-image: url("../../images/icons/list_4.svg"); }
ul ul ul, dl dl dl { list-style-image: url("../../images/icons/list_5.svg"); } */

// Não funciona em dl e tb não funciona no Safari (não funciona no Safari por causa da propriedade 'list-style-type' de 'list-style')
/* ul, dl { list-style: none "➭ " outside; }
ul ul, dl dl { list-style: none "• " outside; }
ul ul ul, dl dl dl { list-style: none "‣ " outside; }
ul ul ul ul, dl dl dl dl { list-style: none "- " outside; } */


ul /*, dl*/  { list-style: none; }

ul li::before, dt::before { content: "➭ "; }
ul li li::before, dd:not(.rendering_output) > dl > div > dt::before { content: "• "; }
ul li li li::before, dd:not(.rendering_output) dd > dl > div > dt::before { content: "‣ "; }
ul li li li li::before, dd:not(.rendering_output) dd dd > dl > div > dt::before { content: "- "; }

// Obs.: As seleções das listas aninhadas dos <dl>s ficaram complexas para 
// evitar dar conflito quando forem utilizadas dentro de um 'codeEx'. 

//····································································◈ <dl>

dl {
    @extend %margins;

    /* > div {
        display: list-item;
    } */

    dt { 
        font-weight: bold; 
    }

    dt::after { 
        content: ': ';
    }

    dt, dd { 
        display: inline;
    }

    > div:not(:nth-last-of-type(1)) {
        margin-bottom: $margin_vertical;
    }
}

//····································································◈ <dl> Of Definition

.list_definition {

    dt, dd { 
        display: block;
        margin-bottom: $margin_vertical;
    }

    dt::before { 
        content: "" 
    }

    @media (min-width: $screen_small_widthLimit) {

        dd {
            margin-left: 30rem;
        }
    }
}

/*  TODO:    1 ▶ Classes
◈──────────────────────────────────────────────────────◈ */

/*  TODO:        2 ▶ Simple
◈──────────────────────────────────────────────────────◈ */

.font_default {
    font-family: $font_default;
}

.font_default_2 {
    font-family: $font_default_2;
}

.font_size {
    font-size: $font_size; 
}

.font_monospace {
    font-family: $font_monospace;
    font-size: $font_monospace_size;
}

.font_small {
    font-size: $font_small;
}

.font_smaller {
    font-size: $font_smaller;
}

.underline {
  text-decoration: underline;
}

.bold { 
    font-weight: bold; 
}

.italic {
    font-style: italic;
}

.highlight, .rainbow { // Highlights

    visibility: hidden;
    text-indent: 0;
}

code.highlight, code.rainbow {

    word-break: break-all;
}

.highlight {

    color: hsl(195, 100%, 88%);
    // text-shadow: 1px 1px deepSkyBlue, 1px 1px deepSkyBlue;
    text-shadow: 1px 1px deepSkyBlue, 1.2px 1.2px deepSkyBlue; // Apesar da diferença deste 'text-shadow'
    // no PC ser íntima com relação ao comentado na linha acima, esse tem uma diferença significativa no iPhone.
}

.success .highlight, .warning .highlight, .fail .highlight, .danger .highlight {

    color: inherit;
    text-shadow: none;
    font-style: italic;
}

.rainbow {

    background: $color_text_rainbow;
    // background-size: contain;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-fill-color: transparent;
}

/* code.rainbow {
    -webkit-text-fill-color: initial;
    text-fill-color: initial;

    padding: 2px 2px 2px 3px;
    border-radius: 7px;
    border: 1px solid $color_border_token_blue;
    background: $bg_token_blue;
    color: $color_text_token_blue;
} */

/* .heavy { // Highlight

    display: inline-flex;
    display: none;
    justify-content: center;
    align-items: center;
    text-indent: 0;
    word-break: break-all;

    color: hsl(195, 100%, 100%); 
    background-color: deepSkyBlue; 
    padding: 0px 7px; 
    border: 1px solid $bg_html;
    border-radius: 14px;
} */

/* .burning { // Highlight

    color: white;
    text-shadow: 0 0 20px #fefcc9,
                     10px -10px 30px #feec85,
                     -20px -20px 40px #ffae34,
                     20px -30px 35px #ec760c,
                     -20px -40px 40px #cd4606,
                     0 -50px 65px #973716,
                     10px -70px 70px #451b0e;
} */

.mini_topic {

    font-size: $font_size;
    background: 0;
    text-align: center;
    font-weight: bold;
    -webkit-text-fill-color: initial;
}

.container_text {
    font-size: $font_size; 
    padding: 8px 13px 9px;
    border: 1px solid $color_border_form;  
    border-radius: $border_radius_default;
    min-height: $button_height_small;
    text-align: justify;
}

p.container_text { // Regra necessária, pois o tamanho do conteúdo do <p> é diferente dos outros elementos (como do <div>).
    padding: 5px 13px 5px;
}

.container_organize {
 
    width: max-content; -moz-width: fit-content; width: -moz-fit-content; width: fit-content; /* <- Declarações necessárias 
    para garantir que o Firefox funcione como se suportasse 'width: fit-content'. (Ao menos 1 delas deve funcionar.) */

    max-width: calc(100% - (2 * #{$margin_horizontal}));

    margin-left: auto !important;
    margin-right: auto !important;
}

span.token {

    padding: 6px 8px;
    border-radius: 1000px;
}

span.token, span.token.blue {

    border: 1px solid $color_border_token_blue;
    background: $bg_token_blue;
    color: $color_text_token_blue;
}

span.token.red {

    border: 1px solid $color_border_token_red;
    background: $bg_token_red;
    color: $color_text_token_red;        
} 

span.token.yellow {

    border: 1px solid $color_border_token_yellow;
    background: $bg_token_yellow;
    color: hsl(60, 100%, 50%); // yellow
    color: $color_text_token_yellow; 
}

span.token.green {

    border: 1px solid $color_border_token_green;
    background: $bg_token_green;
    color: $color_text_token_green;
}

span.token.pink {

    border: 1px solid $color_border_token_pink;
    background: $bg_token_pink;
    color: $color_text_token_pink;
}

span.token.purple {

    border: 1px solid $color_border_token_purple;
    background: $bg_token_purple;
    color: $color_text_token_purple;
}

span.token.orange {

    border: 1px solid $color_border_token_orange;
    background: $bg_token_orange;
    color: $color_text_token_orange;
}

span.token.brown {

    border: 1px solid $color_border_token_brown;
    background: $bg_token_brown;
    color: $color_text_token_brown;
}

span.token.cyan {

    border: 1px solid $color_border_token_cyan;
    background: $bg_token_cyan;
    color: $color_text_token_cyan;
}

span.token.purple2 {

    border: 1px solid $color_border_token_purple2;
    background: $bg_token_purple2;
    color: $color_text_token_purple2;
}

span.token.white {

    border: 1px solid $color_border_token_white;
    background: $bg_token_white;
    color: $color_text_token_white;        
}

span.token.black {

    border: 1px solid $color_border_token_black;
    background: $bg_token_black;
    color: $color_text_token_black;        
}


/*  TODO:        2 ▶ Labels
◈──────────────────────────────────────────────────────◈ */

.example_1, .oneObs, .attention_1 {

    text-indent: 0;

    > .label {
        @extend span.token;
        padding: 4px 6px 4px 7px;
    }
}

.oneObs {
    padding-right: 7px;
}

.example_2, .obsGroup, .attention_2 {

    text-align: center;

    > .label {
        @extend span.token;
        display: inline;
        padding-left: 9px;
    }
}

.attention_1, .attention_2 {

    color: red;

    > .label {
        @extend span.token.red;
    }
}

.example_3 {

    text-align: center; // Necessário para quando a descrição for curta.
    
    > :nth-child(1) {

        display: inline-block;
        text-align: center;
        text-indent: 0;

        > .label {
            @extend span.token;
            padding: 4px 6px 4px 7px;
        }
    }
}

.example_1, .example_2, .example_3, .oneObs, .obsGroup, .attention_1, .attention_2 {

    display: none;
}

/*  TODO:        2 ▶ Signs
◈──────────────────────────────────────────────────────◈ */

.success, .warning, .fail, .danger  {

    padding: 3px 12px;
    margin: $margin_vertical $margin_horizontal;
    border-radius: 10px;
    text-indent: 0;
}

.success {
    color: $color_text_success;
    background: $bg_success;
    border: 2px solid $color_border_success;
}

.warning {
    color: $color_text_warning;
    background: $bg_warning;
    border: 2px solid $color_border_warning;
}

.fail {
    color: $color_text_fail;
    background: $bg_fail;
    border: 2px solid $color_border_fail;
}

.danger {
    padding: 6px 10px;
    color: $color_text_danger;
    background: $bg_danger;
    border-top: 4px solid $color_border_danger_clear;
    border-left: 4px solid $color_border_danger_clear;
    border-bottom: 4px solid $color_border_danger_dark;
    border-right: 4px solid $color_border_danger_dark;
    font-weight: bold;
    text-align: center;
    text-transform: uppercase;
}
/*
.success.long, .warning.long, .fail.long, .danger.long {
    text-align: center;
    padding-left: calc(1 * #{$margin_horizontal});
    padding-right: calc(1 * #{$margin_horizontal});
    border-left-width: 0;
    border-right-width: 0;
    border-radius: 0;
    margin-left: 0;
    margin-right: 0;
}
*/

/*  TODO:        2 ▶ Lists
◈──────────────────────────────────────────────────────◈ */

.dol { // Description Ordered Lists

    font-weight: bold;

    > li > *:not(:nth-of-type(1)){
        font-weight: normal;
    }

    > li > *:nth-of-type(1)::after{
        content: ': ';
    }
}

.noListStyle {

    list-style: none; // Para <ul>, <ol>, e <dl>
    padding: 0; // Para <ul> e <ol>
    margin-left: $margin_horizontal; // Para <ul>, <ol>, e <dl>

    > li { // Para <ul> e <ol>
        margin-top: 0;
    }

    > div { // Para <dl>
        display: block;
    }

    dt {  // Para <dl>
        font-weight: normal; 
    }

    > li::before {  // Para <ul>
        content: initial; 
    }

    dt::before { // Para <dl>
        content: initial;  
    } 

    dt::after { // Para <dl>
        content: initial; 
    }

    dt, dd {  // Para <dl>
        display: block;
    }

    > div:not(:nth-last-of-type(1)) { // Para <dl>
        margin-bottom: 0;
    }
}

/* 
.spaced_items > li + li, .spaced_items > dd + dd {
    margin-top: $margin_vertical;
}
 */

.list_compressed > li + li {
    margin-top: 0;
}

//.arrow_2 { list-style-type: "➢ "; }  // <- Não funciona no safari.
// .star { list-style-type: "✰ "; }  // <- Não funciona no safari.

.list_featured {

    list-style-type: none;
    list-style-image: none;
    margin-left: $margin_horizontal;

    li {
        padding-left: $margin_horizontal;
        padding-right: $margin_horizontal;

        a {
            color: $color_text;
        }

        /* div {
            font-size: $font_size;
        } */
    }
    
    li + li {
        border-top: 1px solid $color_theme;
        margin-top: calc(0.5 * #{$margin_vertical});
        padding-top: calc(0.5 * #{$margin_vertical});
    }
}

/*  TODO:            3 ▶ Menu List
◈──────────────────────────────────────────────────────◈ */

.menuList {
    
    visibility: hidden;
    display: inline-block;
    min-width: $minWidth_menuList;
    max-width: calc(100% - 2 * #{$margin_horizontal});
    // background-color: $color_theme_2;
    overflow: auto;
    // transition: ...; // Propriedade aplicada via JS
    // @extend .window_hologram; // Classe aplicada via JS

    @media (pointer: fine) {

        & { // Mostra/esconde a barra de rolagem
            // overflow: hidden;
        }
        
        &:hover {
            overflow: auto;
        }

        &.list_ON > li:hover, ul.list_ON > li:hover {
            
            background-color: hsla(0, 0%, 100%, 0.55);
            box-shadow: 0px 0px 12px 4px hsla(0, 0%, 100%, 0.92);
            transition: 0.35s;

            // a, button {
            //     filter: drop-shadow(3px 3px 1px hsla(0, 0%, 0%, 0.15)) !important; // Sombras nos textos e nas imagens. 
            // }
        }
    }

    &, ul {
        padding: 0;
    }

    ul {
        display: none; 
        width: 0;
        height: 0;
        margin: 0;
        overflow: hidden;
    }

    li {
        margin-top: 0;
        
        &::before {
            content: initial; 
        }

        a, button {
            display: flex; 
            justify-content: center;
            align-items: center;
            min-height: $button_height;
            // @extend .windowText_floatingBold; // Classe aplicada via JS

            span {
                margin: 9.5px 16px;
                text-align: left;
                // filter: drop-shadow(0px 0px 2px hsl(195, 100%, 44%));
                // overflow-wrap: break-word; // Não funcionou!

                .textIconHTML {
                    filter: drop-shadow(0px 0px 1px hsla(195, 100%, 22%, 0.4)); // Contornos nos ícones de textos.
                    margin-right: 9px; // 4px;
                }
            }
        }

        a[href^="http"] {

            padding-left: 0;
            background: 0;
        }

        button {
            width: 100%;
            margin: 0;
            // font-weight: bold;
            background-color: hsla(0, 0%, 100%, 0);

            .textIconCSS_menuList_template {
                background-position-y: 0px
            } 
        }
    }

    li + li {
        border-top: 1px solid $color_text_window;
    }

    li.borderTopWidth_0px { // Bug Fix: Esta classe é aplicada via JavaScript.

        border-top-width: 0px;
    }

    &.imgs_noText_V.list_ON, &.imgs_noText_VH.list_ON, &.imgs_textAside_V.list_ON, &.imgs_textBelow_V.list_ON, &.imgs_textBelow_VH.list_ON {

        min-width: auto;
    }

    &.imgs_noText_V.list_ON, ul.imgs_noText_V.list_ON {

        > li:not(.back):not(.close) > * > span {

            display: none;
        }

        @media (pointer: fine) {
    
            > li:hover {
                box-shadow: none;
            }
        }
    }

    &.imgs_noText_VH.list_ON, ul.imgs_noText_VH.list_ON {

        > li:not(.back):not(.close) > * > span {

            display: none;
        }

        @media (min-width: $screen_small_widthLimit) {

            font-size: 0;
            white-space: nowrap;

            > li:not(.back):not(.close) {

                display: inline-block;
            }

            li + li:not(.back):not(.close) {
                
                border-top-width: 0px;
                border-left: 1px solid $color_text_window; // black;
            }

            > li.back, li.close {
                
                position: relative;
                min-height: $button_height;

                    > * {
                    position: sticky;
                    left: 0;
                }
            }
        }

        @media (pointer: fine) {
    
            > li:hover {
                box-shadow: none;
            }
        }
    }

    &.imgs_textAside_V.list_ON, ul.imgs_textAside_V.list_ON {

        > li:not(.back):not(.close) > * {

            justify-content: initial;
        }

        @media (pointer: fine) {
    
            > li:hover {
                box-shadow: none;
            }
        }
    }

    &.imgs_textBelow_V.list_ON, ul.imgs_textBelow_V.list_ON, &.imgs_textBelow_VH.list_ON, ul.imgs_textBelow_VH.list_ON { 

        > li:not(.back):not(.close) > * {

            display: flex; 
            flex-direction: column;
        }

        @media (pointer: fine) {
    
            > li:hover {
                box-shadow: none;
            }
        }
    }

    &.imgs_textBelow_VH.list_ON, ul.imgs_textBelow_VH.list_ON { 

        @media (min-width: $screen_small_widthLimit) {

            //----------------------------------------------------------
            // Bug fix: Esse estilo resolve um bug que acontece 
            // no Safari de PC e no Safari e Chrome de mobile.
            //----------------------------------------------------------

            > li:not(.back):not(.close) {
            
                font-size: 0;

                > * {

                    display: inline-flex;
                    // max-width: fit-content;
                }
            }
            //----------------------------------------------------------

            font-size: 0;
            white-space: nowrap;

            > li:not(.back):not(.close) {

                display: inline-block;
            }

            li + li:not(.back):not(.close) {
                
                border-top-width: 0px;
                border-left: 1px solid $color_text_window;
            }

            > li.back, li.close {
                
                position: relative;
                min-height: $button_height;

                    > * {
                    position: sticky;
                    left: 0;
                }
            }
        }
    }

    &.bugFix_mobile_imgsBorderRadius {

        border-radius: 0;
    }    
}


/*  TODO:            3 ▶ Index List
◈──────────────────────────────────────────────────────◈ */

.list_index {

    display: flex;
    justify-content: center;
    align-items: center;

    // text-align: center;
    
    a[href^="#"]:not([href="#"]) {
        padding-left: 0px;
        background: 0;
    }

    .textIconHTML {
        
        margin-right: 4px !important;
    }
}

@media (min-width: calc(#{$central_maxWidth} + (2 * (#{$minWidth_menuList} + 2 * (#{$margin_horizontal} + 10px)))) ) {

    .index {
        display: none;
    }

    .list_index {

        position: fixed;
        top: 0;
        bottom: 0;
        left: 0;
        width: calc( (100% - #{$central_maxWidth}) / 2 );

        > * {
            max-height: calc(100% -  2 * #{$margin_horizontal});
        }
    }
}

/*  TODO:    1 ▶ Text Icons
◈──────────────────────────────────────────────────────◈ */

/*  TODO:        2 ▶ Generator
◈──────────────────────────────────────────────────────◈ */ 

// $icon_1: "classeName1", "fileName1", 10;
// $icon_2: "classeName2", "fileName2", 4;

// $icons:  $icon_1, $icon_2, "classeName3" "fileName3" 6, "classeName4" "fileName4" 25;
 
// @each $icon in $icons {

//     .t#{nth($icon, 3)}::before {
//         display: inline-block;
//         content: nth($icon, 1) +" - "+ nth($icon, 2); 
//     } 
// }  

//····································································◈ Entradas

$icons: 

// Classe "Arquivo.tipo" ∆Largura ∆Espaçamento y,

textIconCSS_menu_template "textIconCSS_menu_template.svg" 0px 0px 0px, 
textIconCSS_menuList_template "textIconCSS_menu_template.svg" 0px 5px 3px, 
textIconCSS_choice_template "textIconCSS_menu_template.svg" 0px 5px 4px, 
textIconCSS_yes "textIconCSS_yes.svg" 1px 0px 0px, 
textIconCSS_no "textIconCSS_no.svg" 0px 0px 0px,

// Ícones de testes:

textIconCSS_template "textIconCSS_template.svg" 0px 0px 0px, 
textIconCSS_template_moreWide "textIconCSS_template_moreWide.svg" 10px 0px 0px, 
textIconCSS_template_lessWide "textIconCSS_template_lessWide.svg" -10px 0px 0px, 
textIconCSS_template_moreSpace "textIconCSS_template.svg" 0px 10px 0px, 
textIconCSS_template_lessSpace "textIconCSS_template.svg" 0px -10px 0px, 
textIconCSS_template_above "textIconCSS_template.svg" 0px 0px -10px, 
textIconCSS_template_below "textIconCSS_template.svg" 0px 0px 10px, 
textIconCSS_template_uncommon "textIconCSS_template_moreWide.svg" 10px 10px 10px; 
 
//····································································◈ Motor 

@each $icon in $icons {
    
    $textIconCSS_ClassName: nth($icon, 1);
    $textIconCSS_imageFileName: nth($icon, 2);
    $textIconCSS_widthAdjust: nth($icon, 3);
    $textIconCSS_distanceAdjust: nth($icon, 4);
    $textIconCSS_position_y: nth($icon, 5);

    .#{$textIconCSS_ClassName}, .#{$textIconCSS_ClassName}.left, .#{$textIconCSS_ClassName}.right {
        background-repeat: no-repeat;   
        background-size: calc(#{$textIconCSSs_size} + #{$textIconCSS_widthAdjust}) $textIconCSSs_size; 
    }

    .#{$textIconCSS_ClassName}::selection, .#{$textIconCSS_ClassName}.left::selection, .#{$textIconCSS_ClassName}.right::selection { 
        color: transparent;
    } 

    .#{$textIconCSS_ClassName}, .#{$textIconCSS_ClassName}.left {
        background-image: url("../../images/icons/"+ $textIconCSS_imageFileName);     
        background-position-y: $textIconCSS_position_y;
        padding-left: calc(#{$textIconCSSs_size} + #{$textIconCSS_widthAdjust} + #{$textIconCSS_distanceAdjust} + #{$widthOfSpace}) !important;
    }

    .#{$textIconCSS_ClassName}:empty, .#{$textIconCSS_ClassName}.left:empty {
        padding-left: calc(#{$textIconCSSs_size} + #{$textIconCSS_widthAdjust}) !important;
    }

    .#{$textIconCSS_ClassName}.right {
        background-position-x: 99%; /* Se deixar em 100% da bug no Chrome pra PC! */
        padding-left: 0 !important;
        padding-right: calc(#{$textIconCSSs_size} + #{$textIconCSS_widthAdjust} + #{$textIconCSS_distanceAdjust} + #{$widthOfSpace}) !important;
    }

    .#{$textIconCSS_ClassName}.right:empty {
        padding-left: 0 !important;
        padding-right: calc(#{$textIconCSSs_size} + #{$textIconCSS_widthAdjust}) !important;
    }

    .#{$textIconCSS_ClassName}.noText, .#{$textIconCSS_ClassName}.left.noText {
        padding-left: calc(#{$textIconCSSs_size} + #{$textIconCSS_widthAdjust}) !important;
        // Bug fix: O conteúdo do elemento é retirado via JS! Foi necessário usar JS ao invés do CSS para evitar que o ícone fique deslocado para cima.
    }

    .#{$textIconCSS_ClassName}.right.noText {
        padding-left: 0 !important;
        padding-right: calc(#{$textIconCSSs_size} + #{$textIconCSS_widthAdjust}) !important;
    } 

    // Bug fix: Isso evita que os caracteres de espaço antes do ícone (do lado esquerdo) desapareçam se não houver algum caractere do lado direito dele (além dos caracteres de espaços e dos outros elementos).
    .#{$textIconCSS_ClassName}.noText::before, .#{$textIconCSS_ClassName}:empty::before,
    .#{$textIconCSS_ClassName}.left.noText::before, .#{$textIconCSS_ClassName}.left:empty::before,
    .#{$textIconCSS_ClassName}.right.noText::before, .#{$textIconCSS_ClassName}.right:empty::before {

        display: inline-block;
        content: 'Deve ter pelo menos 1 caractere aqui que não seja o de espaço.';
        width: 0;
        height: 0;
        color: hsla(0, 0%, 100%, 0);
        overflow: hidden;
    }
}

//····································································◈ Configurações Adicionais De Alguns Ícones Do Gerador

/* abbr.textIconCSS_interrogation > button {
    @extend .textIconCSS_interrogation.right;
    @extend .textIconCSS_interrogation.right:empty;
    @extend .textIconCSS_interrogation.noText;
    color: blue;
    background-color: hsla(0, 0%, 0%, 0);
    margin-left: 0;
    margin-right: 0;
}

abbr > button:focus {
    outline: 0px dotted DeepSkyBlue;
} */


/*  TODO:        2 ▶ Not From Generator
◈──────────────────────────────────────────────────────◈ */

@mixin textIconCSSs_notFromGenerator {
    background-repeat: no-repeat;   
    background-size: $textIconCSSs_size $textIconCSSs_size; 
}
 
/*  TODO:            3 ▶ <a>
◈──────────────────────────────────────────────────────◈ */

a[href^="http"] {  // .textIconCSS_link {
    @include textIconCSSs_notFromGenerator;
    background-image: url('../../images/icons/anchor_web.svg');   

    background-position: 0% 0px;
    padding-left: calc(#{$textIconCSSs_size} + 6px);
    // background-position: 99% 0; /* Se deixar em 100% da bug no Chrome pra PC! */
    // padding-right: calc(#{$textIconCSSs_size} + 4px);
}

a[href^="#"]:not([href="#"]) { // .textIconCSS_chain {
    @include textIconCSSs_notFromGenerator;
    background-image: url('../../images/icons/anchor_chain.svg');

    background-position: 0% 0px;
    padding-left: calc(#{$textIconCSSs_size} + 4px);
    /* background-position: 100% 0;
    padding-right: calc(#{$textIconCSSs_size} + 6px); */
}

a[download] { // .textIconCSS_download {
    @include textIconCSSs_notFromGenerator;
    background-image: url('../../images/icons/anchor_download.svg'); // Não consegui fazer este ícone em SVG

    background-position: 0% 0px;
    padding-left: calc(#{$textIconCSSs_size} + 5px);
    /* background-position: 100% 0px;
    padding-right: calc(#{$textIconCSSs_size} + 3px); */
}

a[href^="mailto:"] {  // .textIconCSS_email {
    @include textIconCSSs_notFromGenerator;
    background-image: url('../../images/icons/anchor_email.svg');

    background-position: 0% 1px;
    padding-left: calc(#{$textIconCSSs_size} + 5px);
    /* background-position: 100% 0;
    padding-right: calc(#{$textIconCSSs_size} + 6px); */
}

a[href^="tel:"] {  // .textIconCSS_phone {
    @include textIconCSSs_notFromGenerator;
    background-image: url('../../images/icons/anchor_phone.svg');

    background-position: 0% 0px;
    padding-left: calc(#{$textIconCSSs_size} + 4px);
    /* background-position: 100% 0;
    padding-right: calc(#{$textIconCSSs_size} + 4px); */
}
 
/*  TODO:            3 ▶ Others
◈──────────────────────────────────────────────────────◈ */

abbr.textIconCSS_interrogation > button { // .textIconCSS_interrogation {
    @include textIconCSSs_notFromGenerator;
    color: blue;
    background-color: hsla(0, 0%, 0%, 0);
    background-image: url('../../images/icons/textIconCSS_interrogation.png');
    background-position: 100% 0;
    padding-right: calc(#{$textIconCSSs_size} + 1px);
    margin-left: 0;
    margin-right: 0;
}

abbr.textIconCSS_interrogation > button:focus {
    outline: 0px dotted DeepSkyBlue;
}
 
/* 
.textIconCSS_popUp { 

    @include textIconCSSs_notFromGenerator;
    
    // background-image: url('../../images/icons/popUp_thin.svg');
    // background-position: 100% 0;
    // background-size: 23px 18px; 

    background-image: url('../../images/icons/popUp.svg');
    background-position: 100% 0;
    background-size: 22px 19px; 
    
    padding-right: calc(#{$textIconCSSs_size} + 8px);   
}
*/

/* @mixin attention{ 
    text-indent: calc(#{$textIconCSSs_size} + 5px);
    @include textIconCSSs_notFromGenerator;
    background-image: url('../../images/icons/attention.svg');
    background-position: 0 3px;    
}

p.attention {
    color: red;
    @include attention;
}

div.attention {

    color: red;

    > p:nth-child(1) {
        @include attention;
    }
} */

/*  
◈──────────────────────────────────────────────────────◈
TODO: Windows
◈──────────────────────────────────────────────────────◈ */

.windows_container {

    display: inline-flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
}

.window_ex {
    
    display: inline-flex;
    justify-content: center;
    align-items: center;
    width: 226px;
    height: 200px;
    padding: 10px;
    margin: $margin_vertical $margin_horizontal;
    font-size: $font_size;
    text-align: center;
    overflow: auto;
}

/*  TODO:    1 ▶ Layouts
◈──────────────────────────────────────────────────────◈ */

.window_highTech, .veryClearBlueBg_and_doubleWhiteBorder { // 

    outline: 1px solid hsla(0, 0%, 100%, 0.4);
    border: 1px solid white;
    border-radius: 22px;
    padding: 3px;
    box-shadow: none;
    filter: drop-shadow(0px 0px 20px rgba(0,0,0,0.16)); 

    background: 
    // imagem anexo origem extensão posição/tamanho repetição cor_de_fundo
    
    url(../../images/windows/veryClearBlueBg_and_doubleWhiteBorder/borderParts/border_tl.svg) scroll content-box content-box no-repeat,
    linear-gradient(to bottom, white 3px, hsla(0, 0%, 100%, 0) 3px) scroll content-box content-box 32px 0/calc(100% - 64px) 32px no-repeat,
    url(../../images/windows/veryClearBlueBg_and_doubleWhiteBorder/borderParts/border_tr.svg) scroll content-box content-box 100% 0 no-repeat,
    linear-gradient(to left, white 3px, hsla(0, 0%, 100%, 0) 3px) scroll content-box content-box 100% 32px/32px calc(100% - 64px) no-repeat,
    url(../../images/windows/veryClearBlueBg_and_doubleWhiteBorder/borderParts/border_bl.svg) scroll content-box content-box 0 100% no-repeat,
    linear-gradient(to top, white 3px, hsla(0, 0%, 100%, 0) 3px) scroll content-box content-box 32px 100%/calc(100% - 64px) 32px no-repeat,
    url(../../images/windows/veryClearBlueBg_and_doubleWhiteBorder/borderParts/border_br.svg) scroll content-box content-box 100% 100% no-repeat,
    linear-gradient(to right, white 3px, hsla(0, 0%, 100%, 0) 3px) scroll content-box content-box 0 32px/32px calc(100% - 64px) no-repeat,
    url(../../images/windows/bg2_transparent.png) content-box content-box repeat, 
    url(../../images/windows/veryClearBlueBg_and_doubleWhiteBorder/bg1_transparent.png) scroll content-box content-box center /100% 100%;

    .highlight {
    
        @extend .windowText_floatingBold_highlight;
    }
}

.window_highTech_2, .veryClearBlueBg_and_doubleWhiteBorder__2 {

    outline: 1px solid hsla(0, 0%, 100%, 0.4);
    border: 1px solid white;
    border-radius: 22px;
    padding: 6px;
    scrollbar-width: thin;
    scrollbar-color: hsl(195, 100%, 92%) hsla(0, 0%, 100%, 0.22);
    box-shadow: none;
    filter: drop-shadow(0px 0px 20px rgba(0,0,0,0.16)); 

    background: 
    // imagem anexo origem extensão posição/tamanho repetição cor_de_fundo
    
    url(../../images/windows/veryClearBlueBg_and_doubleWhiteBorder__2/borderParts/border_tl.svg) scroll padding-box padding-box no-repeat,
    linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 3px, white 3px 6px, hsla(194, 100%, 97%, 0.75) 6px) scroll padding-box padding-box 32px 0/calc(100% - 64px) 9px no-repeat,
    url(../../images/windows/veryClearBlueBg_and_doubleWhiteBorder__2/borderParts/border_tr.svg) scroll padding-box padding-box 100% 0 no-repeat,
    linear-gradient(to left, hsla(0, 0%, 100%, 0) 3px, white 3px 6px, hsla(194, 100%, 97%, 0.75) 6px) scroll padding-box padding-box 100% 32px/9px calc(100% - 64px) no-repeat,
    url(../../images/windows/veryClearBlueBg_and_doubleWhiteBorder__2/borderParts/border_bl.svg) scroll padding-box padding-box 0 100% no-repeat,
    linear-gradient(to top, hsla(0, 0%, 100%, 0) 3px, white 3px 6px, hsla(194, 100%, 97%, 0.75) 6px) scroll padding-box padding-box 32px 100%/calc(100% - 64px) 9px no-repeat,
    url(../../images/windows/veryClearBlueBg_and_doubleWhiteBorder__2/borderParts/border_br.svg) scroll padding-box padding-box 100% 100% no-repeat,
    linear-gradient(to right, hsla(0, 0%, 100%, 0) 3px, white 3px 6px, hsla(194, 100%, 97%, 0.75) 6px) scroll padding-box padding-box 0 32px/9px calc(100% - 64px) no-repeat,
    url(../../images/windows/bg2_transparent.png) padding-box padding-box repeat, 
    url(../../images/windows/veryClearBlueBg_and_doubleWhiteBorder__2/bg1_transparent.png) scroll padding-box padding-box 9px 9px /calc(100% - 18px) calc(100% - 18px) no-repeat;

    .highlight {
    
        @extend .windowText_floatingBold_highlight;
    }
}

.window_hologram, .clearBlueBg_and_clearBlueLight {

    border: 3px solid white;
    border-radius: 19px;
    box-shadow: 0px 0px 8px 4px hsl(195, 100%, 83%);
    background:  
    // imagem anexo origem extensão posição/tamanho repetição cor_de_fundo

    url(../../images/windows/bg2_transparent.png) padding-box padding-box repeat, 
    url(../../images/windows/clearBlueBg_and_clearBlueLight/bg1_transparent.png) scroll padding-box padding-box center /100% 100%;

    .highlight {
    
        @extend .windowText_floatingBold_highlight;
    }
}

.window_neonAurora, .blueBg_and_clearCyanNeonBorder {

    border: 3px solid white;
    border-radius: 19px;
    box-shadow: 0px 0px 9px 5px hsl(179, 100%, 83%);
    background: 
    // imagem anexo origem extensão posição/tamanho repetição cor_de_fundo
    
    url(../../images/windows/blueBg_and_clearCyanNeonBorder/borderParts/border_tl.png) scroll border-box border-box no-repeat,
    url(../../images/windows/blueBg_and_clearCyanNeonBorder/borderParts/border_t.png) scroll border-box border-box 32px 0/calc(100% - 64px) 32px no-repeat,
    url(../../images/windows/blueBg_and_clearCyanNeonBorder/borderParts/border_tr.png) scroll border-box border-box 100% 0 no-repeat,
    url(../../images/windows/blueBg_and_clearCyanNeonBorder/borderParts/border_l.png) scroll border-box border-box 0 32px/32px calc(100% - 64px) no-repeat,
    url(../../images/windows/blueBg_and_clearCyanNeonBorder/borderParts/border_r.png) scroll border-box border-box 100% 32px/32px calc(100% - 64px) no-repeat,
    url(../../images/windows/blueBg_and_clearCyanNeonBorder/borderParts/border_bl.png) scroll border-box border-box 0 100% no-repeat,
    url(../../images/windows/blueBg_and_clearCyanNeonBorder/borderParts/border_b.png) scroll border-box border-box 32px 100%/calc(100% - 64px) 32px no-repeat,
    url(../../images/windows/blueBg_and_clearCyanNeonBorder/borderParts/border_br.png) scroll border-box border-box 100% 100% no-repeat,
    url(../../images/windows/bg2_transparent.png) padding-box padding-box repeat, 
    url(../../images/windows/blueBg_and_clearCyanNeonBorder/bg1_transparent.png) scroll padding-box padding-box center /100% 100%;

    .highlight {
    
        @extend .windowText_floatingBold_highlight;
    }
}

.window_purpleNeonAurora, .clearPurpleBg_and_clearCyanNeonBorder {

    border: 3px solid white;
    border-radius: 19px;
    box-shadow: 0px 0px 9px 5px hsl(179, 100%, 83%);
    background: 
    // imagem anexo origem extensão posição/tamanho repetição cor_de_fundo
    
    url(../../images/windows/clearPurpleBg_and_clearCyanNeonBorder/borderParts/border_tl.png) scroll border-box border-box no-repeat,
    url(../../images/windows/clearPurpleBg_and_clearCyanNeonBorder/borderParts/border_t.png) scroll border-box border-box 32px 0/calc(100% - 64px) 32px no-repeat,
    url(../../images/windows/clearPurpleBg_and_clearCyanNeonBorder/borderParts/border_tr.png) scroll border-box border-box 100% 0 no-repeat,
    url(../../images/windows/clearPurpleBg_and_clearCyanNeonBorder/borderParts/border_l.png) scroll border-box border-box 0 32px/32px calc(100% - 64px) no-repeat,
    url(../../images/windows/clearPurpleBg_and_clearCyanNeonBorder/borderParts/border_r.png) scroll border-box border-box 100% 32px/32px calc(100% - 64px) no-repeat,
    url(../../images/windows/clearPurpleBg_and_clearCyanNeonBorder/borderParts/border_bl.png) scroll border-box border-box 0 100% no-repeat,
    url(../../images/windows/clearPurpleBg_and_clearCyanNeonBorder/borderParts/border_b.png) scroll border-box border-box 32px 100%/calc(100% - 64px) 32px no-repeat,
    url(../../images/windows/clearPurpleBg_and_clearCyanNeonBorder/borderParts/border_br.png) scroll border-box border-box 100% 100% no-repeat,
    url(../../images/windows/bg2_transparent.png) padding-box padding-box repeat, 
    url(../../images/windows/clearPurpleBg_and_clearCyanNeonBorder/bg1_transparent.png) scroll padding-box padding-box center /100% 100%;

    .highlight {
    
        @extend .windowText_floatingBold_highlight;
    }
}

.window_skyContrast {

    $BCIS: 18px; // BCIS <=> Border corners imgs size (tamanho das imagens dos cantos da borda). Fiz nos tamanhos de 18px (SVG) e 32px (raster).
    $skyContrast_border_width: 5px;
    $bg_skyContrast_border_1: hsl(198, 100%, 74%);
    $bg_skyContrast_border_2: white;

    border: $skyContrast_border_width solid hsla(0, 0%, 0%, 0);
    border-radius: 15px; // Colocar mais que 15px buga.
    background:
    // imagem anexo origem extensão posição/tamanho repetição cor_de_fundo 
    
    url(../../images/windows/skyContrast/borderParts/#{$BCIS}/border_tl.svg) scroll border-box no-repeat,
    linear-gradient(to right, /* white, Black */ $bg_skyContrast_border_1, $bg_skyContrast_border_2) border-box #{$BCIS} 0/calc(100% - (2 * #{$BCIS})) $skyContrast_border_width no-repeat,
    url(../../images/windows/skyContrast/borderParts/#{$BCIS}/border_tr.svg) scroll border-box 100% 0 no-repeat,
    linear-gradient(to bottom, /* Black, white */ $bg_skyContrast_border_2, $bg_skyContrast_border_1) border-box 100% #{$BCIS}/#{$skyContrast_border_width} calc(100% - (2 * #{$BCIS})) no-repeat,
    url(../../images/windows/skyContrast/borderParts/#{$BCIS}/border_br.svg) scroll border-box 100% 100% no-repeat,
    linear-gradient(to left, /* white, Black */ $bg_skyContrast_border_1, $bg_skyContrast_border_2) border-box #{$BCIS} 100%/calc(100% - (2 * #{$BCIS})) $skyContrast_border_width no-repeat,
    url(../../images/windows/skyContrast/borderParts/#{$BCIS}/border_bl.svg) scroll border-box 0 100% no-repeat,
    linear-gradient(to top, /* Black, white */ $bg_skyContrast_border_2, $bg_skyContrast_border_1) border-box 0 #{$BCIS}/#{$skyContrast_border_width} calc(100% - (2 * #{$BCIS})) no-repeat, 

    linear-gradient(to bottom right, hsla(0, 0%, 100%, 0.85), hsla(198, 100%, 74%, 0.85), hsla(0, 0%, 100%, 0.85)) padding-box;
    
    // box-shadow: 6px 6px 24px -14px black; // Criar a sombra usando 'box-shadow' buga no canto inferior direito da caixa.
    filter: drop-shadow(6px 6px 9px hsla(0, 0%, 0%, 0.26));

    .highlight {
    
        @extend .windowText_smooth_highlight;
    }
}

.window_skyContrast2 {

    $skyContrast_border_width: 5px;
    $bg_skyContrast_border_1: hsl(198, 100%, 74%);
    $bg_skyContrast_border_2: white;

    color: $color_text_window;
    border: $skyContrast_border_width solid hsla(0, 0%, 100%, 0);
    // border-radius: 19px;
    background:
    
    linear-gradient(to right, $bg_skyContrast_border_1, $bg_skyContrast_border_2) border-box top/100% $skyContrast_border_width no-repeat,
    linear-gradient(to bottom, $bg_skyContrast_border_2, $bg_skyContrast_border_1) border-box right/$skyContrast_border_width 100% no-repeat,
    linear-gradient(to left, $bg_skyContrast_border_1, $bg_skyContrast_border_2) border-box bottom/100% $skyContrast_border_width no-repeat,
    linear-gradient(to top, $bg_skyContrast_border_2, $bg_skyContrast_border_1) border-box left/$skyContrast_border_width 100% no-repeat, 

    linear-gradient(to bottom right, hsla(0, 0%, 100%, 0.85), hsla(198, 100%, 74%, 0.85), hsla(0, 0%, 100%, 0.85)) padding-box;
    
    box-shadow: 6px 6px 24px -14px black;
    // filter: drop-shadow(6px 6px 9px rgba(0,0,0,0.28));

    .highlight {
    
        @extend .windowText_smooth_highlight;
    }
}

.window_blackScreen {

    border: 6px ridge hsl(0, 0%, 83%); 
    background: 
    linear-gradient(to bottom right, hsla(0, 0%, 100%, 0) 50%, black 50%), // Canto direito inferior
    linear-gradient(to bottom left, hsla(0, 0%, 100%, 0.35) 0%, hsla(0, 0%, 0%, 0) 95%), // Canto esquerdo superior
    black;

    .highlight {
    
        @extend .windowText_blueNeon_highlight;
    }
}

.window_blueToCyanVertical {

    border-radius: 25px;
    box-shadow: 6px 6px 13px 0px hsla(0, 0%, 0%, 0.26);
    background: linear-gradient(to right, hsl(201, 100%, 50%), hsl(193, 100%, 78%), hsl(201, 100%, 50%));

    .highlight {
    
        @extend .windowText_floatingHeavy_highlight;
    }
}

/* .clearBlueBg_and_clearDeepskyblueNeonBorder {

    border: 3px solid white;
    border-radius: 19px;
    scrollbar-width: thin;
    scrollbar-color: hsl(195, 100%, 100%) hsla(0, 0%, 100%, 0.48);
    box-shadow: 0px 0px 8px 4px hsl(195, 100%, 83%);
    background: 
    // imagem anexo origem extensão posição/tamanho repetição cor_de_fundo
    
    url(../../images/windows/clearBlueBg_and_clearDeepskyblueNeonBorder/borderParts/border_tl.png) scroll border-box border-box no-repeat,
    url(../../images/windows/clearBlueBg_and_clearDeepskyblueNeonBorder/borderParts/border_t.png) scroll border-box border-box 32px 0/calc(100% - 64px) 32px no-repeat,
    url(../../images/windows/clearBlueBg_and_clearDeepskyblueNeonBorder/borderParts/border_tr.png) scroll border-box border-box 100% 0 no-repeat,
    url(../../images/windows/clearBlueBg_and_clearDeepskyblueNeonBorder/borderParts/border_l.png) scroll border-box border-box 0 32px/32px calc(100% - 64px) no-repeat,
    url(../../images/windows/clearBlueBg_and_clearDeepskyblueNeonBorder/borderParts/border_r.png) scroll border-box border-box 100% 32px/32px calc(100% - 64px) no-repeat,
    url(../../images/windows/clearBlueBg_and_clearDeepskyblueNeonBorder/borderParts/border_bl.png) scroll border-box border-box 0 100% no-repeat,
    url(../../images/windows/clearBlueBg_and_clearDeepskyblueNeonBorder/borderParts/border_b.png) scroll border-box border-box 32px 100%/calc(100% - 64px) 32px no-repeat,
    url(../../images/windows/clearBlueBg_and_clearDeepskyblueNeonBorder/borderParts/border_br.png) scroll border-box border-box 100% 100% no-repeat,
    url(../../images/windows/bg2_transparent.png) padding-box padding-box repeat, 
    url(../../images/windows/clearBlueBg_and_clearDeepskyblueNeonBorder/bg1_transparent.png) scroll padding-box padding-box center /100% 100%;
} */

/*  TODO:    1 ▶ Texts
◈──────────────────────────────────────────────────────◈ */

.windowText_smooth {

    color: $color_text_window;
    font-weight: normal;
    filter: drop-shadow(0px 0px 2px hsl(193, 0%, 30%));
}

.windowText_floatingBold {

    color: $color_text_window;
    font-weight: bold;
    text-shadow: 0px 0px 1px hsl(195, 100%, 20%); // Contornos em textos.
    filter: drop-shadow(3px 3px 1px hsla(0, 0%, 0%, 0.15)); // Sombras em textos e em imagens.
}

.windowText_floatingHeavy {

    color: $color_text_window;
    font-weight: bold;
    text-shadow: 0px 0px 2.5px hsl(195, 0%, 30%); // Contornos em textos.
    filter: drop-shadow(3px 3px 1px hsla(0, 0%, 0%, 0.15)); // Sombras em textos e em imagens.
}

.windowText_blueNeon {

    color: white;
    font-weight: normal;
    filter: drop-shadow(0px 0px 3px hsl(188, 100%, 50%)); 
    text-shadow: 0px 0px 7px hsl(188, 100%, 50%), 0px 0px 7px hsla(188, 100%, 50%, 0.55);
}

//····································································◈ Highlights

.windowText_smooth_highlight {

    color: yellow;
    text-shadow: 0.45px 0.45px adjust-color(yellow, $lightness: -20%);
}

.windowText_floatingBold_highlight {

    color: adjust-color(yellow, $lightness: +13%);
    text-shadow: 0px 0px 1px adjust-color(yellow, $lightness: -37%); // Contornos em textos.
}

.windowText_floatingHeavy_highlight {

    color: yellow;
    text-shadow: 
    0px 0px 1px black, // Contornos em textos.
    // 0px 0px 4px adjust-color(yellow, $lightness: -10%)
    ;
}

.windowText_blueNeon_highlight {

    //··································◈ Tentaviva 1
    
    // color: white;
    // filter: drop-shadow(0px 0px 3px adjust-color(yellow, $lightness: +10%)); 
    // text-shadow: 
    // 0px 0px 1px adjust-color(yellow, $lightness: -32%),
    // 0px 0px 7px adjust-color(yellow, $lightness: +10%),
    // 0px 0px 7px adjust-color(yellow, $lightness: +10%, $alpha: -0.4);

    //··································◈ Tentaviva 2
    
    font-style: italic;
    // text-decoration: underline;
    color: white;
    // filter: drop-shadow(0px 0px 3px hsl(188, 100%, 50%)); 
    text-shadow: 
    0px 0px 7px hsl(188, 100%, 50%), 
    0px 0px 7px hsl(188, 100%, 50%), 
    0px 0px 7px hsla(188, 100%, 50%, 0.5);
}

.window_highTech, 
.window_hologram, 
.window_neonAurora, 
.window_purpleNeonAurora,
.window_blueToCyanVertical {

    .rainbow {
        text-shadow: initial;
        filter: drop-shadow(0px 0px 1px adjust-color(black, $lightness: +24%));
    }
}

.window_blackScreen {

    .rainbow {
        text-shadow: initial;
    }
}

/*  TODO:    1 ▶ Scrollbars
◈──────────────────────────────────────────────────────◈ */

//····································································◈ High Tech

.window_highTech, .veryClearBlueBg_and_doubleWhiteBorder {

    @if($enableAlternativeScrollbarStyle == true){
        
        & {
            scrollbar-width: thin; 
            scrollbar-color: hsl(195, 100%, 92%) hsla(0, 0%, 100%, 0.25);
        }
    }

    &::-webkit-scrollbar { // Entire bar

        width: 14px;
        height: 14px;
    }

    &::-webkit-scrollbar-thumb { // Bar pointer

        outline: 1px solid white;
        border: 2px solid hsla(0, 0%, 100%, 0);
    
        box-shadow: inset 0px 0px 0px 1px white;
        background: content-box hsl(198, 100%, 89%);
        background: content-box hsl(195, 100%, 92%);   
    }

    &::-webkit-scrollbar-thumb:hover { // Bar pointer

        background: content-box hsl(198, 100%, 91%); 
        background: content-box hsl(195, 100%, 95%);
    }

    &::-webkit-scrollbar-track {   // Bar background

        border: 0;
        background: transparent; 
    }

    &.menuList::-webkit-scrollbar-track { // Bar background

        // border-left: 1px solid white;
        border-radius: 1000px; 
        background-color: hsla(0, 0%, 100%, 0.25);
    }
}

//····································································◈ Hologram

.window_hologram, .clearBlueBg_and_clearBlueLight {

    @if($enableAlternativeScrollbarStyle == true){
        
        & {
            scrollbar-width: thin;
            scrollbar-color: white hsla(0, 0%, 100%, 0.22);
        }
    }

    &::-webkit-scrollbar { // Entire bar
    
        width: 15px;
        height: 15px;
    }

    &::-webkit-scrollbar-thumb { // Bar pointer  
    
        box-shadow: inset 0px 0px 0px 1px hsla(0, 0%, 100%, 0.9 /* 0.6 */); 
        background-color: white;
    }

    &::-webkit-scrollbar-track { // Bar background

        border: 0;
    }

    &.menuList::-webkit-scrollbar-track { // Bar background

        border-top: 1px solid white;
        border-left: 1px solid white;
        border-radius: 1000px; 
        background: hsla(0, 0%, 100%, 0.13);
    }
}

//····································································◈ Neon Aurora

.window_neonAurora, .blueBg_and_clearCyanNeonBorder {

    @if($enableAlternativeScrollbarStyle == true){
        
        & {
            scrollbar-width: thin;
            scrollbar-color: hsl(195, 100%, 74%) hsla(0, 0%, 100%, 0.3);
        }
    }

    &::-webkit-scrollbar { // Entire bar
    
        width: 15px;
        height: 15px;
    }

    &::-webkit-scrollbar-thumb { // Bar pointer  
    
        box-shadow: inset 0px 0px 0px 1px hsla(0, 0%, 100%, 0.8);
        $delta_deg: 51deg;
    
        background:
        linear-gradient(calc(217deg + #{$delta_deg}), hsla(195, 100%, 58%, 0.8), hsla(195, 100%, 50%, 0) 71%),
        linear-gradient(calc(127deg + #{$delta_deg}), hsla(0, 0%, 100%, 0.8), hsla(0, 0%, 100%, 0) 71%),
        linear-gradient(calc(336deg + #{$delta_deg}), hsla(120, 100%, 88%, 0.8), hsla(190, 100%, 80%, 0) 71%);

        background-color: white;
    }

    &::-webkit-scrollbar-thumb:hover { // Bar pointer hover
    
        $delta_deg: 51deg;
    
        background:
        linear-gradient(calc(217deg + #{$delta_deg}), hsla(195, 100%, 76%, 0.8), hsla(195, 100%, 50%, 0) 71%),
        linear-gradient(calc(127deg + #{$delta_deg}), hsla(0, 0%, 100%, 0.85), hsla(0, 0%, 100%, 0) 71%),
        linear-gradient(calc(336deg + #{$delta_deg}), hsla(120, 100%, 92%, 0.8), hsla(190, 100%, 80%, 0) 71%);

        background-color: white;
    }

    &::-webkit-scrollbar-track { // Bar background

        border: 0;
    }

    &.menuList::-webkit-scrollbar-track { // Bar background

        border-top: 1px solid white;
        border-left: 1px solid white;
        border-radius: 1000px; 
        background: hsla(0, 0%, 100%, 0.28);
    }
}

//····································································◈ Purple Neon Aurora

.window_purpleNeonAurora, .clearPurpleBg_and_clearCyanNeonBorder {

    @if($enableAlternativeScrollbarStyle == true){
        
        & {
            scrollbar-width: thin;
            scrollbar-color: hsl(232, 84%, 84%) /* hsla(300, 100%, 25%, 0.25) */ hsla(0, 0%, 100%, 0.35); 
        }
    }

    &::-webkit-scrollbar { // Entire bar
    
        width: 15px;
        height: 15px;
    }

    &::-webkit-scrollbar-thumb { // Bar pointer  
    
        box-shadow: inset 0px 0px 0px 1px hsla(0, 0%, 100%, 0.8);
        $delta_deg: 51deg;
    
        background:
        linear-gradient(calc(217deg + #{$delta_deg}), hsla(232, 84%, 76%, 0.8), hsla(195, 100%, 50%, 0) 71%),
        linear-gradient(calc(127deg + #{$delta_deg}), hsla(0, 0%, 100%, 0.8), hsla(0, 0%, 100%, 0) 71%),
        linear-gradient(calc(336deg + #{$delta_deg}), hsla(120, 100%, 85%, 0.8), hsla(190, 100%, 80%, 0) 71%);

        background-color: white;
    }

    &::-webkit-scrollbar-thumb:hover { // Bar pointer hover
    
        $delta_deg: 51deg;
    
        background:
        linear-gradient(calc(217deg + #{$delta_deg}), hsla(232, 84%, 86%, 0.8), hsla(195, 100%, 50%, 0) 71%),
        linear-gradient(calc(127deg + #{$delta_deg}), hsla(0, 0%, 100%, 0.85), hsla(0, 0%, 100%, 0) 71%),
        linear-gradient(calc(336deg + #{$delta_deg}), hsla(120, 100%, 90%, 0.8), hsla(190, 100%, 80%, 0) 71%);

        background-color: white;
    }

    &::-webkit-scrollbar-track { // Bar background

        border: 0;
    }

    &.menuList::-webkit-scrollbar-track { // Bar background

        border-top: 1px solid white;
        border-left: 1px solid white;
        border-radius: 1000px; 
        background: hsla(0, 0%, 100%, 0.3);
    }
}

//····································································◈ Sky Contrast

.window_skyContrast {

    @if($enableAlternativeScrollbarStyle == true){
        
        & {
            scrollbar-width: auto;
            scrollbar-color: hsl(195, 100%, 100%) hsla(194, 100%, 50%, 0.1);  
        }
    }

    &::-webkit-scrollbar { // Entire bar
    
        width: 15px;
        height: 15px;
    }

    &::-webkit-scrollbar-thumb { // Bar pointer  
    
        // box-shadow: 0px 0px 6px 0px hsla(0, 0%, 0%, 0);
        box-shadow: inset 0px 0px 0px 1px hsla(0, 0%, 100%, 0.7);

        background-color: white;
    }

    &::-webkit-scrollbar-track { // Bar background

        border: 0;
    }

    &.menuList::-webkit-scrollbar-track { // Bar background

        border-top: 1px solid white;
        border-left: 1px solid white;
        border-radius: 1000px; 
        background: hsla(0, 0%, 100%, 0.25);
        background: radial-gradient(circle at 100% 100%, hsla(0, 0%, 100%, 0.25), hsla(0, 0%, 100%, 0.53));
    }
}

//····································································◈ Black Screen

.window_blackScreen {

    @if($enableAlternativeScrollbarStyle == true){
        
        & {
            scrollbar-width: thin;
            scrollbar-color: white hsla(0, 0%, 100%, 0);
        }
    }

    &::-webkit-scrollbar { // Entire bar
    
        width: 15px;
        height: 15px;
    }

    &::-webkit-scrollbar-track { // Bar background

        border: 0;
    }

    &::-webkit-scrollbar-thumb { // Bar pointer  #00ddff, 0px 0px 7px rgba(0, 221, 255, 0.55);

        $color_hue: 188;
        $color_hue: 192;
        $color_hue: 194;
    
        outline: 1px solid hsla($color_hue, 100%, 50%, 0.25);
        border: 1px solid hsl($color_hue, 100%, 25%);

        box-shadow: 
        inset 0px 0px 0px 1px hsl($color_hue, 100%, 30%),
        inset 0px 0px 4px 1px hsl($color_hue, 100%, 40%),
        inset 0px 0px 4px 3px hsl($color_hue, 100%, 50%),
        inset 0px 0px 0px 30px white;
    
        background: 0;
    }
}

//····································································◈ Blue to Cyan Vertical

.window_blueToCyanVertical {

    @if($enableAlternativeScrollbarStyle == true){
        
        & {
            scrollbar-width: thin;
            scrollbar-color: white /* hsl(195, 94%, 87%) */ hsla(0, 0%, 100%, 0.22);
        }
    }

    &::-webkit-scrollbar { // Entire bar
    
        width: 14px;
        height: 14px;
    }

    &::-webkit-scrollbar-track { // Bar background

        border: 0;
    }

    &.menuList::-webkit-scrollbar-track { // Bar background

        border: 1px solid white;
        border-radius: 1000px; 
        background: hsla(0, 0%, 100%, 0.4);
    }

    &::-webkit-scrollbar-thumb { // Bar pointer 
        
        // background: radial-gradient(hsl(193, 100%, 78%), hsl(201, 100%, 50%));
        background: radial-gradient(hsl(198, 100%, 100%), hsl(201, 100%, 60%));
        // background: radial-gradient(hsl(198, 100%, 90%), hsl(201, 100%, 50%));
        box-shadow: inset 0px 0px 0px 1px hsl(201, 100%, 68%);
    }

    &::-webkit-scrollbar-thumb:hover { // Bar pointer hover

        background: radial-gradient(hsl(198, 100%, 100%), hsl(201, 100%, 74%));
        box-shadow: inset 0px 0px 0px 1px hsl(201, 100%, 76%);
    }
}

/*  
◈──────────────────────────────────────────────────────◈
TODO: Layout Sections
◈──────────────────────────────────────────────────────◈ */

/*  TODO:    1 ▶ Central
◈──────────────────────────────────────────────────────◈ */

.central {
    max-width: $central_maxWidth; 
    margin-left: auto;
    margin-right: auto;
}

/*  TODO:    1 ▶ Header
◈──────────────────────────────────────────────────────◈ */

$headerBgColor: 1; // Valores: 1 ou 2.
$headerFloating: true;

header {

    height: $button_height;
    font-weight: bold;

    // filter: drop-shadow(4px 4px 5px hsla(0, 0%, 0%, 0.16)); // A transição faz com que a sombra de 'filter' suma no final da animação no iPhone.
    box-shadow: 5px 5px 9px 0px hsla(0, 0%, 0%, 0.16);
    box-shadow: 4px 4px 10px 0px hsla(0, 0%, 0%, 0.16);
    
    @if($headerFloating == true) {

        border-top: 1px solid hsl(195, 100%, 67%);
        width: calc(100% - (2 * #{$margin_horizontal}));
        max-width: calc(#{$central_maxWidth}/*  - (2 * #{$margin_horizontal}) */);
        padding: 0 8px;
        border-radius: 1000px;
        margin-top: calc(#{$button_height} / 2);
        margin-left: auto;
        margin-right: auto;
    }
    
    @if($headerBgColor == 1) {

        border-bottom: 1px solid hsl(195, 100%, 67%);
        background: url(../../images/bgs/clearBlue.png) center /100% 100%;
        // background: linear-gradient(to bottom, white, hsla(0, 0%, 100%, 0.6) 52%, hsla(0, 0%, 100%, 0) 52%), 
        //     linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.7), white), 
        //     linear-gradient(to bottom, hsl(195, 100%, 64%), hsl(195, 100%, 48%), hsl(195, 100%, 50%)), 
        //     deepskyblue;
        // background: linear-gradient(to bottom, hsl(197,100%,78%) 0%,hsl(200,100%,76%) 10%,hsl(203,100%,71%) 25%,hsl(204,100%,72%) 37%,hsl(204,100%,73%) 50%,hsl(203,100%,67%) 51%,hsl(202,100%,76%) 83%,hsl(198, 100%, 84%) 100%); 

    } @else {

        border: 0;
        background: 
        linear-gradient(to bottom, white, hsla(0, 0%, 100%, 0.6) 52%, hsla(0, 0%, 100%, 0) 52%), 
        linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.7), white), 
        linear-gradient(to bottom, hsl(195, 100%, 64%), hsl(195, 100%, 48%), hsl(195, 100%, 50%)), 
        deepskyblue;
        outline: 1px solid hsl(195, 100%, 60%); // hsl(195, 93%, 65%);
    }

    h1 {
        height: inherit;
        margin: 0;
        font-size: 19rem;

        // Declarações que desfazem BG como cor de texto:

        background: 0;
        -webkit-background-clip: border-box;
        -webkit-text-fill-color: currentcolor;
        background-clip: border-box;
        text-fill-color: currentcolor; 

        a {
            display: inline-flex;
            align-items: center;
            height: inherit;
            padding: 0 8px;
            // line-height: 48px;
            filter: drop-shadow(3px 3px 1px hsla(0, 0%, 0%, 0.15)); // Sombras

            img {
                width: 22px;
                margin-bottom: 3px;
                margin-right: 7px;
                filter: drop-shadow(0px 0px 1px hsla(0, 0%, 0%, 0.3));
            }

            span {
                margin-bottom: 4px;
                color: $color_text_window;
                text-shadow: 0px 0px 1px hsla(195, 100%, 22%, 1); // Contornos nos textos
            }
        }
    }
}

header {

    position: relative;
    top: calc((-2 * #{$button_height}));
    z-index: $zIndex_header;
    transition: top 1s 0.3s;
}

header.show {
    
    top: 0;
}

/*  TODO:    1 ▶ Navigation
◈──────────────────────────────────────────────────────◈ */

nav {
    display: none; 
    position: fixed;
    z-index: $zIndex_nav;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    // Usar 'right: 0' e 'bottom: 0' ao invés de 'width: 100vw' e 'height: 100vh' para este elemento cobrir a tela inteira 
    // evita que a barra de ferramentas inferior dos navegadores móveis sobreponha a janela do menu de navegação.

    .box {

        display: flex; 
        justify-content: center;
        align-items: center;
        height: 100%;
        border: 1px solid hsla(0, 0%, 0%, 0); // Bug fix: Não sei explicar o bug.

        > ul {
            max-width: calc(100% - (2 * #{$button_height}));
            max-height: calc(100% - (2 * #{$button_height}));
            margin: 0;
        }
    }
}

/*  TODO:        2 ▶ Button That Opens Navigation
◈──────────────────────────────────────────────────────◈ */

button.button_icon.nav_openBtn {
    display: none;
}

.nav_openBtn {
    
    position: fixed !important;
    bottom: calc((-1 * #{$size_nav_openBtn}) - 2px);
    left: calc((100% / 2) - (#{$size_nav_openBtn} / 2));
    z-index: $zIndex_nav;
    margin: 0;
    filter: drop-shadow(5px 5px 3px rgba(0, 0, 0, 0.13));
    transition-property: bottom;
    transition-delay:  0.3s;
} 
 
.nav_openBtn.show {
    
    bottom: $offset_nav_openBtn_show;
}

.nav_openBtn.on {

    background: $bg_element_type_button_clear_blue; // <- Propriedade aplicada aprimorada via JS.
        
    box-shadow:$box_shadow_element_type_button_clear_blue; // <- Propriedade aplicada aprimorada via JS.

    .piece_icon {

        filter: $filter_element_type_button_piece_icon_clear_blue; 
    }
}

.nav_openBtn_base {

    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: $zIndex_nav_openBtn_base;

    background: // imagem anexo origem extensão posição/tamanho repetição cor_de_fundo

    linear-gradient(to right, change-color($color_theme, $alpha: 0), $color_theme, change-color($color_theme, $alpha: 0)) 
    center calc(100% - (#{$offset_nav_openBtn_show} / 2)) / 320px 1px no-repeat; 

    // background-color: hsla(0, 0%, 0%, 0.05);
}

/*  TODO:    1 ▶ Footer
◈──────────────────────────────────────────────────────◈ */

.footer_content {

    width: 100%;
    margin-top: calc(2 * #{$margin_vertical});

    address {

        width: 100%;
    }

    .footer_icons {

        /* footer anterior:

        display: flex;
        justify-content: space-evenly;
        align-items: center; 
        
        width: calc(100% - (2 * #{$margin_horizontal}));
        height: 48px;
        border-radius: 50px;
        padding-top: 2px;
        margin-left: auto;
        margin-right: auto; 
        background: $bg_footer_icons;
        box-shadow: 3px 3px 6px 0px $color_shadow_footer;
        list-style-type: none;
 
        li, a {
        
            height: 40px !important;
        }

        li + li {
            margin-top: 0;
        }
        
        img {
        
            padding: 5px;
            border: 2px solid $color_text_window;
            border-radius: 50%;
            filter: drop-shadow(1px 1px 1px $color_shadow_footer_icons); 
        } 

        // Não apage esta regra comentada:
        // @media (min-width: calc(#{$central_maxWidth} + (2 * #{$margin_horizontal}))) { 

        //     width: 100%;
        // }

        // Footer-icons em smartphone - paisagem:

        @media (max-height: $screen_small_widthLimit) {

            width: calc(100% - 16px);
        }
        */
        
        // footer novo:

        width: calc(100% - (2 * #{$margin_horizontal})); 
        padding: 0;
        margin-left: auto;
        margin-right: auto; 
        margin-bottom: 0; 
        list-style-type: none;
        text-align: center;

        li {
            display: inline-block;
        } 
        
        > li::before { 
            content: "" 
        }

        li + li {
            margin-top: 0;
        }

        a {
            width: 58px;
            height: 58px;
            color: #000000; 
            margin: 0;
            margin-bottom: $margin_vertical; 
        }

        /* Configuração para 4 ícones: */

        @media (min-width: 0px) {

            display: flex;
            justify-content: space-between;

            max-width: 292px; // 4 * 58 + 3 * 20

            li + li { margin-left: 0; } 
            li:nth-last-of-type(1) { margin-right: 0; } 
        }
         
        /* Configuração para 5 ícones:

        @media (min-width: 0px) { 
            
            $li_margin_horizontal: 20px;

            li + li { margin-left: $li_margin_horizontal; } 
            li:nth-last-of-type(1) { margin-right: $li_margin_horizontal; } 
        } 

        @media (min-width: 362px) {

            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;

            max-width: 370px; // 5 * 58 + 4 * 20

            li + li { margin-left: 0; } 
            li:nth-last-of-type(1) { margin-right: 0; } 
        }
        */
    }

    /* footer anterior:

    @media (max-height: $screen_small_widthLimit) {

        max-width: none !important; 
    }
    */

    .copyright {

        margin-top: 0; // Retirar para o footer anterior. 
        font-size: $font_smaller;
        text-indent: 0;
        text-align: center;

        // padding: 6px 0;
        // margin: 14px 0 0;
        // color: $color_text_window;
        // background-color: black;


        // background: // imagem anexo origem extensão posição/tamanho repetição cor_de_fundo

        // linear-gradient(to right, hsla(195, 100%, 50%, 0), deepSkyBlue, hsla(195, 100%, 50%, 0)) 
        // center 100% /90% 1px no-repeat; 
    }
}


/*  TODO:    1 ▶ Classes
◈──────────────────────────────────────────────────────◈ */

.nav_expanded_sub_options_h {
    @media (min-width: $nav_expand) {
        
        overflow-x: auto;
        white-space: nowrap;
        font-size: 0;

        li {
            display: inline-block;
            border-width: 0 !important;

            /*> a {
                display: inline-flex;
                flex-direction: column;
            }*/
        }
    }
}

.nav_sub_options_text_below { // Serve para ambos os modos horizontal e vertical das sub opções.
    li > a {
        display: inline-flex;
        flex-direction: column;
    }
}

.nav_compact_sub_options_text_below { // Serve para ambos os modos horizontal e vertical das sub opções.

    @media (max-width: $nav_expand) {
        li > a {
            display: inline-flex;
            flex-direction: column;
        }
    }
}

.nav_expanded_sub_options_text_below { // Serve para ambos os modos horizontal e vertical das sub opções.

    @media (min-width: $nav_expand) {
        li > a {
            display: inline-flex;
            flex-direction: column;
        }
    }
}

/*  
◈──────────────────────────────────────────────────────◈
TODO: Multimedia
◈──────────────────────────────────────────────────────◈ */

.textIconHTML {
    max-width: 19px !important;
    margin-bottom: -3px;
}

figcaption {
    margin-top: calc(#{$margin_vertical}/2); 
    text-align: center;
    font-size: $font_small;  
}

audio {
    height: 45rem;
    display: block;
    max-width: calc(100vw - 2 * #{$margin_horizontal});
    margin-top: $margin_vertical;
    margin-bottom: $margin_vertical;
}

/*  
◈──────────────────────────────────────────────────────◈
TODO: Tables
◈──────────────────────────────────────────────────────◈ */

table {
    max-width: calc(100% - 2 * #{$margin_horizontal});
    margin: $margin_vertical auto;
    border: $table_border1_width solid $color_theme;
    border-collapse: collapse;
    caption-side: bottom;
    font-weight: normal;
    line-height: 1.15; // Bug fix: Evita que as linhas da tabela fiquem muito altas quando estiver dentro de um codeEx.

    th {
        color: $color_theme;
        // background-color: hsl(193,100%,98%);
        border: $table_border1_width solid $color_theme;
        font-weight: bold;
        text-transform: capitalize;

        /*@media (max-width: $screen_small_widthLimit), (max-height: $screen_small_widthLimit) {
            
            font-weight: bold; 
        }*/
    }

    tr:hover {  

        @media (pointer: fine) {
            
            background: $bg_table_tr_hover;
        }
    }

    tr:nth-of-type(1):hover {
        background: 0;
    }

    tr + tr {
        border-top: $table_border2_width solid $color_border_table;
    }

    td + td {
        border-left: $table_border2_width solid $color_border_table;
    }

    th, td {
        padding: 7px 11px; 
    }

    td {
        text-align: center;
    }

    caption {
        margin-top: calc(#{$margin_vertical}/2); 
        @extend .font_smaller;
    }

    ul, ol { /* <- Regra para caso tenha lista na tabela. */
        padding-left: 27rem;
        margin: 0;
    }
}
/*
table.type_1 {
     Estilo padrão. 
}
*/

table.type_2 {

    width: 100%;
    max-width: none;
    border-width: 0;
    border-bottom: $table_border1_width solid $color_theme;

/*     tr :nth-child(1) {
        font-weight: bold;
    } */

    tr:nth-of-type(1) {
        border-bottom: $table_border1_width solid $color_theme;
    }

    tr:not(:nth-of-type(1)):hover {  

        @media (pointer: fine) {
            
            background: $bg_table_tr_hover_2;
        }
    }

    th {
        border-width: 0;
    }

/*     
    th:nth-child(1) {
        color: $color_text;
    }
 */

    td + td {
        border-width: 0;
    }
}

@media (min-width: $screen_small_widthLimit) {
    table.type_2 {
        width: auto;
        max-width: calc(100% - 2 * #{$margin_horizontal});
    }
}

table.type_3 {

    width: 100%;
    max-width: none;
    border-width: 0;
    border-bottom: $table_border1_width solid $color_theme;

/*     tr :nth-child(1) {
        font-weight: bold;
    } */

    tr:nth-of-type(1) {
        border-top: $table_border1_width solid $color_theme;
    }

    tr:hover {  

        @media (pointer: fine) {
            
            background: $bg_table_tr_hover_2;
        }
    }

    th {
        border-width: 0;
    }

/*     
    th:nth-child(1) {
        color: $color_text;
    }
 */

    td + td {
        border-width: 0;
    }
}

@media (min-width: $screen_small_widthLimit) {
    table.type_3 {
        width: auto;
        max-width: calc(100% - 2 * #{$margin_horizontal});
    }
}

table.type_4 {
    border-width: 0;

    /*tr:hover {
        outline: 1px solid $color_theme;
    }

    tr:nth-of-type(1):hover {
        background: $bg_table_tr_hover;
    }*/

    tr:hover {
        background: 0; 
    }

    tr + tr {
        border-width: 0;
    }

    th {
        border-width: 0;
        text-align: left;
    }
}

/*----- table.type_5 -----*/ 

@media (min-width: 0) and (max-width:  $screen_small_widthLimit) {
    table.type_5 {
        border-width: 0;
        margin-left: calc(2 * #{$margin_horizontal});
        margin-right: calc(2 * #{$margin_horizontal});

        tr {
            border-width: 0;
            margin-bottom: $margin_vertical;
        }

        tr:hover {
            background: 0;
        }

        tr, th, td {
            display: block;
        }

        th {
            border-width: 0;
            border-bottom: $table_border1_width solid $color_theme;
            text-align: center;
        }

        td {
            text-align: left;
        }

        td:nth-of-type(1) {
            margin-top: 16rem;
        }

        li + li {
            margin-top: 20rem;
        }
    }
}

@media (min-width: $screen_small_widthLimit) {
    table.type_5 {
        border-width: 0;

        tr {
            border-width: 0;
        }

        tr:hover {
            background: 0;
        }

        th, td {
            border-width: 0;
        }

        td {
            text-align: left;
        }
    }
} 

/*  
◈──────────────────────────────────────────────────────◈
TODO: Forms
◈──────────────────────────────────────────────────────◈ */


/*  TODO:    1 ▶ fieldset e label
◈──────────────────────────────────────────────────────◈ */

/*form {
    margin: $margin_vertical auto;
}*/

fieldset {
    border-width: 0;
    padding: 0;
    margin: 0;
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal;

    strong {
        text-decoration: none;
    }
}

label {
    display: block;
    @extend %margins;

    strong {
        text-decoration: none;
    }
}

fieldset:disabled label {
    color: $color_text_clear;
}


/*  TODO:    1 ▶ Widgets
◈──────────────────────────────────────────────────────◈ */
 

/*  TODO:        2 ▶ inputs e textarea
◈──────────────────────────────────────────────────────◈ */

input[type="text"], input[type="email"], textarea {

    color: $color_text_form;
    width: calc(100% - 40px); 
    min-height: $button_height_small;
    border: 1px solid $color_border_form; 
    margin-top: $margin_vertical;
    margin-left: 20px;
    margin-right: 20px;
    border-radius: $border_radius_default;
    /* border: 1px solid hsl(0, 0%, 93%); 
    filter: drop-shadow(0px 6px 9px hsla(0, 0%, 0%, 0.18)); <- Traz inconsistências entre os navegadores. */
}

input::placeholder, textarea::placeholder {
    color: $color_text_form_placeholder;
} 

input[type="text"], input[type="email"] {
    padding: 7rem 13rem 9rem;
}

textarea {
    height: 40rem;
    padding: 4rem 13rem 0rem;
    @extend .lineHeight;
    vertical-align: top; /* Alinha os <textarea>'s com seus rótulos */
}

// Scrollbar:
 
@if($enableAlternativeScrollbarStyle == true){

    textarea {
            
        scrollbar-width: auto;
        scrollbar-color: hsla(0, 0%, 0%, 0.14) hsla(0, 0%, 0%, 0);
    } 
}

textarea::-webkit-scrollbar { // Entire bar

    width: 10px;
    height: 11px;
}

textarea::-webkit-scrollbar-thumb { // Bar pointer

    background: hsl(0, 0%, 87%) /* hsla(0, 0%, 0%, 0.14) */;    
    box-shadow: none;
}

textarea::-webkit-scrollbar-thumb:hover { // Bar pointer hover

    background: hsl(0, 0%, 93%) /* hsla(0, 0%, 35%, 0.14) */;     
    box-shadow: none;
}

textarea::-webkit-scrollbar-track {   // Bar background

    border: 0;
    background: hsla(0, 0%, 0%, 0);
}

input[type="file"] {

    color: hsla(0, 0%, 0%, 0);
    border-radius: 0;
    filter: none;
    max-width: 100%; // <- Se tirar isso buga!
    margin-top: $margin_vertical;
}

input[type="radio"], input[type="checkbox"] {

    width: auto;
    margin-top: 0;
    margin-left: 20px;
    margin-right: 8px;
}

/*
input[type="checkbox"] {
    -webkit-appearance: none;
    appearance: none;
    width: 44px;
    height: 24px;
    // width: 51px;
    // height: 31px;
    border-radius: 12px;
    background: hsl(0, 0%, 93%);
    transition: all 0.3s; 
}

input[type="checkbox"]:checked {
    background-color: $color_theme;
    background-color: hsl(115, 100%, 66%);
    transition: all 0.3s; 
}

input[type="checkbox"]::before {
    content: '';
    display: inline-block;
    width: 18px;
    height: 18px;
    border-radius: 9px;
    background-color: hsl(0, 0%, 100%); 
    position: relative;
    top: 3px;
    left: 4px;
    transition: all 0.3s; 
}

input[type="checkbox"]:checked::before {
    left: 23px;
    transition: all 0.3s; 
}

input[type="checkbox"]:disabled {
    background: hsl(0, 0%, 93%);
}

input[type="checkbox"]:disabled::before {
    background-color: transparent; 
    border: 3px dashed white; 
}
*/


/*  TODO:        2 ▶ select
◈──────────────────────────────────────────────────────◈ */

select {
    border-radius: 5px; /* <- Traz inconsistências entre os navegadores. */
    height: $button_height_small;
    color: $color_text_form_select;
    background: hsla(0, 0%, 100%, 0);
    background: $bg_select;
    border: 1px solid $color_border_form;
    padding: 0 6px;
}


/*  TODO:        2 ▶ button
◈──────────────────────────────────────────────────────◈ */

/*
button {
    min-width: 116px; // Tava em 120px
    color: $color_text_window;
    padding: 10rem 16rem;
    border-width: 0;
    border-radius: 100px;
    margin-top: $margin_vertical;
    margin-bottom: $margin_vertical;
    background: $bg_button;
    text-shadow: 1px 1px 1px $color_shadow_text; 
    box-shadow: 
    inset 0px -4px 5px 3px $color_shadow_box_inset_dark,
    inset 5px 5px 5px 0px $color_shadow_box_inset_clear;
}

button:disabled {
    opacity: 0.5;
}*/


/*  TODO:    1 ▶ Focus Effect
◈──────────────────────────────────────────────────────◈ */

input:focus:not(input[type="checkbox"]), textarea:focus {
    outline: 0px dotted;
    border: 1px solid $color_theme;
}

input[type="file"]:focus {
    outline: 1px solid $color_theme;
}

input[type="radio"]:focus/*, input[type="checkbox"]:focus*/ {
    outline: 1px solid $color_theme;
}

select:focus {
    outline: 0px dotted;
    border: 1px solid $color_theme;
    /* border-radius: 100px; <- Traz inconsistências entre os navegadores. */
}

button:focus {
    // outline: 2px dotted $color_theme;
    outline: 0;
}


/*  TODO:    1 ▶ Class
◈──────────────────────────────────────────────────────◈ */

@for $i from 1 through 30 { 
    .textarea_#{$i}l {
        height: calc(40rem + ( (#{$i} - 1) * 28rem));
    } 
}


/*  TODO:    1 ▶ Switches & Buttons
◈──────────────────────────────────────────────────────◈ */

.switch, 
button.button_full, button.button_text, button.button_icon, button.image, 
a.button_full, a.button_text, a.button_icon, a.image {

    visibility: hidden;
}

.switch, 
button, 
a.button_full, a.button_text, a.button_icon, a.image {

    align-items: center;

    // margin-top: $margin_vertical;
    // margin-bottom: $margin_vertical;
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal; 

    cursor: pointer;

    .piece_text {

        text-align: justify;
    }
}

.switch.disabled, button.disabled, a.disabled {

    opacity: 0.5;
    cursor: default;
}

button {

    border-width: 0;
}


/*  TODO:        2 ▶ Button
◈──────────────────────────────────────────────────────◈ */

.switch.button_full, .switch.button_text, .switch.button_icon, 
button.button_full, button.button_text, button.button_icon, 
a.button_full, a.button_text, a.button_icon {

    display: inline-flex;
    justify-content: center;
    position: relative;

    width: max-content; -moz-width: fit-content; width: -moz-fit-content; width: fit-content; // <- Declarações necessárias para garantir que o Firefox funcione como se suportasse 'width: fit-content'. (Ao menos 1 delas deve funcionar.)

    min-width: $button_height_smaller;
    min-height: $button_height_smaller;

    .button_shine_top { // Shine
          
        content: '';
        position: absolute;
        z-index: 1;
        background: $bg_button_type_normal_and_switch_type_button_shine_top;
          
        $offset: 2px;
        $left:  $offset;

        top: 2px;
        left:  $left;
        width: calc(100% - 2 * #{$left});
        height: 49.8%;
    }

    .piece_text {

        font-weight: bold; 
    }

    .piece_icon {

        $width: 32px;

        width: $width;
        border-radius: calc(1/4 * #{$width});

        margin-right: 12px;
    }
}

.switch.button_full, .switch.button_text, .switch.button_icon {

    background: $bg_switch_type_button_off; 

    box-shadow: inset 0px 0px 8px 1px $color_shadow_box_inset_switch_type_button_dark; // Propriedade aplicada aprimorada via JS. 

    .piece_key { 

        display: none;
    }

    .piece_label {
        
        display: inline-flex;
        align-items: center;
    }

    .piece_text {

        color: $color_text_switch_type_button_off;
    }

    .piece_icon {

        filter: drop-shadow(0px 0px 1px $color_icon_outline_switch_type_button_off);
    }
}

button.button_full, button.button_text, button.button_icon, 
a.button_full, a.button_text, a.button_icon {

    /* 
    background: 
    linear-gradient(to top, hsl(195, 100%, 100%), hsla(195, 100%, 100%, 0.64), hsla(195, 100%, 100%, 0) 46%), // linear-gradient(to top, hsl(195, 100%, 100%), hsla(195, 100%, 100%, 0.64), hsla(195, 100%, 100%, 0) 46%),
    linear-gradient(to bottom, hsl(195, 100%, 80%), hsl(195, 100%, 67%), hsl(195, 100%, 60%)); 

    box-shadow: inset 0px 0px 9px 6px $color_shadow_box_inset_element_type_button_clear, 0px 0px 0px 1px hsl(195, 100%, 77%); // Propriedade aplicada aprimorada via JS.
    */

    .piece_text {

        color: $color_text_window;
        // filter: drop-shadow(0px 0px 2px hsl(193, 100%, 42%));
    }

    .piece_icon {

        // filter: drop-shadow(0px 0px 1px hsla(195, 100%, 67%, 0.7));
    }
}

// --------------------------------------------------- Estilos de buttons alternativos -----------------------------------------------------

button.estilo_2 {
    
    background: linear-gradient(to bottom, 
    hsl(195, 100%, 100%), hsl(195, 100%, 67%) 80%, hsl(195, 100%, 50%), hsl(195, 100%, 40%));   
    box-shadow: 0 0px 0px 1px hsl(195, 100%, 60%), inset 0 0px 9px 4px hsla(0, 0%, 100%, 0.7) !important;

    .button_shine_top {
        opacity: 0.85;
    }
}

button.estilo_3 {

    background: linear-gradient(to bottom, hsl(195, 100%, 60%), hsl(195, 100%, 74%), hsl(195, 100%, 60%)); 
    box-shadow: inset 0px 0px 10px 1px hsla(0, 0%, 0%, 0.5) !important;
}

// -------------------------------------------------------------------------------------------------------------------------------------------------

.switch.button_full, button.button_full, a.button_full {

    padding: 11px; 
    padding-right: 12px;
    border-radius: 14px; // Propriedade aplicada aprimorada via JS.

    .button_shine_top { // Shine 
          
        border-radius: 12px; // Propriedade aplicada aprimorada via JS.
    }
}
 
.switch.button_text, button.button_text, a.button_text {

    padding: 10px; 
    padding-right: 11px;
    border-radius: 11px; // Propriedade aplicada aprimorada via JS.

    .button_shine_top { // Shine 
          
        border-radius: 9px; // Propriedade aplicada aprimorada via JS.
    }

    .piece_icon {
        display: none;
    }
}
      
.switch.button_icon, button.button_icon, a.button_icon {

    // justify-content: center;
    padding: 9px; // Propriedade aplicada aprimorada via JS.
    border-radius: 13px; // Propriedade aplicada aprimorada via JS.

    .button_shine_top { // Shine 
          
        border-radius: 10px; // Propriedade aplicada aprimorada via JS.
    }
    
    .piece_text {

        // display: none; // Propriedade aplicada via JS.

        padding-left: 9px; // Propriedade aplicada via JS.
        padding-right: 9px; // Propriedade aplicada via JS.
        text-align: center;
    }

    .piece_icon {
        margin: 0;
    }
}
      
.switch.button_icon:not(.disabled), button.button_icon:not(.disabled), a.button_icon:not(.disabled) {

    .piece_text {

        top: -50px; // Propriedade aplicada via JS.
    }
}

.switch.button_full.disabled, .switch.button_text.disabled {

    .piece_label {
        color: adjust-color($color_text, $alpha: -0.5);
    }
}

button.button_full.disabled, button.button_text.disabled, 
a.button_full.disabled, a.button_text.disabled {

    color: adjust-color($color_text, $alpha: -0.5);
}

.switch.button_icon.disabled, button.button_icon.disabled, a.button_icon.disabled {
    
    .piece_text {

        z-index: 1;
    }
}

//····································································◈ Pill

.switch.button_full.pill, .switch.button_text.pill, .switch.button_icon.pill, 
button.button_full.pill, button.button_text.pill, button.button_icon.pill, 
a.button_full.pill, a.button_text.pill, a.button_icon.pill {

    border-radius: 1000px; 
    // background: $bg_switch_type_button_pill_and_rounded_off;

    .button_shine_top { // Shine
           
        top: 2px;  
        height: 49.5%;
        border-radius: 1000px; 
    }
}

.switch.button_full.pill, .switch.button_text.pill, .switch.button_icon.pill {

    box-shadow: inset 0px 0px 10px 1px $color_shadow_box_inset_switch_type_button_dark; // Propriedade aplicada aprimorada via JS. 
}

.switch.button_full.pill, button.button_full.pill, a.button_full.pill {

    padding-left: 18px; // Propriedade aplicada aprimorada via JS.
    padding-right: 20px; // Propriedade aplicada aprimorada via JS.

    .button_shine_top { // As propriedades que estão comentadas dentro desta regra foram aplicadas aprimoradas via JS.
          
        $left:  12px;
    
        left:  $left;
        width: calc(100% - 2 * #{$left}); 
    }  
}

.switch.button_text.pill, button.button_text.pill, a.button_text.pill {

    padding-left: 13px; // Propriedade aplicada aprimorada via JS.
    padding-right: 13px; // Propriedade aplicada aprimorada via JS.

    .button_shine_top {  // As propriedades que estão comentadas dentro desta regra foram aplicadas aprimoradas via JS.
    
       $left: 9px;  
    
       left:  $left;
       width: calc(100% - 2 * #{$left});
    }
}

.switch.button_icon.pill, button.button_icon.pill, a.button_icon.pill {

    padding: 12px; // Propriedade aplicada aprimorada via JS.

    .button_shine_top { // As propriedades que estão comentadas dentro desta regra foram aplicadas aprimoradas via JS.
        
        $left: 12px;
        
        left:  $left;
        width: calc(100% - 2 * #{$left});
    }
}


//····································································◈ Rounded (A menor dimensão de um switch rounded é configurado via JS!)

.switch.button_full.rounded, .switch.button_text.rounded, .switch.button_icon.rounded, 
button.button_full.rounded, button.button_text.rounded, button.button_icon.rounded, 
a.button_full.rounded, a.button_text.rounded, a.button_icon.rounded {

    // justify-content: center;
    border-radius: 1000px; 
    // background: $bg_switch_type_button_pill_and_rounded_off; 

    .button_shine_top { // Shine 
          
        border-radius: 1000px; 
        background: $bg_button_type_normal_and_switch_type_button_rounded_shine;
           
        $left:  3px; 

        left:  $left;
        width: calc(100% - 2 * #{$left});
    }
}

.switch.button_full.rounded, .switch.button_text.rounded, .switch.button_icon.rounded {

    .button_shine_top {
 
        $top: 3px;

        height: calc(100% - 2 * #{$top});
    }
}

// Regra necessária para o brilho se ajustar direito no botão (mais precisamente, o 'x.button_icon.rounded'):
button.button_full.rounded, button.button_text.rounded, button.button_icon.rounded, 
a.button_full.rounded, a.button_text.rounded, a.button_icon.rounded { 

    .button_shine_top {

        top: 1px;
        height: 91.1%; 
    }
}

.switch.button_full.rounded, .switch.button_text.rounded, .switch.button_icon.rounded {

    box-shadow: inset 0px 0px 10px 1px $color_shadow_box_inset_switch_type_button_dark; // Propriedade aplicada aprimorada via JS. 
}

button.button_full.rounded, button.button_text.rounded, button.button_icon.rounded,
a.button_full.rounded, a.button_text.rounded, a.button_icon.rounded {

    .button_shine_top {

        opacity: 0.96;
    }
}

.switch.button_full.rounded, button.button_full.rounded, a.button_full.rounded {

    padding: 18px;  
}

.switch.button_text.rounded, button.button_text.rounded, a.button_text.rounded {

    padding: 14px; 

    .piece_text {

        text-align: center;
    }
}

.switch.button_icon.rounded, button.button_icon.rounded, a.button_icon.rounded {

    padding: 12px; // Propriedade aplicada aprimorada via JS.
}

.switch.button_icon.rounded:not(.on) .button_shine_top { 

    opacity: 0.85;
}
 
/*  TODO:            3 ▶ Text Below
◈──────────────────────────────────────────────────────◈ */

.switch.button_full.text_below, button.button_full.text_below, a.button_full.text_below { 

    // justify-content: center;
    flex-direction: column; // Necessário caso o switch não tenha 'piece_label'.
    padding-bottom: 10px; // Propriedade aplicada aprimorada via JS.

    .piece_icon {

        margin: 10px; // Propriedade aplicada aprimorada via JS.
    }

    .piece_text {

        text-align: center;
    }
}

.switch.button_full.text_below:not(.pill, .rounded), 
button.button_full.text_below:not(.pill, .rounded), 
a.button_full.text_below:not(.pill, .rounded) {

    border-radius: 24px; // Propriedade aplicada aprimorada via JS.
}

.switch.button_full.text_below:not(.pill, .rounded) .button_shine_top, 
button.button_full.text_below:not(.pill, .rounded) .button_shine_top, 
a.button_full.text_below:not(.pill, .rounded) .button_shine_top {

    border-radius: 22px; // Propriedade aplicada aprimorada via JS. // Obs.: Esta propriedade buga se for colocada na regra com o seletor ".switch.button_full.text_below:not(.pill, .rounded), button.button_full.text_below:not(.pill, .rounded)".
}

.switch.button_full.text_below.pill, button.button_full.text_below.pill, a.button_full.text_below.pill {

    padding-left: 18px; // Propriedade aplicada aprimorada via JS.
    padding-right: 18px; // Propriedade aplicada aprimorada via JS.
    padding-bottom: 11px; // Propriedade aplicada aprimorada via JS.

    .button_shine_top {

        $left: 18px;

        left:  $left;
        width: calc(100% - 2 * #{$left});
    }

    .piece_icon {

        margin: 10px 12px; // Propriedade aplicada aprimorada via JS.
    }

    .piece_text {

        margin-left: 12px; // Propriedade aplicada aprimorada via JS.
        margin-right: 12px; // Propriedade aplicada aprimorada via JS.
    }
}

.switch.button_full.text_below.rounded, button.button_full.text_below.rounded, a.button_full.text_below.rounded {

    padding-bottom: 10px; // Propriedade aplicada aprimorada via JS.

    .piece_icon {

        margin: 20px 10px 10px 10px; // Propriedade aplicada aprimorada via JS.
    }

    .piece_text {

        margin-left: 14px; // Propriedade aplicada aprimorada via JS.
        margin-right: 14px; // Propriedade aplicada aprimorada via JS.
    }
}

button.button_full.text_below,
a.button_full.text_below {  

    flex-direction: column; 
}

.switch.button_full.text_below .piece_label {

    flex-direction: column; 
    justify-content: center; 
}
 
/*  TODO:            3 ▶ Option ON
◈──────────────────────────────────────────────────────◈ */

.switch.button_full.on, .switch.button_text.on, .switch.button_icon.on {

    .piece_text {

        color: $color_text_switch_type_button_on;
    }
}

/*  
// Regra necessária para o brilho se ajustar direito no botão:
.switch.button_full.rounded.on, .switch.button_text.rounded.on, .switch.button_icon.rounded.on {

    .button_shine_top {

        top: 1px;
        height: 91.1%; 
    }
}
*/

/*  
.switch.button_full.on.disabled, .switch.button_text.on.disabled, .switch.button_icon.on.disabled { 
    
    // box-shadow: inset 0px 0px 9px 4px $color_shadow_box_inset_element_type_button_clear !important;
    // border: 1px solid adjust-color($color_theme, $lightness: 30%);
 
    .piece_text {

        filter: drop-shadow(0px 0px 2px hsl(193, 100%, 34%)); 
    }
}
*/

//····································································◈ Pill

/*
.switch.button_icon.on.pill {

    background: $bg_switch_type_button_pill_and_rounded_on;
}
*/

//····································································◈ Rounded

/*
.switch.button_full.on.rounded, .switch.button_text.on.rounded, .switch.button_icon.on.rounded {
 
    // background: $bg_switch_type_button_pill_and_rounded_on;
}
*/
 
/*  TODO:            3 ▶ Floating Labels
◈──────────────────────────────────────────────────────◈ */

@media (pointer: fine) {

    .switch.button_icon, button.button_icon, a.button_icon {

        .piece_text {

            position: absolute;  
            // top: -45px; // Propriedade aplicada aprimorada via JS. 
            //left: -15px; // Propriedade aplicada aprimorada via JS. 
            z-index: 1;

            padding: 6px 9px; 
            border: 1px solid;
            border-radius: 1000px;
            font-weight: initial;
            // box-shadow: 0px 7px 4px -2px hsla(0, 0%, 0%, 0.09); 
            filter: initial;
        }
    }

    .switch.button_icon .piece_text {

        border-color: $color_border_switch_type_button_icon_piece_text_floating_off; 
        color: $color_text_switch_type_button_icon_piece_text_floating_off;
        background: $bg_switch_type_button_icon_piece_text_floating_off;
    }

    /*  
    button.button_icon .piece_text,
    a.button_icon .piece_text {

        $color_border_element_button_icon_piece_text_floating_off: hsl(195, 100%, 50%); 
        $color_text_element_button_icon_piece_text_floating_off: white; 
        $bg_element_button_icon_piece_text_floating_off: hsla(195, 100%, 70%, 0.75);

        text-shadow: 1px 1px 1px $color_shadow_text; 
        border-color: $color_border_element_button_icon_piece_text_floating_off; 
        color: $color_text_element_button_icon_piece_text_floating_off;
        background: $bg_element_button_icon_piece_text_floating_off;
    }
    */

    .switch.button_icon .piece_label {

        justify-content: center; 
    }

    .switch.button_icon.on, button.button_icon, a.button_icon { 
    
        .piece_text { 

            color: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on;
            border-color: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on; 
            background: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on;
            filter: initial;
            // box-shadow: 0px 7px 4px -2px hsla(193, 100%, 60%, 0.24); 
        } 
    }

    .switch.button_icon:hover, button.button_icon:hover, a.button_icon:hover {
    
        .piece_text {

            display: block !important;
        }
    }
}
 
/*  TODO:            3 ▶ Colors
◈──────────────────────────────────────────────────────◈ */

/*------ Default: Blue ------*/

button.button_full, button.button_text, button.button_icon, 
a.button_full, a.button_text, a.button_icon,
button.button_full.blue, button.button_text.blue, button.button_icon.blue, 
a.button_full.blue, a.button_text.blue, a.button_icon.blue { 

    background: $bg_element_type_button_blue;

    box-shadow: $box_shadow_element_type_button_blue;

    .piece_icon {

        filter: drop-shadow(0px 0px 1px hsl(195, 100%, 55%));
    }
}

button.button_full, button.button_text,
a.button_full, a.button_text, 
button.button_full.blue, button.button_text.blue, 
a.button_full.blue, a.button_text.blue { 

    .piece_text {

        filter: $filter_element_type_button_piece_text_blue;
    }
}

@media not all and (pointer: coarse) { // Hover

    button.button_full:not(.disabled):hover, button.button_text:not(.disabled):hover, button.button_icon:not(.disabled):hover,
    a.button_full:not(.disabled):hover, a.button_text:not(.disabled):hover, a.button_icon:not(.disabled):hover,
    button.button_full.blue:not(.disabled):hover, button.button_text.blue:not(.disabled):hover, button.button_icon.blue:not(.disabled):hover,
    a.button_full.blue:not(.disabled):hover, a.button_text.blue:not(.disabled):hover, a.button_icon.blue:not(.disabled):hover {

        background: $bg_element_type_button_clear_blue; // <- Propriedade aplicada aprimorada via JS.
        
        box-shadow:$box_shadow_element_type_button_clear_blue; // <- Propriedade aplicada aprimorada via JS.

        .piece_icon {

            filter: $filter_element_type_button_piece_icon_clear_blue; 
        }
    }
}

.switch.button_full.on, .switch.button_text.on, .switch.button_icon.on,
.switch.button_full.blue.on, .switch.button_text.blue.on, .switch.button_icon.blue.on { // Switch ON

    background: $bg_element_type_button_clear_blue;
    box-shadow: $box_shadow_element_type_button_clear_blue;
 
    .piece_text {

        filter: $filter_element_type_button_piece_text_blue; 
    }

    .piece_icon {

        filter: $filter_element_type_button_piece_icon_clear_blue; 
    }
}

.switch.button_icon.on,
.switch.button_icon.blue.on { // Switch ON
 
    .piece_text {

        filter: initial;  
    }
}

.switch.button_full.on.disabled, .switch.button_text.on.disabled, .switch.button_icon.on.disabled,
.switch.button_full.blue.on.disabled, .switch.button_text.blue.on.disabled, .switch.button_icon.blue.on.disabled { // Switch ON Disabled
 
    .piece_text {

        filter: $filter_switch_type_button_piece_text_clear_disabled_blue; 
    }  
}

@media (pointer: fine) { // Floating Labels

    .switch.button_icon.on, button.button_icon, a.button_icon,
    .switch.button_icon.blue.on, button.button_icon.blue, a.button_icon.blue { 
    
        .piece_text {

            color: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on;
            border-color: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on; 
            background: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on;
        } 
    }
}

/*------ Red ------*/

button.button_full.red, button.button_text.red, button.button_icon.red, 
a.button_full.red, a.button_text.red, a.button_icon.red {

    background: 
    linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.7), white), 
    linear-gradient(to bottom, hsl(0, 100%, 94%), hsl(0, 100%, 67%), hsl(0, 100%, 67%));

    box-shadow: 0px 0px 0px 1px hsl(0, 100%, 84%), inset 0px 0px 9px 6px white;

    .piece_icon {

        filter: drop-shadow(0px 0px 1px hsl(0, 100%, 65%));
    }
}

button.button_full.red, button.button_text.red, 
a.button_full.red, a.button_text.red {

    .piece_text {

        filter: $filter_element_type_button_piece_text_red;
    }
}

@media not all and (pointer: coarse) { // Hover
    
    button.button_full.red:not(.disabled):hover, button.button_text.red:not(.disabled):hover, button.button_icon.red:not(.disabled):hover,
    a.button_full.red:not(.disabled):hover, a.button_text.red:not(.disabled):hover, a.button_icon.red:not(.disabled):hover {

        background: $bg_element_type_button_clear_red;
        
        box-shadow: $box_shadow_element_type_button_clear_red; 

        .piece_icon {

            filter: $filter_element_type_button_piece_icon_clear_red; 
        }
    }
}

.switch.button_full.red.on, .switch.button_text.red.on, .switch.button_icon.red.on { // Switch ON

    background: $bg_element_type_button_clear_red;
    box-shadow: $box_shadow_element_type_button_clear_red;
 
    .piece_text {

        filter: $filter_element_type_button_piece_text_red; 
    }

    .piece_icon {

        filter: $filter_element_type_button_piece_icon_clear_red; 
    }
}

.switch.button_icon.red.on { // Switch ON
 
    .piece_text {

        filter: initial;  
    }
}

.switch.button_full.red.on.disabled, .switch.button_text.red.on.disabled, .switch.button_icon.red.on.disabled { // Switch ON Disabled
 
    .piece_text {

        filter: $filter_switch_type_button_piece_text_clear_disabled_red; 
    }  
}

@media (pointer: fine) { // Floating Labels

    .switch.button_icon.red.on, button.button_icon.red, a.button_icon.red {  
    
        .piece_text {

            border-color: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_red; 
            background: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on_red;
            color: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_red;
        } 
    }
}

/*------ Yellow ------*/

button.button_full.yellow, button.button_text.yellow, button.button_icon.yellow, 
a.button_full.yellow, a.button_text.yellow, a.button_icon.yellow {

    background: 
    linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.7), white), 
    linear-gradient(to bottom, hsl(60, 100%, 54%), hsl(60, 100%, 46%), hsl(60, 100%, 46%)); // linear-gradient(to bottom, hsl(60, 100%, 54%), hsl(60, 100%, 43%), hsl(60, 100%, 46%));

    box-shadow: 0px 0px 0px 1px hsl(60, 100%, 43%), inset 0px 0px 9px 6px white;

    .piece_icon {

        filter: drop-shadow(0px 0px 1px hsl(60, 100%, 36%))
    }
}

button.button_icon.yellow, 
a.button_icon.yellow {

    background: 
    linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.7), white), 
    linear-gradient(to bottom, hsl(60, 100%, 54%), hsl(60, 100%, 43%), hsl(60, 100%, 46%));
} 

button.button_full.yellow, button.button_text.yellow,
a.button_full.yellow, a.button_text.yellow {

    .piece_text {

        filter: $filter_element_type_button_piece_text_yellow;
    }
}

@media not all and (pointer: coarse) { // Hover
    
    button.button_full.yellow:not(.disabled):hover, button.button_text.yellow:not(.disabled):hover, button.button_icon.yellow:not(.disabled):hover,
    a.button_full.yellow:not(.disabled):hover, a.button_text.yellow:not(.disabled):hover, a.button_icon.yellow:not(.disabled):hover {

        background: $bg_element_type_button_clear_yellow;
        
        box-shadow: $box_shadow_element_type_button_clear_yellow;

        .piece_icon {

            filter: $filter_element_type_button_piece_icon_clear_yellow; 
        }
    }
    
    button.button_icon.yellow:not(.disabled):hover,
    a.button_icon.yellow:not(.disabled):hover {

        background: $bg_element_type_button_icon_clear_yellow; 
    }
}

.switch.button_full.yellow.on, .switch.button_text.yellow.on, .switch.button_icon.yellow.on { // Switch ON

    background: $bg_element_type_button_clear_yellow;
    box-shadow: $box_shadow_element_type_button_clear_yellow;
 
    .piece_text {

        filter: $filter_element_type_button_piece_text_yellow; 
    }

    .piece_icon {

        filter: $filter_element_type_button_piece_icon_clear_yellow; 
    }
}

.switch.button_icon.yellow.on { // Switch ON 

    background: $bg_element_type_button_icon_clear_yellow; 
}

.switch.button_icon.yellow.on { // Switch ON
 
    .piece_text {

        filter: initial;  
    }
}

.switch.button_full.yellow.on.disabled, .switch.button_text.yellow.on.disabled, .switch.button_icon.yellow.on.disabled { // Switch ON Disabled
 
    .piece_text {

        filter: $filter_switch_type_button_piece_text_clear_disabled_yellow; 
    }  
}

@media (pointer: fine) { // Floating Labels

    .switch.button_icon.yellow.on, button.button_icon.yellow, a.button_icon.yellow {  
    
        .piece_text {

            border-color: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_yellow; 
            background: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on_yellow;
            color: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_yellow;
        } 
    }
}

/*------ Green ------*/

button.button_full.green, button.button_text.green, button.button_icon.green, 
a.button_full.green, a.button_text.green, a.button_icon.green {

    background: 
    linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.7), white), 
    linear-gradient(to bottom, hsl(120, 100%, 70%), hsl(120, 100%, 44%), hsl(120, 100%, 54%));

    box-shadow: 0px 0px 0px 1px hsl(120, 100%, 46%), inset 0px 0px 9px 6px white;

    .piece_icon {

        filter: drop-shadow(0px 0px 1px hsl(120, 100%, 38%));
    }
}

button.button_full.green, button.button_text.green, 
a.button_full.green, a.button_text.green {

    .piece_text {

        filter: $filter_element_type_button_piece_text_green;
    }
}

@media not all and (pointer: coarse) { // Hover
    
    button.button_full.green:not(.disabled):hover, button.button_text.green:not(.disabled):hover, button.button_icon.green:not(.disabled):hover,
    a.button_full.green:not(.disabled):hover, a.button_text.green:not(.disabled):hover, a.button_icon.green:not(.disabled):hover {

        background: $bg_element_type_button_clear_green;
        
        box-shadow: $box_shadow_element_type_button_clear_green; 

        .piece_icon {

            filter: $filter_element_type_button_piece_icon_clear_green; 
        }
    }
}

.switch.button_full.green.on, .switch.button_text.green.on, .switch.button_icon.green.on { // Switch ON

    background: $bg_element_type_button_clear_green;
    box-shadow: $box_shadow_element_type_button_clear_green;
 
    .piece_text {

        filter: $filter_element_type_button_piece_text_green; 
    }

    .piece_icon {

        filter: $filter_element_type_button_piece_icon_clear_green; 
    }
}

.switch.button_icon.green.on { // Switch ON
 
    .piece_text {

        filter: initial;  
    }
}

.switch.button_full.green.on.disabled, .switch.button_text.green.on.disabled, .switch.button_icon.green.on.disabled { // Switch ON Disabled
 
    .piece_text {

        filter: $filter_switch_type_button_piece_text_clear_disabled_green; 
    }  
}

@media (pointer: fine) { // Floating Labels

    .switch.button_icon.green.on, button.button_icon.green, a.button_icon.green {  
    
        .piece_text {

            border-color: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_green; 
            background: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on_green;
            color: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_green;
        } 
    }
}

/*------ Black ------*/

button.button_full.black, button.button_text.black, button.button_icon.black, 
a.button_full.black, a.button_text.black, a.button_icon.black {

    background: 
    linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.7), white), 
    linear-gradient(to bottom, hsl(195, 0%, 90%), hsl(195, 0%, 44%), hsl(195, 0%, 44%));

    box-shadow: 0px 0px 0px 1px hsl(195, 0%, 68%), inset 0px 0px 9px 6px white;

    .piece_icon {

        filter: drop-shadow(0px 0px 1px hsl(0, 0%, 46%));
    }
}

button.button_full.black, button.button_text.black,
a.button_full.black, a.button_text.black {

    .piece_text {

        filter: $filter_element_type_button_piece_text_black;
    }
}

@media not all and (pointer: coarse) { // Hover
    
    button.button_full.black:not(.disabled):hover, button.button_text.black:not(.disabled):hover, button.button_icon.black:not(.disabled):hover,
    a.button_full.black:not(.disabled):hover, a.button_text.black:not(.disabled):hover, a.button_icon.black:not(.disabled):hover {

        background: $bg_element_type_button_clear_black;
        
        box-shadow: $box_shadow_element_type_button_clear_black; 

        .piece_icon {

            filter: $filter_element_type_button_piece_icon_clear_black; 
        }
    } 
}

.switch.button_full.black.on, .switch.button_text.black.on, .switch.button_icon.black.on { // Switch ON

    background: $bg_element_type_button_clear_black;
    box-shadow: $box_shadow_element_type_button_clear_black;
 
    .piece_text {

        filter: $filter_element_type_button_piece_text_black; 
    }

    .piece_icon {

        filter: $filter_element_type_button_piece_icon_clear_black; 
    }
}

.switch.button_icon.black.on { // Switch ON 
 
    .piece_text {

        filter: initial;  
    }
}

.switch.button_full.black.on.disabled, .switch.button_text.black.on.disabled, .switch.button_icon.black.on.disabled { // Switch ON Disabled
 
    .piece_text {

        filter: $filter_switch_type_button_piece_text_clear_disabled_black; 
    }  
}

@media (pointer: fine) { // Floating Labels

    .switch.button_icon.black.on, button.button_icon.black, a.button_icon.black {  
    
        .piece_text {

            border-color: $color_border_button_and_switch_both_type_button_icon_piece_text_floating_on_black; 
            background: $bg_button_and_switch_both_type_button_icon_piece_text_floating_on_black;
            color: $color_text_button_and_switch_both_type_button_icon_piece_text_floating_on_black;
        } 
    }
}
 

/*  TODO:        2 ▶ Image
◈──────────────────────────────────────────────────────◈ */
      
.switch.image, button.image, a.image {

    display: inline-flex;

    /* width: max-content; -moz-width: fit-content; width: -moz-fit-content; width: fit-content; <- Declarações necessárias 
    para garantir que o Firefox funcione como se suportasse 'width: fit-content'. (Ao menos 1 delas deve funcionar.) */

    min-width: $button_height_smaller;
    min-height: $button_height_smaller;
    width: $button_and_switch_both_type_image_icon_size;
    // height: $button_and_switch_both_type_image_icon_size;

    background: 0; 
    
    .piece_text {

        // display: none; // Propriedade aplicada via JS.

        padding-left: 9px; // Propriedade aplicada via JS.
        padding-right: 9px; // Propriedade aplicada via JS.
    }

    .piece_icon {

        width: inherit;
        height: inherit;
        margin: 0;

        filter: drop-shadow(0px 0px 1px $color_outline_button_and_switch_both_type_image);
        // transition: 0.17s; // Buga se usado com 'filter'!

        border-radius: calc(1/4 * #{$button_and_switch_both_type_image_icon_size}); // Propriedade aplicada aprimorada via JS. 
    }
}

.switch.image .piece_label {

    width: inherit;
    height: inherit;
}

.switch.image .piece_key {
    
    display: none;
}
      
.switch.image:not(.disabled), button.image:not(.disabled), a.image:not(.disabled) {

    .piece_text {

        top: -49px; // Propriedade aplicada via JS.
    }
}

//····································································◈ pill

.switch.image.pill, button.image.pill, a.image.pill {

    border-radius: 1000px !important; // Declaração necessária apenas para 'button:focus'.
    
    .piece_icon {

        border-radius: 1000px !important;
    }
}

/*  TODO:            3 ▶ Option ON
◈──────────────────────────────────────────────────────◈ */

.switch.image.on .piece_icon {

    // border: 2px solid white; filter: drop-shadow(0px 0px 6px $color_theme);  
    // box-shadow: 0px 0px 0px 2px white; filter: drop-shadow(0px 0px 6px $color_theme);  
    // box-shadow: 0px 0px 3px 3px white; filter: drop-shadow(0px 0px 7px $color_theme);  
    
    box-shadow:  0px 0px 0px 2px white, 0px 0px 12px 2px $color_theme;
}
 
/*  TODO:            3 ▶ Floating Labels
◈──────────────────────────────────────────────────────◈ */

@media (pointer: fine) {  

    .switch.image, button.image, a.image {
        
        justify-content: center;
        position: relative;

        .piece_text {

            position: absolute;  
            // top: -45px; // Propriedade aplicada aprimorada via JS.  
            // left: -15px; // Propriedade aplicada aprimorada via JS. 
            z-index: 1;
            padding-top: 6px; 
            padding-bottom: 6px;
            // padding-left e padding-right foram aplicados via JS.
            border: 1px solid;
            border-radius: 1000px;
            font-weight: initial;
            text-align: center;
        }
    }

    .switch.image .piece_text {

        color: $color_text_switch_type_image_piece_text_floating_off;
        border-color: $color_border_switch_type_image_piece_text_floating_off; 
        background: $bg_switch_type_image_piece_text_floating_off;
        box-shadow: 0px 7px 4px -2px $color_box_shadow_switch_type_image_piece_text_floating_off; 
    }

    .switch.image .piece_label {

        display: inline-flex;
        justify-content: center; 
        align-items: center;
        position: relative;
    }

    /*
    button.image, a.image {

        justify-content: center;
        position: relative;
    }
    */

    .switch.image.on .piece_label {
        
        filter: initial; 
    }

    .switch.image.on .piece_text {

        filter: initial;
        box-shadow: 0px 7px 4px -2px $color_box_shadow_switch_type_image_piece_text_floating_on;  
    }

    .switch.image:hover, button.image:hover, a.image:hover { 
        
        .piece_text {

            display: block !important;
        }
    }
}
 
/*  TODO:            3 ▶ Colors
◈──────────────────────────────────────────────────────◈ */

@media (pointer: fine) {  

    /*------ Default: Blue ------*/

    .switch.image.on .piece_text,

    .switch.image.blue.on .piece_text {

        color: $color_text_switch_type_image_piece_text_floating_on;
        border-color: $color_border_switch_type_image_piece_text_floating_on; 
        background: $bg_switch_type_image_piece_text_floating_on;
    }

    button.image .piece_text, a.image .piece_text,

    button.image.blue .piece_text, a.image.blue .piece_text { 

        color: $color_text_button_type_image_piece_text_floating;
        border-color: $color_border_button_type_image_piece_text_floating; 
        background: $bg_button_type_image_piece_text_floating;
        box-shadow:
        inset 0px 0px 7px 1px $color_box_shadow_in_button_type_image_piece_text_floating, 
        0px 7px 4px -2px $color_box_shadow_out_button_type_image_piece_text_floating;  
    }

    /*------ Red ------*/

    .switch.image.red.on .piece_text {

        color: $color_text_switch_type_image_piece_text_floating_on_red;
        border-color: $color_border_switch_type_image_piece_text_floating_on_red; 
        background: $bg_switch_type_image_piece_text_floating_on_red;
    }

    button.image.red .piece_text, a.image.red .piece_text {

        color: $color_text_button_type_image_piece_text_floating_red;
        border-color: $color_border_button_type_image_piece_text_floating_red; 
        background: $bg_button_type_image_piece_text_floating_red;
        box-shadow:
        inset 0px 0px 7px 1px $color_box_shadow_in_button_type_image_piece_text_floating_red, 
        0px 7px 4px -2px $color_box_shadow_out_button_type_image_piece_text_floating_red;  
    }
    
    /*------ Yellow ------*/ 

    .switch.image.yellow.on .piece_text {

        color: $color_text_switch_type_image_piece_text_floating_on_yellow;
        border-color: $color_border_switch_type_image_piece_text_floating_on_yellow; 
        background: $bg_switch_type_image_piece_text_floating_on_yellow;
    }

    button.image.yellow .piece_text, a.image.yellow .piece_text {

        color: $color_text_button_type_image_piece_text_floating_yellow;
        border-color: $color_border_button_type_image_piece_text_floating_yellow; 
        background: $bg_button_type_image_piece_text_floating_yellow;
        box-shadow:
        inset 0px 0px 7px 1px $color_box_shadow_in_button_type_image_piece_text_floating_yellow, 
        0px 7px 4px -2px $color_box_shadow_out_button_type_image_piece_text_floating_yellow;  
    }

    /*------ Green ------*/

    .switch.image.green.on .piece_text {

        color: $color_text_switch_type_image_piece_text_floating_on_green;
        border-color: $color_border_switch_type_image_piece_text_floating_on_green; 
        background: $bg_switch_type_image_piece_text_floating_on_green;
    }

    button.image.green .piece_text, a.image.green .piece_text {

        color: $color_text_button_type_image_piece_text_floating_green;
        border-color: $color_border_button_type_image_piece_text_floating_green; 
        background: $bg_button_type_image_piece_text_floating_green;
        box-shadow:
        inset 0px 0px 7px 1px $color_box_shadow_in_button_type_image_piece_text_floating_green, 
        0px 7px 4px -2px $color_box_shadow_out_button_type_image_piece_text_floating_green;  
    }

    /*------ Black ------*/

    .switch.image.black.on .piece_text {

        color: $color_text_switch_type_image_piece_text_floating_on_black;
        border-color: $color_border_switch_type_image_piece_text_floating_on_black; 
        background: $bg_switch_type_image_piece_text_floating_on_black;
    }

    button.image.black .piece_text, a.image.black .piece_text {

        color: $color_text_button_type_image_piece_text_floating_black;
        border-color: $color_border_button_type_image_piece_text_floating_black; 
        background: $bg_button_type_image_piece_text_floating_black;
        box-shadow:
        inset 0px 0px 7px 1px $color_box_shadow_in_button_type_image_piece_text_floating_black, 
        0px 7px 4px -2px $color_box_shadow_out_button_type_image_piece_text_floating_black;  
    }
}


/*  TODO:        2 ▶ Key (Only Switches)
◈──────────────────────────────────────────────────────◈ */

.switch.key_full, .switch.key_text {

    display: flex;
    justify-content: space-between;

    margin-top: $margin_vertical;
    margin-bottom: $margin_vertical;
    
    .piece_key { // Path
 
        order: 1;
        margin-left: 18px; 
        margin-right: 0;
        //margin-right: 12px;
        border-radius: 1000px;
        background: $bg_switch_type_key_path_off;
    }

    .piece_key::before { // Ball

        content: '';
        display: inline-block;
        position: relative;
        border-radius: 1000px;
        background: $bg_switch_type_key_ball; 
        transition: all 0.39s; 
    }

    .piece_key::after { // Shine
        
        content: '';
        display: inline-block;
        position: relative;
        border-radius: 1000px;
        background: $bg_switch_type_key_ball_shine;
        transition: all 0.39s; 
    }

    .piece_label {
        display: inline-flex;
        align-items: center;
        margin: 0;
        text-indent: 0;
    }

    .piece_icon {

        $width: 32px;

        width: $width;
        border-radius: calc(1/4 * #{$width});

        margin-right: 12px;
        filter: drop-shadow(0px 0px 1px rgba(0, 0, 0, 0.15));
    }

    .piece_text {

        @extend .lineHeight;
    }
} 

.switch.key_text {

    .piece_icon {
        display: none;
    }
}

.switch.key_full.on, .switch.key_text.on {

    .piece_key { // Path

        border-color: hsl(187, 100%, 60%);
        background: $bg_switch_type_key_path_on;
        box-shadow: 0px 0px 6px 0px hsla(188, 100%, 45%, 0.50);
    }

    .piece_key::before { // Ball

        border: 1px solid hsl(187, 100%, 80%); 
        background: $bg_switch_type_key_on_ball;
        box-shadow: 0px 0px 13px 0px hsl(188, 100%, 60%); 
    } 
}

.switch.key_full.disabled, .switch.key_text.disabled {

    .piece_key::before { // Ball

        border-top: 0;
        border-bottom: 0;
    }

    .piece_label {
        color: adjust-color($color_text, $alpha: -0.5);
    }
}

.switch.key_full.on.disabled, .switch.key_text.on.disabled {

    .piece_key { // Path

        box-shadow: none;
    }
    
    .piece_key::before { // Ball

        border: 2px solid hsl(187, 100%, 80%);
        box-shadow: none;
    }
}

.switch.key_full.inverted, .switch.key_text.inverted {

    // justify-content: space-between;
    justify-content: initial;

    .piece_key {

        /*  
        order: 1;
        margin-left: 18px; 
        margin-right: 0;
        */

        order: initial;
        margin-left: 0px; 
        margin-right: 12px;
    }
} 

/*  TODO:            3 ▶ Sizes & Positions
◈──────────────────────────────────────────────────────◈ */

// Tamanho para tela grande

.switch.key_full, .switch.key_text {

    .piece_key { // Path

        min-width: 47px;
        height: 6px; 
        border: 1px solid black;
    }

    .piece_key::before { // Ball

        top: -11px;
        left: -2px;
        width: $switch_type_key_ball_size;
        height: $switch_type_key_ball_size;
        border: 0;
    }

    .piece_key::after { // Shine

        top: -19px; // calc(-0.9 * #{$switch_type_key_ball_size} + 3px);
        left: -21px; //calc(-1.05 * #{$switch_type_key_ball_size} + 0.25 * #{$switch_type_key_ball_size} - 2px); 
        width: 14px; // calc(0.585 * #{$switch_type_key_ball_size});
        height: 14px; // calc(0.585 * #{$switch_type_key_ball_size});
    }
}

.switch.key_full.on, .switch.key_text.on {
    
    .piece_key::before { // Ball

        top: -10px; 
        left: 23px; 
        width: calc(#{$switch_type_key_ball_size} + 2); 
        height: calc(#{$switch_type_key_ball_size} + 2); 
        transition: all 0.39s; 
    }

    .piece_key::after { // Shine
        
        top: calc(-0.9 * #{$switch_type_key_ball_size} + 4px);
        left: calc(-1.05 * #{$switch_type_key_ball_size} + 0.25 * #{$switch_type_key_ball_size} + 23px); 
        transition: all 0.39s; 
    }
}

@media (max-width: $screen_small_widthLimit), (max-height: $screen_small_widthLimit) {

    // Tamanho para tela pequena

    .switch.key_full, .switch.key_text {

        .piece_key { // Path

            min-width: calc(53px + #{$switch_type_key_ball_size_SS} - #{$switch_type_key_ball_size});
            height: 8px; 
            background: $bg_switch_type_key_path_off_SS;
        }
    
        .piece_key::before { // Ball

            top: -12px;
            width: $switch_type_key_ball_size_SS;
            height: $switch_type_key_ball_size_SS;
            background: $bg_switch_type_key_ball;
        }

        .piece_key::after { // Shine

            top: calc(-0.9 * #{$switch_type_key_ball_size_SS} + 4px);
            left: calc(-1.05 * #{$switch_type_key_ball_size_SS} + 0.25 * #{$switch_type_key_ball_size_SS} - 2px); 
            width: calc(0.6 * #{$switch_type_key_ball_size_SS});
            height: calc(0.6 * #{$switch_type_key_ball_size_SS}); 
        }
    }
    
    .switch.key_full.on, .switch.key_text.on {

        .piece_key { // Path

            box-shadow: 0px 0px 6px 0px hsla(188, 100%, 50%, 0.60);
        }
        
        .piece_key::before { // Ball

            top: -11px; 
            left: 29px;  
            width: calc(#{$switch_type_key_ball_size_SS} + 2); 
            height: calc(#{$switch_type_key_ball_size_SS} + 2); 
        }

        .piece_key::after { // Shine
            
            top: calc(-0.9 * #{$switch_type_key_ball_size_SS} + 5px);
            left: calc(-1.05 * #{$switch_type_key_ball_size_SS} + 0.25 * #{$switch_type_key_ball_size_SS} + 29px); 
            transition: all 0.42s; 
        } 
    }
}


/*  TODO:    1 ▶ Choices
◈──────────────────────────────────────────────────────◈ */

/*
$bg_element_type_button_blue
$box_shadow_element_type_button_blue
*/

.choice.horizontal, .choice.vertical, .choice.dropdown {

    visibility: hidden;
    display: inline-block;
    font-size: 0;

    width: max-content; -moz-width: fit-content; width: -moz-fit-content; width: fit-content; /* <- Declarações necessárias 
    para garantir que o Firefox funcione como se suportasse 'width: fit-content'. (Ao menos 1 delas deve funcionar.) */

    padding: 0;
    margin: 0;
    list-style-type: none;
    //border: 1px solid adjust-color($color_theme, $lightness: -1%);
    // text-shadow: 1px 1px 1px $color_shadow_text; // <- Parte do estilo de choice anterior!

    li + li {
        margin-top: 0;
    }
}

.choice.horizontal > li::before, .choice.vertical > li::before, .choice.dropdown > li::before { 
    content: "" 
}

.choice.horizontal > li a, .choice.vertical > li a, .choice.dropdown > li a {

    display: inline-flex;
    align-items: center;
    width: 100%;
    height: 100%;
}

.choice.horizontal > li, .choice.vertical > li, .choice.dropdown > li {

    span {

        display: inline-flex;
        justify-content: center;
        align-items: center; 
        color: $color_text_window;
        font-weight: bold;
        filter: $filter_element_type_button_piece_text_blue; // <- Parte do estilo de choice novo!
    }

    span:hover {
        
        filter: drop-shadow(0px 0px 2px hsl(193, 100%, 36%)); // <- Parte do estilo de choice novo! 
    }
}

.choice.horizontal > li span > img, .choice.vertical > li span > img, .choice.dropdown > li span > img {

    margin-right: 6px;
}

/*  TODO:        2 ▶ Horizontal
◈──────────────────────────────────────────────────────◈ */

.choice.horizontal {

    display: inline-flex;
    border-radius: 1000px;
    // background: $bg_choice; // <- Parte do estilo de choice anterior!
    // box-shadow: // <- Parte do estilo de choice anterior!
    // inset 0px -4px 5px 3px $color_shadow_box_inset_dark,
    // inset 5px 5px 5px 0px $color_shadow_box_inset_clear;

    // background: ; // <- Parte do estilo de choice novo!
    // linear-gradient(to top, hsl(195, 100%, 100%), hsla(195, 100%, 100%, 0.64), hsla(195, 100%, 100%, 0) 46%),
    // linear-gradient(to bottom, hsl(195, 100%, 80%), hsl(195, 100%, 67%), hsl(195, 100%, 60%)); 
    
    background: $bg_element_type_button_blue; // <- Parte do estilo de choice novo!

    // box-shadow: inset 0px 0px 9px 6px white, 0px 0px 0px 1px hsl(195, 100%, 77%); // <- Parte do estilo de choice novo!
    box-shadow: $box_shadow_element_type_button_blue; // <- Parte do estilo de choice novo!

    > li {
        display: inline-flex;
        justify-content: center;
        align-items: center; 
        min-height: $button_height_small;

        a {
            min-height: $button_height_small;
        }

        span {

            padding: 0 10px;

            &[textIconCSS] { // Este atributo HTML é adicionado automaticamente aos ícones de texto CSS via JS.
        
                margin-left: 10px;
            }

            .textIconHTML {
                
                margin-right: 9px;
                margin-bottom: 2px;
            }
        }
    }

    > li:nth-of-type(1) {
        border-right: 1px solid $color_text_window; 
        border-top-left-radius: 1000px;
        border-bottom-left-radius: 1000px;

        // background: $bg_choice_label; // <- Parte do estilo de choice anterior!
        text-shadow: 1px 1px 1px $color_shadow_text;
        // box-shadow: // <- Parte do estilo de choice anterior!
        // inset 0px -4px 5px 3px $color_shadow_box_inset_dark,
        // inset 5px 5px 5px 0px $color_shadow_box_inset_clear;

        background: // <- Parte do estilo de choice novo!
        linear-gradient(to top, hsl(195, 100%, 100%), hsla(195, 100%, 100%, 0.64), hsla(195, 100%, 100%, 0) 46%),
        linear-gradient(to bottom, hsl(195, 100%, 70%), hsl(195, 100%, 57%), hsl(195, 100%, 50%));

        box-shadow: inset 2px 0px 9px 4px hsl(195, 100%, 41%), 0px 0px 0px 1px hsl(195, 100%, 77%); // <- Parte do estilo de choice novo!
            
        span {
            padding-left: 15px;
        }
    }
     
    > li:nth-of-type(2) {
        border-left-width: 0px;
    }

    > li:nth-last-of-type(1) { 

        a { 
            border-top-right-radius: 1000px;
            border-bottom-right-radius: 1000px;
        }

        > a > img {
            border-top-right-radius: 1000px;
            border-bottom-right-radius: 1000px;
        }

        span {
            padding-right: 15px;
        }
    }

    // > li a:hover {

    //     background: hsla(0, 0%, 100%, 0.25); 
    //     // text-shadow: 1px 1px 1px $color_shadow_text_strong; // <- Parte do estilo de choice anterior!
    // }

    // > li:nth-of-type(1) a:hover {
    //     background: 0;
    //     text-shadow: 1px 1px 1px $color_shadow_text;
    // }

    > li + li {
        border-left: 1px solid $color_text_window;
    }
}
 

/*  TODO:        2 ▶ Vertical
◈──────────────────────────────────────────────────────◈ */

.choice.vertical {

    border-radius: $border_radius_default;
    // background: $bg_choice; // <- Parte do estilo de choice anterior!
    // box-shadow: // <- Parte do estilo de choice anterior!
    // inset 0px -4px 5px 3px $color_shadow_box_inset_dark,
    // inset 5px 5px 5px 0px $color_shadow_box_inset_clear;

    // background: // <- Parte do estilo de choice novo!
    // linear-gradient(to bottom, hsla(195, 100%, 100%, 0) 46%, hsla(195, 100%, 100%, 0.64), hsla(0, 0%, 100%, 0.9)), 
    // linear-gradient(to bottom, hsl(195, 100%, 80%), hsl(195, 100%, 67%), hsl(195, 100%, 60%)); 
    
    background: // <- Parte do estilo de choice novo!
    linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.7), white), hsl(195, 100%, 55%);

    // box-shadow: inset 0px 0px 9px 6px white, 0px 0px 0px 1px hsl(195, 100%, 77%); // <- Parte do estilo de choice novo!

    box-shadow: $box_shadow_element_type_button_blue; // <- Parte do estilo de choice novo!

    > li {
        display: flex;
        align-items: center;
        min-height: $button_height;

        a {
            min-height: $button_height;
        }

        span {

            padding: 0px 19px 0px 17px;

            &[textIconCSS] { // Este atributo HTML é adicionado automaticamente aos ícones de texto CSS via JS.

                margin-left: 17px;
            }

            .textIconHTML {
                
                margin-right: 9px;
                margin-bottom: 2px;
            }
        }
    }

    // > li a:hover {
        // background: $bg_choice_selector; // <- Parte do estilo de choice anterior!
        // background: hsla(0, 0%, 100%, 0.3);
        // text-shadow: 1px 1px 1px $color_shadow_text_strong; // <- Parte do estilo de choice anterior!
    // }

    // > li:nth-of-type(1) a:hover {
    //     background: 0;
    //     text-shadow: 1px 1px 1px $color_shadow_text;
    // }

    > li:nth-of-type(1) {

        border-top-left-radius: 20px;
        border-top-right-radius: 20px;

        justify-content: center;
        // background: $bg_choice_label; // <- Parte do estilo de choice anterior!
        text-shadow: 1px 1px 1px $color_shadow_text;
        // box-shadow:  // <- Parte do estilo de choice anterior!
        // inset 0px -4px 5px 3px $color_shadow_box_inset_dark,
        // inset 5px 5px 5px 0px $color_shadow_box_inset_clear;

        background: // <- Parte do estilo de choice novo!
        linear-gradient(to top, hsl(195, 100%, 100%), hsla(195, 100%, 100%, 0.64), hsla(195, 100%, 100%, 0) 46%),
        linear-gradient(to bottom, hsl(195, 100%, 70%), hsl(195, 100%, 57%), hsl(195, 100%, 50%));

        box-shadow: inset 2px -2px 9px 4px hsl(195, 100%, 41%), 0px 0px 0px 1px hsl(195, 100%, 77%); // <- Parte do estilo de choice novo! // Escuro
        //box-shadow: inset 0px 2px 2px 0px hsl(195, 100%, 34%); // <- Parte do estilo de choice novo! // Claro

        a {
            display: flex;
            justify-content: center;
        }
    }

    > li:nth-last-of-type(1) {
        border-bottom-left-radius: 20px;
        border-bottom-right-radius: 20px;

        a {
            border-bottom-left-radius: 20px;
            border-bottom-right-radius: 20px; 
        }

        > a > img {
            border-bottom-left-radius: 20px;
            border-bottom-right-radius: 20px;
        }
    }
   
    > li + li {
        border-top: 1px solid $color_text_window;
    }
}


/*  TODO:        2 ▶ Dropdown
◈──────────────────────────────────────────────────────◈ */

.choice.dropdown {

    border-radius: 1000px;
    // background: $bg_choice; // <- Parte do estilo de choice anterior!

    // background: // <- Parte do estilo de choice novo!
    // linear-gradient(to top, hsl(195, 100%, 100%), hsla(195, 100%, 100%, 0.64), hsla(195, 100%, 100%, 0) 46%),
    // linear-gradient(to bottom, hsl(195, 100%, 80%), hsl(195, 100%, 67%), hsl(195, 100%, 60%)); 
    
    background: $bg_element_type_button_blue; // <- Parte do estilo de choice novo!

    // box-shadow: // <- Parte do estilo de choice anterior!
    // inset 0px -4px 5px 3px $color_shadow_box_inset_dark,
    // inset 5px 5px 5px 0px $color_shadow_box_inset_clear;

    box-shadow: inset 0px 0px 9px 6px $color_shadow_box_inset_element_type_button_clear, 0px 0px 0px 1px $color_theme_2; // <- Parte do estilo de choice novo!
    
    > li {
        display: inline-flex;
        justify-content: center;
        align-items: center;
        min-height: $button_height_small;

        span {
            padding: 0 10px 0 14px;
        
            &[textIconCSS] { // Este atributo HTML é adicionado automaticamente aos ícones de texto CSS via JS.
        
                margin-left: 14px;
                background-position-y: 7px;
            }
    
            .textIconHTML {
                
                margin-right: 9px;
                margin-bottom: 2px;
            }
        }

        > a > img {
            border-radius: 1000px;
        }

        span::after { 
            content: "▼";

            /* font-size: $font_size; 
            margin-left: 5rem; */

            font-size: 22px;
            margin-left: 6rem;
            margin-bottom: 1px;
        }
    }

    > li:not(:nth-of-type(1)) {
        display: none;
    }

    > li:nth-of-type(1) {

        background: 0;

        cursor: pointer;

        > img {
            border-radius: 1000px;
        }
    }
}

@media not all and (pointer: coarse) {

    .choice.dropdown:not(.disabled, .dropdown_open):hover {

        background: linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.64), white), hsl(193, 100%, 83%);
        
        box-shadow: inset 0px 0px 9px 5px white, 0px 0px 12px 0px $color_theme;
    }
}

// Dropdown - Open:

.choice.dropdown.dropdown_open {

    position: fixed; top: 0; bottom: 0; left: 0; right: 0;
    z-index: $zIndex_choice_d_open;
    width: auto;
    margin: 0;
    border-radius: 0px;
    // background: $bg_choice_d_open; // <- Parte do estilo de choice anterior!
    background:  // <- Parte do estilo de choice novo! 
    // linear-gradient(127deg, hsl(180, 100%, 72%), hsla(180, 100%, 50%, 0) 71%),
    // linear-gradient(217deg, hsl(195, 100%, 50%), hsla(195, 100%, 50%, 0) 71%),
    // linear-gradient(336deg, hsl(204, 100%, 54%), hsla(0, 0%, 100%, 0) 71%),
    // white;

    linear-gradient(217deg, hsla(195, 100%, 50%, 0.8), hsla(195, 100%, 50%, 0) 71%),
    linear-gradient(127deg, hsla(0, 0%, 88%, 0.8), hsla(0, 0%, 88%, 0) 71%),
    linear-gradient(336deg, hsla(180, 100%, 50%, 0.8), hsla(180, 100%, 50%, 0) 71%),
    white;

    overflow-y: auto;

    > li {
        display: flex;
        flex-direction: column;
        justify-content: center; // <- Neste caso, alinha verticalmente!

        position: relative; top: $button_height_small;
        width: 100%;

        span {

            // filter: drop-shadow(0px 0px 2px hsl(193, 100%, 34%)); // <- Parte do estilo de choice novo! 

            &[textIconCSS] { // Este atributo HTML é adicionado automaticamente aos ícones de texto CSS via JS.

                margin-left: 11px; 
                background-position-y: 4px;
            }
        }

        > a {
            flex-grow: 1;
            justify-content: center;

            img {
                border-radius: 0px;
            }
        }

        a > span::after {

            content: "";
            margin-left: 0;
        }
    }

    > li:nth-of-type(1) {
        display: none;
    }

    > li:nth-of-type(2) {
        border-top: 1px solid $color_text_window;
    }

    > li:nth-last-of-type(1) { // Esta regra só deve existir caso o último 'li' tiver sido criado via JS.
        border: 0;
    }

    li span {
        padding: 0 11px 0 11px;
    }

    > li:nth-of-type(2) > a > img[src] {
        border-radius: 0;
    }

    > li + li {
        border-bottom: 1px solid $color_text_window;
    }

    /* @media (min-width: $screen_small_widthLimit) and (min-height: $screen_small_widthLimit) {  > li { position: relative; top: calc(3 * #{$button_height_small}); } } */
}

// Dropdown - Open - Scrollbars:
 
@if($enableAlternativeScrollbarStyle == true){

    .choice.dropdown.choice.dropdown_open {
            
        scrollbar-width: auto;
        scrollbar-color: hsl(195, 100%, 76%) hsla(180, 100%, 100%, 0.3);
    }
}

.choice.dropdown.choice.dropdown_open::-webkit-scrollbar { // Entire bar

    width: 12px;
    height: 13px;
}

.choice.dropdown.choice.dropdown_open::-webkit-scrollbar-thumb { // Bar pointer

    background: linear-gradient(to bottom, hsl(180, 100%, 85%), hsl(195, 100%, 55%));    
    box-shadow: inset 0px 0px 0px 1px hsl(195, 100%, 100%);
}

.choice.dropdown.choice.dropdown_open::-webkit-scrollbar-thumb:hover { // Bar pointer hover

    background: linear-gradient(to bottom, hsl(180, 100%, 91%), hsl(195, 100%, 71%));    
}

.choice.dropdown.choice.dropdown_open::-webkit-scrollbar-track {   // Bar background

    border-top: 1px solid white;
    border-left: 1px solid white;
    background: linear-gradient(to right, hsla(180, 100%, 100%, 0.3), hsla(195, 100%, 100%, 0));
}

/* @media (pointer: fine) {

    .choice.dropdown.choice.dropdown_open {
        overflow: hidden;
    }
    
    .choice.dropdown.choice.dropdown_open:hover {
        overflow: auto;
    }
}*/


/*  TODO:        2 ▶ Option ON
◈──────────────────────────────────────────────────────◈ */


.choice.horizontal > li > a.on, .choice.vertical > li > a.on, .choice.dropdown.choice.dropdown_open > li > .on { 

    // background: $bg_choice_selector; // <- Parte do estilo de choice anterior!
    background: hsla(0, 0%, 100%, 0.5);
    // text-shadow: 1px 1px 1px $color_shadow_text_strong; // <- Parte do estilo de choice anterior!

    span {

        filter: drop-shadow(0px 0px 2px hsl(193, 100%, 36%)); // <- Parte do estilo de choice novo! 
    }
}

.choice.vertical > li > a.on { 

    // background: linear-gradient(to bottom, hsla(0, 0%, 100%, 0.6), hsla(0, 0%, 100%, 0.9), hsla(0, 0%, 100%, 1), hsla(0, 0%, 100%, 0.9), hsla(0, 0%, 100%, 0.6)); // <- Parte do estilo de choice novo! 
    // background: hsl(195, 100%, 93%);// <- Parte do estilo de choice novo!
    // background: hsla(0, 0%, 100%, 0.8);// <- Parte do estilo de choice novo! 
    background: hsla(195, 100%, 98%, 0.9);// <- Parte do estilo de choice novo!
}


/*  TODO:        2 ▶ No Label
◈──────────────────────────────────────────────────────◈ */

.no_label {

    > li:nth-of-type(1) {
        display: none;
    }
}

.choice.horizontal.no_label {

    > li:nth-of-type(2) a { 
        border-top-left-radius: 1000px;
        border-bottom-left-radius: 1000px;
    }

    > li:nth-of-type(2) span {

        padding-left: 15px;
    }

    > li:nth-of-type(2) > a > img {
            border-top-left-radius: 1000px;
            border-bottom-left-radius: 1000px;
    }
}

.choice.vertical.no_label > li:nth-of-type(2) { 

        border-top-width: 0; 

        a {
            border-top-left-radius: 20px;
            border-top-right-radius: 20px;
        }

    > a > img {
        border-top-left-radius: 20px;
        border-top-right-radius: 20px;
    }
}

.choice.dropdown.no_label {

    > li:nth-of-type(2) {

        display: inline-flex;
    
        span::after { 
            content: "▼";

            /* font-size: $font_size; 
            margin-left: 5rem; */

            font-size: 22px;
            margin-left: 6rem;
            margin-bottom: 1px;
        }

        > a > img {
            border-radius: 1000px;
        }
    }
}

.choice.dropdown.no_label.choice.dropdown_open > li:nth-of-type(2) > a > img  {

    border-bottom-left-radius: 0px;
    border-bottom-right-radius: 0px;
}

.choice.dropdown.no_label.choice.dropdown_open > li:nth-of-type(2) span::after {

    content: "";
    margin-left: 0;
}


/*  TODO:        2 ▶ Disabled
◈──────────────────────────────────────────────────────◈ */

.choice.horizontal.disabled, .choice.vertical.disabled, .choice.dropdown.disabled {
    opacity: 0.5;
}

.choice.horizontal.disabled *, .choice.vertical.disabled *, .choice.dropdown.disabled * {
    cursor: default !important; 
}

.choice.horizontal > li > a.disabled, .choice.vertical > li > a.disabled, .choice.dropdown > li > a.disabled {

    cursor: default; 
}

.choice.horizontal > li > a.disabled > *:not(.choice_shine_top) {

    opacity: 0.5;
}

.choice.vertical > li > a.disabled, .choice.dropdown > li > a.disabled {
    
    opacity: 0.5;
}

.choice.horizontal.disabled > li > a, .choice.vertical.disabled > li > a {
    background: 0 !important;
    text-shadow: 1px 1px 1px $color_shadow_text !important;
}

.choice.horizontal > li > a.disabled, .choice.vertical > li > a.disabled {
    background: 0 !important;
    text-shadow: 1px 1px 1px $color_shadow_text !important;
}

/*  TODO:        2 ▶ Shine // <- Parte do estilo de choice novo!
◈──────────────────────────────────────────────────────◈ */
 
.choice.horizontal {

    li {
        position: relative;
    }
    
    .choice_shine_top { 
          
        content: '';
        position: absolute;
        top: 0px;  
        z-index: 1; 
        width: 100%;
        height: 52%;
        background: $mainShines;
    }

    li:nth-of-type(1) .choice_shine_top { 
        
        $left: 9px;
    
        left:  $left;
        width: calc(100% - #{$left});

        border-top-left-radius: 1000px;
        border-bottom-left-radius: 1000px; 
    }

    li:nth-last-of-type(1) .choice_shine_top { 
        
        $right: 9px;
    
        right:  $right;
        width: calc(100% - #{$right});

        border-top-right-radius: 1000px;
        border-bottom-right-radius: 1000px; 
    }
}

.choice.horizontal.no_label li:nth-of-type(2) .choice_shine_top {
        
    $left: 9px;

    left:  $left;
    width: calc(100% - #{$left});

    border-top-left-radius: 1000px;
    border-bottom-left-radius: 1000px; 
}

.choice.vertical {

    li {
        position: relative;
    }

    .choice_shine_top { 
          
        content: '';
        position: absolute;
        z-index: 1; 

        $offset: 1px;
        top: $offset;  
        height: calc(52% - #{$offset}) ;
        
        background: linear-gradient(to bottom, white, hsla(0, 0%, 100%, 0.7), hsla(0, 0%, 100%, 0.2)); 
        border-top-left-radius: 1000px;
        border-top-right-radius: 1000px;
        border-bottom-left-radius: 650px; 
        border-bottom-right-radius: 650px; 
        
        $left: 7px;  
    
        left:  $left;
        width: calc(100% - 2 * #{$left});
    }
}

.choice.dropdown {

    position: relative;
    cursor: pointer;

    .choice_shine_top { 
          
        content: '';
        position: absolute;
        top: 0px;  
        z-index: 1; 
        height: 52%;
        background: $mainShines; 
        border-radius: 1000px;
        
        $left: 9px;  
    
        left:  $left;
        width: calc(100% - 2 * #{$left});
    }
}

.choice.dropdown.dropdown_open {

    cursor: default;
}

/*  
◈──────────────────────────────────────────────────────◈
TODO: Components
◈──────────────────────────────────────────────────────◈ */


/*  TODO:    1 ▶ Outdoors
◈──────────────────────────────────────────────────────◈ */

img.outdoor, video.outdoor {
    display: block;
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;
}

@media (min-width: $screen_small_widthLimit) {

    img.outdoor, video.outdoor {
        max-width: calc(100% - (2 * #{$margin_horizontal}) );
        border-radius: $border_radius_big; 
    }
}

// figure:

figure.outdoor {
    margin-left: auto;
    margin-right: auto;
    text-align: center;
}

figure.outdoor img {
        max-width: 100%;
}

@media (min-width: $screen_small_widthLimit) {

    figure.outdoor {
        max-width: calc(100% - (2 * #{$margin_horizontal}) );
}
    figure.outdoor img {
        border-radius: 40px;
        // box-shadow: 6px 6px 24px -15px black;
    }
    
}

// img, video, figure:

@media (max-height: $screen_small_widthLimit) {

    img.outdoor, video.outdoor, figure.outdoor img { 
        max-height: 100vh;
        //max-height: calc(100vh - #{$button_height}) ;
    }
}


/*  TODO:    1 ▶ Galleries
◈──────────────────────────────────────────────────────◈ */
 
.gallery {

    display: none;
    position: relative;
    border-top: 2px solid $color_theme;
    border-bottom: 2px solid $color_theme;

    .painel {
        display: flex;
        justify-content: center;
        align-items: center;
        position: absolute;
        width: 100%;
        height: 100%;

        .order {
            position: absolute;
            // color: hsl(0, 0%, 50%);
            bottom: 20px;
            font-weight: bold;
            padding: 0 6px;
            // border: 2px solid black;
            border-radius: 1000px;
            // background-color: hsla(0, 0%, 100%, 0.13);
            text-shadow: -1px 0px 1px white, 0px -1px 1px white, 1px 0px 1px white, 0px 1px 1px white;
            // filter: drop-shadow(0px 0px 6px white);
            cursor: pointer;
            opacity: 0;
        }

        $btns_laterais_width: 14%;
        $btn_middle_width: calc(100% - 2 * #{$btns_laterais_width});

        .btn_back, .btn_next {
            width: $btns_laterais_width;
            height: 100%;
            margin: 0;
            background: 0;

            img {
                width: 26px; // Min: 8%;
                opacity: 0.5;
                filter: drop-shadow(0px 0px 7px white);
            }
        }

        .btn_fullScreen {
            width: $btn_middle_width; // 76%;
            height: 100%;
            margin: 0;
            background: 0;

            /* 
            img {
                width: 62%;
                padding: 6px 8px;
                border: 2px solid black;
                border-radius: 1000px;
                // background-color: hsla(0, 0%, 100%, 0.20);
                filter: drop-shadow(0px 0px 6px white);

                @media (min-width: $screen_small_widthLimit) { 
                    width: 46%;
                    border: 4px solid black; 
                }
            } */
        }

        .btn_back:focus, .btn_fullScreen:focus, .btn_next:focus {
            outline: 0;
        }
    }

    .imgsBox {

        img {
            max-width: 100%;
            max-height: calc(100vh - 4px);
        }

        img:not(:nth-of-type(1)) {
            display: none;
        }
    }

    @media (min-width: calc(#{$central_maxWidth} + 4px) ) { 

        border-left: 2px solid $color_theme;
        border-right: 2px solid $color_theme;
    }
    
    /*   
    button {
        border: 0;
        background: rgba(150,150,150,0.6);
        text-shadow: 1px 1px 1px white;
        border: 1px solid #999;
        position: absolute;
        cursor: pointer;
        top: 2px;
        left: 2px; 
    } */
}

.gallery_fullScreen {

    position: fixed;
    z-index: $zIndex_gallery_fullScreen;
    top: 0;
    left: 0;
    width: 100vw !important;
    height: 100vh !important;
    border: 0;
    border-radius: 0;
    margin: 0; 

    display: flex !important;
    justify-content: center;
    align-items: center;

    background:  
    linear-gradient(217deg, hsla(195, 100%, 50%, 0.8), hsla(195, 100%, 50%, 0) 71%),
    linear-gradient(127deg, hsla(0, 0%, 88%, 0.8), hsla(0, 0%, 88%, 0) 71%),
    linear-gradient(336deg, hsla(180, 100%, 50%, 0.8), hsla(180, 100%, 50%, 0) 71%),
    white;

    .imgsBox img {
        max-height: 100%;
        // max-width: 100vw;
        // max-height: 100vh;
        // max-width: initial;
        // max-height: initial;
    }
}

.gallery.border_radius_big {

    border-radius: 0;

    @media (min-width: calc(#{$central_maxWidth} + 4px) ) { 

        border-radius: $border_radius_big;

        img {
            border-radius: $border_radius_big;
        }
    }
}

.gallery_fullScreen.border_radius_big {

    border-radius: 0;

    .imgsBox img {
            
        border-radius: 0;
    }
}


/* 
.gallery img {
    width: 50%;
}

.gallery a {
    font-size: 0;
}

@media (min-width: $screen_small_widthLimit) { 

    .gallery {
        margin-left: $margin_horizontal;
        margin-right: $margin_horizontal;
    }

    .gallery img { 
        width: 25%; 
    } 
}
 */

/*  TODO:    1 ▶ Sliders
◈──────────────────────────────────────────────────────◈ */

.slider {

    white-space: nowrap;

    border-top: 2px solid $color_theme;
    border-bottom: 2px solid $color_theme;
    overflow-x: auto;
    overflow-y: hidden;

    img +  img {

        border-left: 2px solid $color_theme; 
    }

    @media (min-width: $screen_small_widthLimit) {

        border: 2px solid $color_theme;
    }
}
 
.slider img, .slider picture {

    max-width: 94%;   
    max-height: calc(100vh - 4px);
}
/* 
@media (max-height: $screen_small_widthLimit) {

    .slider img, .slider picture {

        max-height: calc(100vh - 4px);
    }
}
 */
@media (min-width: $screen_small_widthLimit) {  

    .slider { 

        margin-left: $margin_horizontal;
        margin-right: $margin_horizontal;
    }
}

@media (pointer: fine) {

    .slider {

        overflow-x: hidden;
    }
    
    .slider:hover {

        overflow-x: auto;
    }
}

.slider_fullScreen {

    position: fixed;
    z-index: $zIndex_slider_fullScreen;
    top: 0;
    left: 0;
    // right: 0;
    // bottom: 0;
    width: 100vw;
    height: 100vh;

    display: flex;
    justify-content: center;
    align-items: center;

    background:  
    linear-gradient(217deg, hsla(195, 100%, 50%, 0.8), hsla(195, 100%, 50%, 0) 71%),
    linear-gradient(127deg, hsla(0, 0%, 88%, 0.8), hsla(0, 0%, 88%, 0) 71%),
    linear-gradient(336deg, hsla(180, 100%, 50%, 0.8), hsla(180, 100%, 50%, 0) 71%),
    white;

    .slider {
        margin: 0; 
        border-radius: 0;
    }
}


// Slider scrollbar:
 
@if($enableAlternativeScrollbarStyle == true){

    .slider {
            
        scrollbar-width: auto;
        scrollbar-color: $color_theme hsl(195, 100%, 100%);
    }
}

/* // Scrollbar anterior do slider

.slider::-webkit-scrollbar { // Entire bar

    height: 12px;
}

.slider::-webkit-scrollbar-thumb { // Bar pointer

    background: hsl(0, 0%, 74%);
    box-shadow: none;
}
   
.slider::-webkit-scrollbar-track { // Bar background

    background: hsl(0, 0%, 98%); 
    border: 1px solid hsl(0, 0%, 86%);
    border-radius: 1000px; 
}
*/

.slider::-webkit-scrollbar { // Entire bar

    width: 14px;
    height: 14px;
}

.slider::-webkit-scrollbar-thumb { // Bar pointer  
    
    $delta_deg: 51deg;

    background:
    linear-gradient(calc(217deg + #{$delta_deg}), hsla(195, 100%, 50%, 0.8), hsla(195, 100%, 50%, 0) 71%),
    linear-gradient(calc(127deg + #{$delta_deg}), hsla(0, 0%, 100%, 0.8), hsla(0, 0%, 100%, 0) 71%),
    linear-gradient(calc(336deg + #{$delta_deg}), hsla(190, 100%, 83%, 0.8), hsla(190, 100%, 80%, 0) 71%),
    white;

    box-shadow: inset 0px 0px 0px 1px hsla(195, 100%, 50%, 0.18);
}

.slider::-webkit-scrollbar-thumb:hover { // Bar pointer hover

    $delta_deg: 51deg;

    background:
    linear-gradient(calc(217deg + #{$delta_deg}), hsla(195, 100%, 78%, 0.8), hsla(195, 100%, 50%, 0) 71%),
    linear-gradient(calc(127deg + #{$delta_deg}), hsla(0, 0%, 100%, 0.85), hsla(0, 0%, 100%, 0) 71%),
    linear-gradient(calc(336deg + #{$delta_deg}), hsla(190, 100%, 92%, 0.8), hsla(190, 100%, 80%, 0) 71%),
    white;

    box-shadow: inset 0px 0px 0px 1px hsla(195, 100%, 50%, 0.25);
} 

.slider::-webkit-scrollbar-track {   // Bar background

    border: 0;
    border-top: 2px solid $color_theme;
    // background: radial-gradient(white, hsl(195, 100%, 94%));
    background: white; 
}

@media (min-width: $screen_small_widthLimit) {  

    .slider.border_radius_big::-webkit-scrollbar-thumb { // Bar pointer  

        border-left-width: 1px;
        border-right-width: 1px;
    }

    .slider.border_radius_big::-webkit-scrollbar-track { // Bar background
        
        border: 1px solid $color_theme;
        border-radius: 1000px;
    }
}

/*  TODO:    1 ▶ Cards & Posters
◈──────────────────────────────────────────────────────◈ */


/*  TODO:        2 ▶ Cards
◈──────────────────────────────────────────────────────◈ */

.card {
    display: inline-flex;
    flex-direction: column;
    align-items: center;
    margin-top: $margin_vertical;
    margin-bottom: $margin_vertical;
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal;
    color: $color_text;
}

.card_text { 

    h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14, h15, h16, h17, h18, h19, h20 { // <- Desfaz o bg como cor do texto.
            
        background: 0;
        -webkit-background-clip: border-box;
        -webkit-text-fill-color: currentcolor;
        background-clip: border-box;
        text-fill-color: currentcolor; 

        line-height: 1.15; // Bug fix: Evita que as linhas dos <hx>s fiquem muito altas quando estiver dentro de um codeEx.
    }
    
    > :nth-last-child(1) { 

        margin-bottom: 0;
    }
}

.card_img {
    max-width: 100%; 
    max-height: 100%;
    border-radius: $border_radius_default;
}

.card.horizontal_1, .card.horizontal_2 {

    flex-direction: row;

    .card_img {
        max-width: 40%; 
    }

    .card_text {

        h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14, h15, h16, h17, h18, h19, h20 {

            //font-size: $font_size;
            text-align: left;
        }
    }
}

.card.horizontal_1 { // Card + Float

    display: inline-block; // <- Hack necessário para o card não bugar no Safari do desktop.
    display: flow-root;
    margin-top: 0; 
    margin-bottom: 0;

    .card_img {
        float: left;
        margin-top: $margin_vertical;
        margin-right: $margin_horizontal; 
    }

    .card_text { 
        
        > * {
            margin-left: 0; 
            margin-right: 0;
        }

        > :nth-child(1) { 
            margin-top: calc(2 * #{$margin_vertical});
        }  
    }

    .card_text::after {

        content: "";
        display: block;
        height: $margin_vertical;
        clear: both;
    }
}

.card.horizontal_2 .card_text {

    > * {
        margin-right: 0;
    }
    
    > :nth-child(1) {
        margin-top: 0;
    }
}
 

/*  TODO:        2 ▶ Posters
◈──────────────────────────────────────────────────────◈ */

.poster {
    display: inline-flex;
    flex-direction: column;
    justify-content: space-between;
    position: relative;
    color: $color_text_window;
    margin-top: $margin_vertical;
    margin-bottom: $margin_vertical;
    margin-left: $margin_horizontal;
    margin-right: $margin_horizontal;
    text-shadow: 1px 1px 1px $color_shadow_text;

    h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14, h15, h16, h17, h18, h19, h20 { // <- Desfaz o bg como cor do texto.
            
        background: 0;
        -webkit-background-clip: border-box;
        -webkit-text-fill-color: currentcolor;
        background-clip: border-box;
        text-fill-color: currentcolor; 
    }

    .textIconHTML {
        filter: drop-shadow(1px 1px 1px $color_shadow_text); 
    }
}

.poster_img {
    position: absolute; top: 0; left: 0;
    z-index: 0;
    width: 100%; 
    height: 100%; 
    border-radius: $border_radius_default;
}

.poster_header {

    z-index: 0;

    > * {
        text-align: center; 
    }
}

.poster_body { 

    z-index: 0;

    > p {
        text-indent: 0;
    }
}

/*  TODO:        2 ▶ Groups
◈──────────────────────────────────────────────────────◈ */

.group_cards, .group_posters {
    display: flex;
    flex-direction: column;
}

/*
.group.h_2 {

    @media (min-width: $screen_small_widthLimit) {

        flex-direction: row;
        flex-wrap: wrap;

        > * {
            width: calc((100% - (4 * #{$margin_horizontal}))/2); 
        }
    }
}
*/

@for $i from 2 through 12 {

    .group_cards.c_#{$i}, .group_posters.c_#{$i} {

        @media (min-width: $screen_small_widthLimit) {

            flex-direction: row;
            flex-wrap: wrap;

            > * {
                width: calc((100% - ((2 * #{$i}) * #{$margin_horizontal}))/#{$i}); 
            }
        }
    }
}



/*  TODO:    1 ▶ Lightbox
◈──────────────────────────────────────────────────────◈ */

$lightbox_textAndImg_margin: 24px;

.lightbox {
    // display: none;
    display: flex;
    justify-content: center;
    align-items: center;
    position: fixed;
    z-index: $zIndex_lightbox;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;

    // opacity: 0;
}

.lightbox_closeArea {
    display: block;
    position: relative;
    background: 0; 
}

/* Lightbox Overlay */

.lightbox_closeArea::before {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: -1;
    background: 0; 
    // background: hsla(0, 0%, 100%, 0.7);
    content: "";
}

  /* Lightbox Layout */

.lightbox_layout {

    position: relative;
    // padding: 24px;
    overflow-x: hidden;
    overflow-y: auto;
    max-width: calc(100vw - (2 * #{$button_height_small}));
    max-height: calc(100vh - (3 * #{$button_height}));
    // transition: ...; // Propriedade aplicada via JS
    cursor: default;

    // $bg_lightbox: url(../../images/bgs/lightbox.png)  center /100% 100%;
    // $bg_lightbox_button: url(../../images/icons/lightbox_close.svg)  center /100% 100%, hsl(0, 0%, 33%);

    /* border-radius: $border_radius_default;  // Sky Contrast anterior 
    background: $bg_lightbox;  // Sky Contrast anterior 

    box-shadow: 6px 6px 24px -14px black,  // Sky Contrast anterior 
    inset 0px -4px 5px 3px $color_shadow_box_inset_dark,
    inset 5px 5px 5px 0px $color_shadow_box_inset_clear; */
}

.lightbox_img {
    display: none;
    max-width: calc(100% - 2 * #{$lightbox_textAndImg_margin});
    max-height: 100%;
    margin-top: calc(#{$lightbox_textAndImg_margin} + 8px); 
    margin-left: auto;
    margin-right: auto; 
}

.lightbox_img_marginBottom {
    margin-bottom: $margin_vertical;
}

.lightbox_img_rounded {
    border-radius: $border_radius_default;
}

.lightbox_text {

    margin: $lightbox_textAndImg_margin;
    font-size: $font_size;
    // text-shadow: 1px 1px 1px $color_shadow_text;  // Lightbox anterior 
    @extend .lineHeight;
    cursor: text;

    .textIconHTML {
        
        filter: drop-shadow(1px 1px 1px $color_shadow_text); 
    }
}
  
/* Close Button   // Lightbox anterior 

.lightbox_closeArea::after {

    content: "";
    position: absolute;
    top: -19px;
    right: -19px;
    z-index: 1;
    cursor: pointer;

    width: $button_height_small; 
    height: $button_height_small;
    border-radius: 50%;
    background: $bg_lightbox_button; 
    box-shadow: 6px 6px 8px -7px $color_shadow_lightbox_button,
    inset 4px 4px 5px 0px hsla(0, 0%, 100%, 0.5), 
    inset -3px -4px 5px 3px hsla(0, 0%, 0%, 0.4);
    //content: "×"; font-size: 31rem; color: white; display: flex; align-items: center; justify-content: center; 
}*/

/*  TODO:    1 ▶ Code Example
◈──────────────────────────────────────────────────────◈ */

.codeEx {

    /* * { 
        background-color: hsla(195, 100%, 50%, 0.18);
    } */

    visibility: hidden; // display: none; // Bug fix: Coloquei os 'codeEx's ocultos inicialmente via CSS, e coloquei para o exibi-los usando JS logo assim que forem manipulados por ele. Isso é necessário porque o JS demora um pouco para ser executado, o que faz com que o HTML seja exibido brevemente antes de ser manipulado pelo JS.

    margin: #{2 * $margin_vertical} 0;

    > dl  > dd {
        font-size: 0 !important;
    } 

    > dl > div > dt::before, > dl > div > dt::after {
        content: ""; 
    } 

    > .header {

            // margin-top: 0;
            margin-bottom: 0;
            text-align: center;

        > .label_ex {
            display: block;
            // color: $color_theme;
            // padding: 10px 0;
            margin-bottom: 20px;

            > * { // Elemento criado via JS
                padding: 6px 8px;
                border-radius: 1000px;
                border: 1px solid $color_border_token_blue;
                background: $bg_token_blue;
                color: $color_text_token_blue;
            }
        }

        > .description {
            display: block;
            padding: 9px 0;
            margin-top: 0px;
            margin-bottom: 0;
            border-top: 1px solid $color_theme;
            text-align: center;
        }
    }

    > .assets {
        margin-top: 0;
        margin-left: 0;
        margin-right: 0;
        margin-bottom: 0;
        // list-style: none;
    }

    > .run {
        margin: 0;
    }

    > .assets > .assets_dts_container, > .run > .run_dts_container { // Elementos criados via JS

        display: flex;
        overflow-x: auto; 
        overflow-y: hidden;
        border: 1px solid $color_theme_2 /* $color_theme */;
        box-shadow: /* 0px 0px 0px 1px $color_theme_2, */ inset 0px 0px 9px 7px white; 

        &::-webkit-scrollbar { // Entire bar
        
            height: 8px; 
        }

        &::-webkit-scrollbar-thumb { // Bar pointer 

            border-left: 1px solid hsl(0, 0%, 89%);
            // border-left: 2px solid hsl(0, 0%, 90%);
        }

        > dt {
            flex-grow: 1; 
            min-height: $button_height_small;

            > button {
                display: inline-flex;
                justify-content: center;
                align-items: center;
                width: 100%;
                height: 100%;
                min-width: 96px;
                // padding: 0px 40px; // Não colocar preenchimentos laterais pois isso faz com que os botões fiquem de tamanhos diferentes, principalmente quando ficam mais largos.
                margin-left: 0;
                margin-right: 0;
                color: $color_text_window;
                font-weight: bold;
                // background: linear-gradient(to bottom, white, hsla(0, 0%, 100%, 0.5) 52%, hsla(0, 0%, 100%, 0) 52%), $bg_element_type_button_blue, deepskyblue;
                background: 
                linear-gradient(to bottom, white, hsla(0, 0%, 100%, 0.6) 52%, hsla(0, 0%, 100%, 0) 52%), 
                linear-gradient(to bottom, hsla(0, 0%, 100%, 0) 46%, hsla(0, 0%, 100%, 0.7), white), 
                linear-gradient(to bottom, hsl(195, 100%, 64%), hsl(195, 100%, 48%), hsl(195, 100%, 50%)), 
                deepskyblue;

                $darkBlueShadow: drop-shadow(0px 0px 2px hsl(193, 100%, 40%));

                filter: $darkBlueShadow;

                > span { // Elemento criado via JS
            
                    padding: 0px 12px;
                    white-space: nowrap;
                    filter: $darkBlueShadow;
                }
            }

            > button:focus {
                outline: none;
            }

            > .on {
                background: 
                linear-gradient(to bottom, white, hsla(0, 0%, 100%, 0.75) 52%, hsla(0, 0%, 100%, 0) 52%), 
                linear-gradient(to bottom, hsla(0, 0%, 100%, 0.5) 46%, hsla(0, 0%, 100%, 0.8), white), 
                linear-gradient(to bottom, hsl(195, 100%, 64%), hsl(195, 100%, 48%), hsl(195, 100%, 50%)), 
                deepskyblue; 
            }
        }
    }

    > .run > .run_dts_container /* Elemento criado via JS */ > dt > button > span { // Elemento criado via JS
            
        min-width: 132px;
    }

    /* .assets > dl > div {
        display: block;
    } */

    > .assets > dd, > .run > dd {
        display: none;
    }

    > .assets > dd:nth-of-type(1), > .run > dd:nth-of-type(1) {
        display: block;
    }

    > .assets > .box_code {

        > pre {

            max-height: calc(100vh - (2 * #{$button_height}) /* - (2 * #{$margin_vertical}) */);
            padding: $margin_vertical calc(#{$margin_horizontal} + 6px);
            margin: 0;
            white-space: normal;
            // white-space: pre-line;
            @extend .window_blackScreen;
            overflow-x: auto;

            > code {
                // @extend .font_monospace;
                @extend .windowText_blueNeon;

                > span {
                    white-space: pre;
                }
            }
        }

        > pre::-webkit-scrollbar-thumb {
            // background-color: white;
            // box-shadow: none;
        }

        > pre::-webkit-scrollbar-track {
            // border: 0;
        }
    }

    > dl > .box_noCode {

        border-top: 1px solid hsla(0, 0%, 0%, 0); // Bug Fix: Corrige espaçamento indesejado.
        border-bottom: 1px solid hsla(0, 0%, 0%, 0); // Bug Fix: Corrige espaçamento indesejado.
        border-left: 1px solid $color_theme_2;
        border-right: 1px solid $color_theme_2;
    
        *  {
            text-align: center;
        }

        dl {
            margin-left: $margin_horizontal;
        }

        dt::before { 
            content: "➭ "; 
        }
        
        dt  {
            font-weight: normal;
        }

        dd  {
            display: block;
            margin-top: $margin_vertical;
        }
    }

    > dl > .rendering_output, > dl > .console_output {
        border-top: 1px solid hsla(0, 0%, 0%, 0); // Bug Fix: Corrige espaçamento indesejado.
        border-bottom: 1px solid $color_theme_2;
        border-left: 1px solid $color_theme_2;
        border-right: 1px solid $color_theme_2;
    }

    > dl > .rendering_output {

        font-size: 0;
        
        > b0dy {
            display: block;
            min-height: 28.5px; // Este valor é válido tanto para a fonte Digital Disk quanto para Times.

            // Padrão dos navegadores:
            /* margin: 8px;
            font-family: Times, 'Times New Roman', Georgia, serif; */

            // Meu padrão:
            margin-top: 8px;
            margin-bottom: 8px;
        }

        > iframe {
            width: 100%;
            border: none;
        }
    }

    /* > dl > .rendering_output > b0dy:empty::before {
        content: "Saída da renderização.";
        color: hsl(0, 0%, 80%);
    } */

    > dl > .console_output > .console_line {
        min-height: 30.25px;
        padding: 2px 23px;
        /* font-family: Verdana, Geneva, Tahoma, sans-serif;
        font-size: 15.5px; // 16.5px; */ 
        font-family: $font_default_2;
        font-size: 17.5rem; // L.A.: 17rem
    }

    > dl > .console_output > .console_line + .console_line {
        border-top: 1px solid hsl(0, 0%, 93%);
    }

    /* > dl > .console_output > .console_line:nth-of-type(1):empty::before {
        content: "Saída do console.";
        color: hsl(0, 0%, 80%);
    } */

    > dl > .rendering_output, > dl > .console_output {
        background-color: white;
    }
}

.attention_2 .codeEx {

    $borderColor: hsl(353, 100%, 80%);
    $borderColor: hsl(0, 100%, 80%);

    > .header {
        
        > .label_ex > * { // Elemento criado via JS

            border: 1px solid $borderColor /* $color_border_token_red */;
            background: $bg_token_red;
            color: $color_text_token_red;        
        }

        > .description {
            
            border-top-color: $borderColor;
        }
    }

    > .assets, > .run {
        
        > .assets_dts_container, > .run_dts_container { // Elementos criados via JS

            filter: hue-rotate(157deg);
        }

        > .box_noCode {
            border-left-color: $borderColor;
            border-right-color: $borderColor;
        }
    }

    > dl > .rendering_output, > dl > .console_output {

        color: $color_text;
        border-left-color: $borderColor;
        border-right-color: $borderColor;
        border-bottom-color: $borderColor;
    }

    > .assets > .box_code {

        filter: hue-rotate(166deg);
    }
}

@media (min-width: $screen_small_widthLimit) {

    .codeEx {

        width: max-content; -moz-width: fit-content; width: -moz-fit-content; width: fit-content; /* <- Declarações necessárias 
        para garantir que o Firefox funcione como se suportasse 'width: fit-content'. (Ao menos 1 delas deve funcionar.) */

        max-width: 100%;

        margin-left: auto;
        margin-right: auto;
    }
}




/*  
◈──────────────────────────────────────────────────────◈
TODO: Others
◈──────────────────────────────────────────────────────◈ */

::selection { 
    
    color: hsl(195, 100%, 49%); 
    background-color: hsl(195, 100%, 95%); 
} 

hr {
    // <hr> antigo:
    
    // border-top: 1px solid $color_theme;
    // border-bottom: 0; 
    // background: $color_theme;
    // margin-top: $margin_vertical;
    // margin-bottom: $margin_vertical;
    // margin-left: $margin_horizontal;
    // margin-right: $margin_horizontal;

    // <hr> novo:

    height: 1px;
    border: 0;
    background: // imagem anexo origem extensão posição/tamanho repetição cor_de_fundo

    linear-gradient(to right, change-color($color_theme, $alpha: 0), $color_theme, change-color($color_theme, $alpha: 0)) 
    center center / 100% 1px no-repeat;

    margin-top: $margin_vertical;
    margin-bottom: $margin_vertical;
    margin-left: 10px;
    margin-right: 10px;
}

// Não apage esta regra comentada:
/*@media (min-width: $hr_stop) {

    hr {
        margin-left: 0;
        margin-right: 0;
    }
}*/

a, button:not(button[disabled], .disabled), input[type="radio"]:not(fieldset[disabled] input[type="radio"]), input[type="checkbox"]:not(fieldset[disabled] input[type="checkbox"]), select {
    
    cursor: pointer;
}

.lb { /* Line break */
    margin-top: $margin_vertical; 
    margin-bottom:  $margin_vertical;
} 

@for $i from 1 through 100 { 
    .lb#{$i} { /* Line break */
        margin-top: calc(#{$i} * #{$margin_vertical}); 
        margin-bottom:  calc(#{$i} * #{$margin_vertical});
    } 
}

/*
.content-left {
    text-align: left;
}

.content-center {
    text-align: center;
}

.content-right {
    text-align: right;
}

.content-justify {
    text-align: justify;
}
*/

// ------ center ------

.center {
    
    display: block !important;
    margin-left: auto !important;
    margin-right: auto !important;
}

.center.offset {
    
    margin-left: auto !important;
    margin-right: auto !important;
    max-width: calc(100% - (2 * #{$margin_horizontal}));
}

figure.center {
    
    text-align: center;
} 

.center.choice.horizontal {
    
    display: flex !important;
}

.center.offset.choice.dropdown_open {
    
    max-width: none;
}

.switch.button_full.center, .switch.button_text.center, .switch.button_icon.center, .switch.image.center, .switch.key_full.center, .switch.key_text.center, 
button.button_full.center, button.button_text.center, button.button_icon.center, button.image.center, 
a.button_full.center, a.button_text.center, a.button_icon.center, a.image.center {
    
    display: flex !important;
}

.switch.key_full.inverted.center, .switch.key_text.inverted.center {

    width: max-content; -moz-width: fit-content; width: -moz-fit-content; width: fit-content; /* <- Declarações necessárias 
    para garantir que o Firefox funcione como se suportasse 'width: fit-content'. (Ao menos 1 delas deve funcionar.) */
}
/* 
.gallery.center {

    // display: flex !important;
    display: none !important;
}

.gallery.gallery_fullScreen.center {

    display: flex !important;
    margin: 0 !important; 
}
 */
// ----------------------

.line {
    border: 1px solid black;
}

.hidden {
    display: none;
}

.button_height_small {
    height: $button_height_small;
}

.border_radius_big {
    @media (min-width: $screen_small_widthLimit) {

        border-radius: $border_radius_big;
    }
}

.cursor_pointer {
    cursor: pointer;
}

/*  TODO:    1 ▶ Screen
◈──────────────────────────────────────────────────────◈ */

.screen_small, .ss {
    
    @media (min-width: $screen_small_widthLimit) and (min-height: $screen_small_widthLimit)  {

        display: none !important;
    }
}

.screen_small_portrait, .ssp {
    
    @media  (orientation: landscape), (orientation: portrait) and (min-width: $screen_small_widthLimit) {

        display: none !important;
    }
}

.screen_small_landscape, .ssl  {
    
    @media (orientation: portrait), (orientation: landscape) and (min-height: $screen_small_widthLimit)  {

        display: none !important;
    }
}

/*
.screen_medium {

    @media (min-width: $screen_medium_widthLimit) and (min-height: $screen_medium_widthLimit)  {

        display: none !important;
    }
}
*/

.screen_not_small, .sns {
    
    @media (max-width: $screen_small_widthLimit), (max-height: $screen_small_widthLimit)  {

        display: none !important;
    }
}

.screen_not_small_portrait, .snsp {
    
    @media (orientation: portrait) and (max-width: $screen_small_widthLimit) {

        display: none !important;
    }
}

.screen_not_small_landscape, .snsl  {
    
    @media (orientation: landscape) and (max-height: $screen_small_widthLimit)  {

        display: none !important;
    }
}

/*  
◈──────────────────────────────────────────────────────◈
TODO: Development Classes
◈──────────────────────────────────────────────────────◈ */

.CSSimg_180x120 {

    width: 180px; 
    height: 120px; 
    background: url('../../images/exs/landscape.png') center /100% 100%;
}

.CSSimg_120x180 {

    width: 120px; 
    height: 180px; 
    background: url('../../images/exs/portrait.png') center /100% 100%;
}

.CSSimg_90x135 {

    width: 90px; 
    height: 135px; 
    background: url('../../images/exs/portrait.png') center /100% 100%;
}

/*  TODO:    1 ▶ Classes JS
◈──────────────────────────────────────────────────────◈ */

// Classes Genéricas Pra Serem Aplicadas Somente Via JS:

.display_none {
    
    display: none;
}

.overflow_hidden {
    
    overflow: hidden;
}



















